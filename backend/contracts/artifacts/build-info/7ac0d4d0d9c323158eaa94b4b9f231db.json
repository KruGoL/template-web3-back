{
	"id": "7ac0d4d0d9c323158eaa94b4b9f231db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GlobalChat.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\ncontract GlobalChat is Ownable, ReentrancyGuard {\n    using SafeERC20 for ERC20Burnable;\n\n    ERC20Burnable public tokenContract;\n    address public developerWallet;\n    uint256 public messageCost = 100; // Стоимость отправки одного сообщения в токенах\n    uint256 public developerFeePercentage = 10; // Комиссия разработчикам в процентах\n\n    struct Message {\n        address sender;\n        string content;\n        uint256 timestamp;\n    }\n\n    Message[] public messages;\n    mapping(address => uint256[]) public userMessages;\n\n    event MessageSent(address indexed from, string message);\n    event TokensBurned(uint256 amount);\n    event FeePaid(uint256 amount);\n\n    constructor(\n        address _tokenContract,\n        address _developerWallet\n    ) Ownable(msg.sender) {\n        tokenContract = ERC20Burnable(_tokenContract);\n        developerWallet = _developerWallet;\n        transferOwnership(msg.sender); // Set contract deployer as the owner\n    }\n\n    // Override the renounceOwnership function to prevent its use\n    function renounceOwnership() public override onlyOwner {\n        // Empty function body\n    }\n\n    //___________________________________________________________________________________________________________\n\n    // Added functions for securely changing contract parameters\n    function setMessageCost(uint256 _newCost) public onlyOwner {\n        messageCost = _newCost;\n    }\n\n    function setDeveloperFeePercentage(\n        uint256 _newPercentage\n    ) public onlyOwner {\n        require(_newPercentage <= 100, \"Invalid fee percentage\");\n        developerFeePercentage = _newPercentage;\n    }\n\n    //___________________________________________________________________________________________________________\n\n    // Main function for sending messages\n    // Main function for sending messages\n    function sendMessage(string memory _message) public nonReentrant {\n        uint256 developerFee = (messageCost * developerFeePercentage) / 100;\n        uint256 burnAmount = messageCost - developerFee;\n\n        tokenContract.safeTransferFrom(\n            msg.sender,\n            developerWallet,\n            developerFee\n        );\n        tokenContract.safeTransferFrom(msg.sender, address(this), burnAmount);\n        tokenContract.burn(burnAmount);\n\n        messages.push(Message(msg.sender, _message, block.timestamp));\n        userMessages[msg.sender].push(messages.length - 1);\n\n        emit FeePaid(developerFee);\n        emit TokensBurned(burnAmount);\n        emit MessageSent(msg.sender, _message);\n    }\n\n    //___________________________________________________________________________________________________________\n\n    // Function to get the total number of messages\n    function getTotalMessages() public view returns (uint256) {\n        return messages.length;\n    }\n\n    // Function to get message by index\n    function getMessageByIndex(\n        uint256 index\n    )\n        public\n        view\n        returns (address sender, string memory content, uint256 timestamp)\n    {\n        require(index < messages.length, \"Message index out of bounds\");\n        Message storage message = messages[index];\n        return (message.sender, message.content, message.timestamp);\n    }\n\n    // Function to get indexes of all user messages\n    function getUserMessageIndexes(\n        address user\n    ) public view returns (uint256[] memory) {\n        return userMessages[user];\n    }\n\n    // Function for retrieving messages from a specific user by the index of his message\n    function getUserMessageByIndex(\n        address user,\n        uint256 index\n    ) public view returns (string memory content, uint256 timestamp) {\n        require(\n            index < userMessages[user].length,\n            \"Message index out of bounds for user\"\n        );\n        uint256 globalIndex = userMessages[user][index];\n        Message storage message = messages[globalIndex];\n        return (message.content, message.timestamp);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/GlobalChat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/GlobalChat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1569,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GlobalChat.sol": {
				"GlobalChat": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_developerWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "MessageSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "developerFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developerWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getMessageByIndex",
							"outputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "content",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalMessages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getUserMessageByIndex",
							"outputs": [
								{
									"internalType": "string",
									"name": "content",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserMessageIndexes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "messages",
							"outputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "content",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_message",
									"type": "string"
								}
							],
							"name": "sendMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPercentage",
									"type": "uint256"
								}
							],
							"name": "setDeveloperFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newCost",
									"type": "uint256"
								}
							],
							"name": "setMessageCost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenContract",
							"outputs": [
								{
									"internalType": "contract ERC20Burnable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userMessages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GlobalChat.sol\":377:4408  contract GlobalChat is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GlobalChat.sol\":576:579  100 */\n  0x64\n    /* \"contracts/GlobalChat.sol\":547:579  uint256 public messageCost = 100 */\n  0x04\n  sstore\n    /* \"contracts/GlobalChat.sol\":714:716  10 */\n  0x0a\n    /* \"contracts/GlobalChat.sol\":674:716  uint256 public developerFeePercentage = 10 */\n  0x05\n  sstore\n    /* \"contracts/GlobalChat.sol\":1119:1406  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/GlobalChat.sol\":1211:1221  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/GlobalChat.sol\":1263:1277  _tokenContract */\n  dup2\n    /* \"contracts/GlobalChat.sol\":1233:1246  tokenContract */\n  0x02\n  0x00\n    /* \"contracts/GlobalChat.sol\":1233:1278  tokenContract = ERC20Burnable(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GlobalChat.sol\":1306:1322  _developerWallet */\n  dup1\n    /* \"contracts/GlobalChat.sol\":1288:1303  developerWallet */\n  0x03\n  0x00\n    /* \"contracts/GlobalChat.sol\":1288:1322  developerWallet = _developerWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GlobalChat.sol\":1332:1361  transferOwnership(msg.sender) */\n  tag_15\n    /* \"contracts/GlobalChat.sol\":1350:1360  msg.sender */\n  caller\n    /* \"contracts/GlobalChat.sol\":1332:1349  transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/GlobalChat.sol\":1332:1361  transferOwnership(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/GlobalChat.sol\":1119:1406  constructor(... */\n  pop\n  pop\n    /* \"contracts/GlobalChat.sol\":377:4408  contract GlobalChat is Ownable, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_25\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_29\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_32\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_39:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_40:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_50\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_39\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_41:\n    /* \"#utility.yul\":641:665   */\n  tag_52\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_40\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_53:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_42:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_55\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_41\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_58\n  tag_37\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":949:1068   */\ntag_57:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_59\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_42\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_60\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_43:\n    /* \"#utility.yul\":1445:1469   */\n  tag_62\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_40\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_10:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_64\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GlobalChat.sol\":377:4408  contract GlobalChat is Ownable, ReentrancyGuard {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GlobalChat.sol\":377:4408  contract GlobalChat is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x55a373d6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9428cda3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9428cda3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xad039fad\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xaface8cd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x55a373d6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7862f04c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x2024c1b7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2024c1b7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36913a40\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x38daefb6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x469c8110\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0d80fefd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1293092e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x147e9108\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x185870f9\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GlobalChat.sol\":895:920  Message[] public messages */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":547:579  uint256 public messageCost = 100 */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":3162:3259  function getTotalMessages() public view returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":511:541  address public developerWallet */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":3305:3668  function getMessageByIndex(... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":3961:4406  function getUserMessageByIndex(... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":1861:2073  function setDeveloperFeePercentage(... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/GlobalChat.sol\":2278:2989  function sendMessage(string memory _message) public nonReentrant {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/GlobalChat.sol\":471:505  ERC20Burnable public tokenContract */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":1478:1571  function renounceOwnership() public override onlyOwner {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/GlobalChat.sol\":674:716  uint256 public developerFeePercentage = 10 */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":926:975  mapping(address => uint256[]) public userMessages */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":3726:3866  function getUserMessageIndexes(... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GlobalChat.sol\":1757:1855  function setMessageCost(uint256 _newCost) public onlyOwner {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/GlobalChat.sol\":895:920  Message[] public messages */\n    tag_25:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":547:579  uint256 public messageCost = 100 */\n    tag_29:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":3162:3259  function getTotalMessages() public view returns (uint256) {... */\n    tag_33:\n        /* \"contracts/GlobalChat.sol\":3211:3218  uint256 */\n      0x00\n        /* \"contracts/GlobalChat.sol\":3237:3245  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":3237:3252  messages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":3230:3252  return messages.length */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":3162:3259  function getTotalMessages() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":511:541  address public developerWallet */\n    tag_36:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":3305:3668  function getMessageByIndex(... */\n    tag_41:\n        /* \"contracts/GlobalChat.sol\":3406:3420  address sender */\n      0x00\n        /* \"contracts/GlobalChat.sol\":3422:3443  string memory content */\n      0x60\n        /* \"contracts/GlobalChat.sol\":3445:3462  uint256 timestamp */\n      0x00\n        /* \"contracts/GlobalChat.sol\":3494:3502  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":3494:3509  messages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":3486:3491  index */\n      dup5\n        /* \"contracts/GlobalChat.sol\":3486:3509  index < messages.length */\n      lt\n        /* \"contracts/GlobalChat.sol\":3478:3541  require(index < messages.length, \"Message index out of bounds\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/GlobalChat.sol\":3551:3574  Message storage message */\n      0x00\n        /* \"contracts/GlobalChat.sol\":3577:3585  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":3586:3591  index */\n      dup6\n        /* \"contracts/GlobalChat.sol\":3577:3592  messages[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/GlobalChat.sol\":3551:3592  Message storage message = messages[index] */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":3610:3617  message */\n      dup1\n        /* \"contracts/GlobalChat.sol\":3610:3624  message.sender */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GlobalChat.sol\":3626:3633  message */\n      dup2\n        /* \"contracts/GlobalChat.sol\":3626:3641  message.content */\n      0x01\n      add\n        /* \"contracts/GlobalChat.sol\":3643:3650  message */\n      dup3\n        /* \"contracts/GlobalChat.sol\":3643:3660  message.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/GlobalChat.sol\":3602:3661  return (message.sender, message.content, message.timestamp) */\n      dup2\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_87\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_87\n      jump\t// in\n    tag_102:\n      dup1\n      iszero\n      tag_103\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_104\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_103)\n    tag_104:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_105:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_105\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contracts/GlobalChat.sol\":3305:3668  function getMessageByIndex(... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":3961:4406  function getUserMessageByIndex(... */\n    tag_46:\n        /* \"contracts/GlobalChat.sol\":4064:4085  string memory content */\n      0x60\n        /* \"contracts/GlobalChat.sol\":4087:4104  uint256 timestamp */\n      0x00\n        /* \"contracts/GlobalChat.sol\":4145:4157  userMessages */\n      0x07\n        /* \"contracts/GlobalChat.sol\":4145:4163  userMessages[user] */\n      0x00\n        /* \"contracts/GlobalChat.sol\":4158:4162  user */\n      dup6\n        /* \"contracts/GlobalChat.sol\":4145:4163  userMessages[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GlobalChat.sol\":4145:4170  userMessages[user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":4137:4142  index */\n      dup4\n        /* \"contracts/GlobalChat.sol\":4137:4170  index < userMessages[user].length */\n      lt\n        /* \"contracts/GlobalChat.sol\":4116:4232  require(... */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/GlobalChat.sol\":4242:4261  uint256 globalIndex */\n      0x00\n        /* \"contracts/GlobalChat.sol\":4264:4276  userMessages */\n      0x07\n        /* \"contracts/GlobalChat.sol\":4264:4282  userMessages[user] */\n      0x00\n        /* \"contracts/GlobalChat.sol\":4277:4281  user */\n      dup7\n        /* \"contracts/GlobalChat.sol\":4264:4282  userMessages[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GlobalChat.sol\":4283:4288  index */\n      dup5\n        /* \"contracts/GlobalChat.sol\":4264:4289  userMessages[user][index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_99\n      jump\t// in\n    tag_111:\n    tag_110:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/GlobalChat.sol\":4242:4289  uint256 globalIndex = userMessages[user][index] */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":4299:4322  Message storage message */\n      0x00\n        /* \"contracts/GlobalChat.sol\":4325:4333  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":4334:4345  globalIndex */\n      dup3\n        /* \"contracts/GlobalChat.sol\":4325:4346  messages[globalIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_99\n      jump\t// in\n    tag_114:\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/GlobalChat.sol\":4299:4346  Message storage message = messages[globalIndex] */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":4364:4371  message */\n      dup1\n        /* \"contracts/GlobalChat.sol\":4364:4379  message.content */\n      0x01\n      add\n        /* \"contracts/GlobalChat.sol\":4381:4388  message */\n      dup2\n        /* \"contracts/GlobalChat.sol\":4381:4398  message.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/GlobalChat.sol\":4356:4399  return (message.content, message.timestamp) */\n      dup2\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_87\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_87\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/GlobalChat.sol\":3961:4406  function getUserMessageByIndex(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":1861:2073  function setDeveloperFeePercentage(... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/GlobalChat.sol\":1987:1990  100 */\n      0x64\n        /* \"contracts/GlobalChat.sol\":1969:1983  _newPercentage */\n      dup2\n        /* \"contracts/GlobalChat.sol\":1969:1990  _newPercentage <= 100 */\n      gt\n      iszero\n        /* \"contracts/GlobalChat.sol\":1961:2017  require(_newPercentage <= 100, \"Invalid fee percentage\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/GlobalChat.sol\":2052:2066  _newPercentage */\n      dup1\n        /* \"contracts/GlobalChat.sol\":2027:2049  developerFeePercentage */\n      0x05\n        /* \"contracts/GlobalChat.sol\":2027:2066  developerFeePercentage = _newPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GlobalChat.sol\":1861:2073  function setDeveloperFeePercentage(... */\n      pop\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":2278:2989  function sendMessage(string memory _message) public nonReentrant {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_129\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/GlobalChat.sol\":2353:2373  uint256 developerFee */\n      0x00\n        /* \"contracts/GlobalChat.sol\":2417:2420  100 */\n      0x64\n        /* \"contracts/GlobalChat.sol\":2391:2413  developerFeePercentage */\n      sload(0x05)\n        /* \"contracts/GlobalChat.sol\":2377:2388  messageCost */\n      sload(0x04)\n        /* \"contracts/GlobalChat.sol\":2377:2413  messageCost * developerFeePercentage */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/GlobalChat.sol\":2376:2420  (messageCost * developerFeePercentage) / 100 */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/GlobalChat.sol\":2353:2420  uint256 developerFee = (messageCost * developerFeePercentage) / 100 */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":2430:2448  uint256 burnAmount */\n      0x00\n        /* \"contracts/GlobalChat.sol\":2465:2477  developerFee */\n      dup2\n        /* \"contracts/GlobalChat.sol\":2451:2462  messageCost */\n      sload(0x04)\n        /* \"contracts/GlobalChat.sol\":2451:2477  messageCost - developerFee */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/GlobalChat.sol\":2430:2477  uint256 burnAmount = messageCost - developerFee */\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":2488:2607  tokenContract.safeTransferFrom(... */\n      tag_138\n        /* \"contracts/GlobalChat.sol\":2532:2542  msg.sender */\n      caller\n        /* \"contracts/GlobalChat.sol\":2556:2571  developerWallet */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GlobalChat.sol\":2585:2597  developerFee */\n      dup5\n        /* \"contracts/GlobalChat.sol\":2488:2501  tokenContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GlobalChat.sol\":2488:2518  tokenContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_139\n      swap1\n        /* \"contracts/GlobalChat.sol\":2488:2607  tokenContract.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/GlobalChat.sol\":2617:2686  tokenContract.safeTransferFrom(msg.sender, address(this), burnAmount) */\n      tag_140\n        /* \"contracts/GlobalChat.sol\":2648:2658  msg.sender */\n      caller\n        /* \"contracts/GlobalChat.sol\":2668:2672  this */\n      address\n        /* \"contracts/GlobalChat.sol\":2675:2685  burnAmount */\n      dup4\n        /* \"contracts/GlobalChat.sol\":2617:2630  tokenContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GlobalChat.sol\":2617:2647  tokenContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_139\n      swap1\n        /* \"contracts/GlobalChat.sol\":2617:2686  tokenContract.safeTransferFrom(msg.sender, address(this), burnAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/GlobalChat.sol\":2696:2709  tokenContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GlobalChat.sol\":2696:2714  tokenContract.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/GlobalChat.sol\":2715:2725  burnAmount */\n      dup3\n        /* \"contracts/GlobalChat.sol\":2696:2726  tokenContract.burn(burnAmount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/GlobalChat.sol\":2737:2745  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":2751:2797  Message(msg.sender, _message, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/GlobalChat.sol\":2759:2769  msg.sender */\n      caller\n        /* \"contracts/GlobalChat.sol\":2751:2797  Message(msg.sender, _message, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/GlobalChat.sol\":2771:2779  _message */\n      dup6\n        /* \"contracts/GlobalChat.sol\":2751:2797  Message(msg.sender, _message, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/GlobalChat.sol\":2781:2796  block.timestamp */\n      timestamp\n        /* \"contracts/GlobalChat.sol\":2751:2797  Message(msg.sender, _message, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/GlobalChat.sol\":2737:2798  messages.push(Message(msg.sender, _message, block.timestamp)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/GlobalChat.sol\":2808:2820  userMessages */\n      0x07\n        /* \"contracts/GlobalChat.sol\":2808:2832  userMessages[msg.sender] */\n      0x00\n        /* \"contracts/GlobalChat.sol\":2821:2831  msg.sender */\n      caller\n        /* \"contracts/GlobalChat.sol\":2808:2832  userMessages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GlobalChat.sol\":2856:2857  1 */\n      0x01\n        /* \"contracts/GlobalChat.sol\":2838:2846  messages */\n      0x06\n        /* \"contracts/GlobalChat.sol\":2838:2853  messages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":2838:2857  messages.length - 1 */\n      tag_148\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_148:\n        /* \"contracts/GlobalChat.sol\":2808:2858  userMessages[msg.sender].push(messages.length - 1) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/GlobalChat.sol\":2874:2895  FeePaid(developerFee) */\n      0x69e27f80547602d16208b028c44d20f25956e1fb7d0f51d62aa02f392426f371\n        /* \"contracts/GlobalChat.sol\":2882:2894  developerFee */\n      dup3\n        /* \"contracts/GlobalChat.sol\":2874:2895  FeePaid(developerFee) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GlobalChat.sol\":2910:2934  TokensBurned(burnAmount) */\n      0x6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7\n        /* \"contracts/GlobalChat.sol\":2923:2933  burnAmount */\n      dup2\n        /* \"contracts/GlobalChat.sol\":2910:2934  TokensBurned(burnAmount) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GlobalChat.sol\":2961:2971  msg.sender */\n      caller\n        /* \"contracts/GlobalChat.sol\":2949:2982  MessageSent(msg.sender, _message) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e8130\n        /* \"contracts/GlobalChat.sol\":2973:2981  _message */\n      dup5\n        /* \"contracts/GlobalChat.sol\":2949:2982  MessageSent(msg.sender, _message) */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GlobalChat.sol\":2343:2989  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/GlobalChat.sol\":2278:2989  function sendMessage(string memory _message) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":471:505  ERC20Burnable public tokenContract */\n    tag_57:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":1478:1571  function renounceOwnership() public override onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/GlobalChat.sol\":1478:1571  function renounceOwnership() public override onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":674:716  uint256 public developerFeePercentage = 10 */\n    tag_63:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":926:975  mapping(address => uint256[]) public userMessages */\n    tag_70:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":3726:3866  function getUserMessageIndexes(... */\n    tag_75:\n        /* \"contracts/GlobalChat.sol\":3806:3822  uint256[] memory */\n      0x60\n        /* \"contracts/GlobalChat.sol\":3841:3853  userMessages */\n      0x07\n        /* \"contracts/GlobalChat.sol\":3841:3859  userMessages[user] */\n      0x00\n        /* \"contracts/GlobalChat.sol\":3854:3858  user */\n      dup4\n        /* \"contracts/GlobalChat.sol\":3841:3859  userMessages[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GlobalChat.sol\":3834:3859  return userMessages[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GlobalChat.sol\":3726:3866  function getUserMessageIndexes(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GlobalChat.sol\":1757:1855  function setMessageCost(uint256 _newCost) public onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/GlobalChat.sol\":1840:1848  _newCost */\n      dup1\n        /* \"contracts/GlobalChat.sol\":1826:1837  messageCost */\n      0x04\n        /* \"contracts/GlobalChat.sol\":1826:1848  messageCost = _newCost */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GlobalChat.sol\":1757:1855  function setMessageCost(uint256 _newCost) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_194\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_201\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_210\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_209)\n    tag_210:\n      0x60\n      swap2\n      pop\n    tag_209:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_217)\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_213)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_213:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_224:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_225:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_226:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_227:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_228:\n        /* \"#utility.yul\":490:514   */\n      tag_297\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_227\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_298:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_229:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_300\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_24:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_303\n      tag_225\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":766:885   */\n    tag_302:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_304\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_229\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_230:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_231:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_307\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_230\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_232:\n        /* \"#utility.yul\":1346:1370   */\n      tag_309\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_231\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1482   */\n    tag_233:\n        /* \"#utility.yul\":1435:1441   */\n      0x00\n        /* \"#utility.yul\":1469:1474   */\n      dup2\n        /* \"#utility.yul\":1463:1475   */\n      mload\n        /* \"#utility.yul\":1453:1475   */\n      swap1\n      pop\n        /* \"#utility.yul\":1383:1482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1488:1657   */\n    tag_234:\n        /* \"#utility.yul\":1572:1583   */\n      0x00\n        /* \"#utility.yul\":1606:1612   */\n      dup3\n        /* \"#utility.yul\":1601:1604   */\n      dup3\n        /* \"#utility.yul\":1594:1613   */\n      mstore\n        /* \"#utility.yul\":1646:1650   */\n      0x20\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1637:1651   */\n      add\n        /* \"#utility.yul\":1622:1651   */\n      swap1\n      pop\n        /* \"#utility.yul\":1488:1657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1663:1802   */\n    tag_235:\n        /* \"#utility.yul\":1752:1758   */\n      dup3\n        /* \"#utility.yul\":1747:1750   */\n      dup2\n        /* \"#utility.yul\":1742:1745   */\n      dup4\n        /* \"#utility.yul\":1736:1759   */\n      mcopy\n        /* \"#utility.yul\":1793:1794   */\n      0x00\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1779:1782   */\n      dup4\n        /* \"#utility.yul\":1775:1791   */\n      add\n        /* \"#utility.yul\":1768:1795   */\n      mstore\n        /* \"#utility.yul\":1663:1802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1910   */\n    tag_236:\n        /* \"#utility.yul\":1849:1855   */\n      0x00\n        /* \"#utility.yul\":1900:1902   */\n      0x1f\n        /* \"#utility.yul\":1896:1903   */\n      not\n        /* \"#utility.yul\":1891:1893   */\n      0x1f\n        /* \"#utility.yul\":1884:1889   */\n      dup4\n        /* \"#utility.yul\":1880:1894   */\n      add\n        /* \"#utility.yul\":1876:1904   */\n      and\n        /* \"#utility.yul\":1866:1904   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2293   */\n    tag_237:\n        /* \"#utility.yul\":2004:2007   */\n      0x00\n        /* \"#utility.yul\":2032:2071   */\n      tag_315\n        /* \"#utility.yul\":2065:2070   */\n      dup3\n        /* \"#utility.yul\":2032:2071   */\n      tag_233\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2087:2158   */\n      tag_316\n        /* \"#utility.yul\":2151:2157   */\n      dup2\n        /* \"#utility.yul\":2146:2149   */\n      dup6\n        /* \"#utility.yul\":2087:2158   */\n      tag_234\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2080:2158   */\n      swap4\n      pop\n        /* \"#utility.yul\":2167:2232   */\n      tag_317\n        /* \"#utility.yul\":2225:2231   */\n      dup2\n        /* \"#utility.yul\":2220:2223   */\n      dup6\n        /* \"#utility.yul\":2213:2217   */\n      0x20\n        /* \"#utility.yul\":2206:2211   */\n      dup7\n        /* \"#utility.yul\":2202:2218   */\n      add\n        /* \"#utility.yul\":2167:2232   */\n      tag_235\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2257:2286   */\n      tag_318\n        /* \"#utility.yul\":2279:2285   */\n      dup2\n        /* \"#utility.yul\":2257:2286   */\n      tag_236\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2252:2255   */\n      dup5\n        /* \"#utility.yul\":2248:2287   */\n      add\n        /* \"#utility.yul\":2241:2287   */\n      swap2\n      pop\n        /* \"#utility.yul\":2008:2293   */\n      pop\n        /* \"#utility.yul\":1916:2293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2417   */\n    tag_238:\n        /* \"#utility.yul\":2386:2410   */\n      tag_320\n        /* \"#utility.yul\":2404:2409   */\n      dup2\n        /* \"#utility.yul\":2386:2410   */\n      tag_227\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2381:2384   */\n      dup3\n        /* \"#utility.yul\":2374:2411   */\n      mstore\n        /* \"#utility.yul\":2299:2417   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2423:2956   */\n    tag_27:\n        /* \"#utility.yul\":2592:2596   */\n      0x00\n        /* \"#utility.yul\":2630:2632   */\n      0x60\n        /* \"#utility.yul\":2619:2628   */\n      dup3\n        /* \"#utility.yul\":2615:2633   */\n      add\n        /* \"#utility.yul\":2607:2633   */\n      swap1\n      pop\n        /* \"#utility.yul\":2643:2714   */\n      tag_322\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2696:2713   */\n      add\n        /* \"#utility.yul\":2687:2693   */\n      dup7\n        /* \"#utility.yul\":2643:2714   */\n      tag_232\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2761:2770   */\n      dup2\n        /* \"#utility.yul\":2755:2759   */\n      dup2\n        /* \"#utility.yul\":2751:2771   */\n      sub\n        /* \"#utility.yul\":2746:2748   */\n      0x20\n        /* \"#utility.yul\":2735:2744   */\n      dup4\n        /* \"#utility.yul\":2731:2749   */\n      add\n        /* \"#utility.yul\":2724:2772   */\n      mstore\n        /* \"#utility.yul\":2789:2867   */\n      tag_323\n        /* \"#utility.yul\":2862:2866   */\n      dup2\n        /* \"#utility.yul\":2853:2859   */\n      dup6\n        /* \"#utility.yul\":2789:2867   */\n      tag_237\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2781:2867   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:2949   */\n      tag_324\n        /* \"#utility.yul\":2945:2947   */\n      0x40\n        /* \"#utility.yul\":2934:2943   */\n      dup4\n        /* \"#utility.yul\":2930:2948   */\n      add\n        /* \"#utility.yul\":2921:2927   */\n      dup5\n        /* \"#utility.yul\":2877:2949   */\n      tag_238\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2423:2956   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2962:3184   */\n    tag_31:\n        /* \"#utility.yul\":3055:3059   */\n      0x00\n        /* \"#utility.yul\":3093:3095   */\n      0x20\n        /* \"#utility.yul\":3082:3091   */\n      dup3\n        /* \"#utility.yul\":3078:3096   */\n      add\n        /* \"#utility.yul\":3070:3096   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3177   */\n      tag_326\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3159:3176   */\n      add\n        /* \"#utility.yul\":3150:3156   */\n      dup5\n        /* \"#utility.yul\":3106:3177   */\n      tag_238\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2962:3184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3190:3412   */\n    tag_38:\n        /* \"#utility.yul\":3283:3287   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3310:3319   */\n      dup3\n        /* \"#utility.yul\":3306:3324   */\n      add\n        /* \"#utility.yul\":3298:3324   */\n      swap1\n      pop\n        /* \"#utility.yul\":3334:3405   */\n      tag_328\n        /* \"#utility.yul\":3402:3403   */\n      0x00\n        /* \"#utility.yul\":3391:3400   */\n      dup4\n        /* \"#utility.yul\":3387:3404   */\n      add\n        /* \"#utility.yul\":3378:3384   */\n      dup5\n        /* \"#utility.yul\":3334:3405   */\n      tag_232\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3190:3412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3418:3540   */\n    tag_239:\n        /* \"#utility.yul\":3491:3515   */\n      tag_330\n        /* \"#utility.yul\":3509:3514   */\n      dup2\n        /* \"#utility.yul\":3491:3515   */\n      tag_231\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3484:3489   */\n      dup2\n        /* \"#utility.yul\":3481:3516   */\n      eq\n        /* \"#utility.yul\":3471:3534   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3527:3528   */\n      dup1\n        /* \"#utility.yul\":3520:3532   */\n      revert\n        /* \"#utility.yul\":3471:3534   */\n    tag_331:\n        /* \"#utility.yul\":3418:3540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3546:3685   */\n    tag_240:\n        /* \"#utility.yul\":3592:3597   */\n      0x00\n        /* \"#utility.yul\":3630:3636   */\n      dup2\n        /* \"#utility.yul\":3617:3637   */\n      calldataload\n        /* \"#utility.yul\":3608:3637   */\n      swap1\n      pop\n        /* \"#utility.yul\":3646:3679   */\n      tag_333\n        /* \"#utility.yul\":3673:3678   */\n      dup2\n        /* \"#utility.yul\":3646:3679   */\n      tag_239\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3546:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4165   */\n    tag_45:\n        /* \"#utility.yul\":3759:3765   */\n      0x00\n        /* \"#utility.yul\":3767:3773   */\n      dup1\n        /* \"#utility.yul\":3816:3818   */\n      0x40\n        /* \"#utility.yul\":3804:3813   */\n      dup4\n        /* \"#utility.yul\":3795:3802   */\n      dup6\n        /* \"#utility.yul\":3791:3814   */\n      sub\n        /* \"#utility.yul\":3787:3819   */\n      slt\n        /* \"#utility.yul\":3784:3903   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3822:3901   */\n      tag_336\n      tag_225\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3784:3903   */\n    tag_335:\n        /* \"#utility.yul\":3942:3943   */\n      0x00\n        /* \"#utility.yul\":3967:4020   */\n      tag_337\n        /* \"#utility.yul\":4012:4019   */\n      dup6\n        /* \"#utility.yul\":4003:4009   */\n      dup3\n        /* \"#utility.yul\":3992:4001   */\n      dup7\n        /* \"#utility.yul\":3988:4010   */\n      add\n        /* \"#utility.yul\":3967:4020   */\n      tag_240\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3957:4020   */\n      swap3\n      pop\n        /* \"#utility.yul\":3913:4030   */\n      pop\n        /* \"#utility.yul\":4069:4071   */\n      0x20\n        /* \"#utility.yul\":4095:4148   */\n      tag_338\n        /* \"#utility.yul\":4140:4147   */\n      dup6\n        /* \"#utility.yul\":4131:4137   */\n      dup3\n        /* \"#utility.yul\":4120:4129   */\n      dup7\n        /* \"#utility.yul\":4116:4138   */\n      add\n        /* \"#utility.yul\":4095:4148   */\n      tag_229\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4085:4148   */\n      swap2\n      pop\n        /* \"#utility.yul\":4040:4158   */\n      pop\n        /* \"#utility.yul\":3691:4165   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4594   */\n    tag_48:\n        /* \"#utility.yul\":4312:4316   */\n      0x00\n        /* \"#utility.yul\":4350:4352   */\n      0x40\n        /* \"#utility.yul\":4339:4348   */\n      dup3\n        /* \"#utility.yul\":4335:4353   */\n      add\n        /* \"#utility.yul\":4327:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4399:4408   */\n      dup2\n        /* \"#utility.yul\":4393:4397   */\n      dup2\n        /* \"#utility.yul\":4389:4409   */\n      sub\n        /* \"#utility.yul\":4385:4386   */\n      0x00\n        /* \"#utility.yul\":4374:4383   */\n      dup4\n        /* \"#utility.yul\":4370:4387   */\n      add\n        /* \"#utility.yul\":4363:4410   */\n      mstore\n        /* \"#utility.yul\":4427:4505   */\n      tag_340\n        /* \"#utility.yul\":4500:4504   */\n      dup2\n        /* \"#utility.yul\":4491:4497   */\n      dup6\n        /* \"#utility.yul\":4427:4505   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4419:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4515:4587   */\n      tag_341\n        /* \"#utility.yul\":4583:4585   */\n      0x20\n        /* \"#utility.yul\":4572:4581   */\n      dup4\n        /* \"#utility.yul\":4568:4586   */\n      add\n        /* \"#utility.yul\":4559:4565   */\n      dup5\n        /* \"#utility.yul\":4515:4587   */\n      tag_238\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4171:4594   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4600:4717   */\n    tag_241:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4706:4707   */\n      dup1\n        /* \"#utility.yul\":4699:4711   */\n      revert\n        /* \"#utility.yul\":4723:4840   */\n    tag_242:\n        /* \"#utility.yul\":4832:4833   */\n      0x00\n        /* \"#utility.yul\":4829:4830   */\n      dup1\n        /* \"#utility.yul\":4822:4834   */\n      revert\n        /* \"#utility.yul\":4846:5026   */\n    tag_243:\n        /* \"#utility.yul\":4894:4971   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4891:4892   */\n      0x00\n        /* \"#utility.yul\":4884:4972   */\n      mstore\n        /* \"#utility.yul\":4991:4995   */\n      0x41\n        /* \"#utility.yul\":4988:4989   */\n      0x04\n        /* \"#utility.yul\":4981:4996   */\n      mstore\n        /* \"#utility.yul\":5015:5019   */\n      0x24\n        /* \"#utility.yul\":5012:5013   */\n      0x00\n        /* \"#utility.yul\":5005:5020   */\n      revert\n        /* \"#utility.yul\":5032:5313   */\n    tag_244:\n        /* \"#utility.yul\":5115:5142   */\n      tag_346\n        /* \"#utility.yul\":5137:5141   */\n      dup3\n        /* \"#utility.yul\":5115:5142   */\n      tag_236\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5107:5113   */\n      dup2\n        /* \"#utility.yul\":5103:5143   */\n      add\n        /* \"#utility.yul\":5245:5251   */\n      dup2\n        /* \"#utility.yul\":5233:5243   */\n      dup2\n        /* \"#utility.yul\":5230:5252   */\n      lt\n        /* \"#utility.yul\":5209:5227   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5197:5207   */\n      dup3\n        /* \"#utility.yul\":5194:5228   */\n      gt\n        /* \"#utility.yul\":5191:5253   */\n      or\n        /* \"#utility.yul\":5188:5276   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5256:5274   */\n      tag_348\n      tag_243\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5188:5276   */\n    tag_347:\n        /* \"#utility.yul\":5296:5306   */\n      dup1\n        /* \"#utility.yul\":5292:5294   */\n      0x40\n        /* \"#utility.yul\":5285:5307   */\n      mstore\n        /* \"#utility.yul\":5075:5313   */\n      pop\n        /* \"#utility.yul\":5032:5313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5319:5448   */\n    tag_245:\n        /* \"#utility.yul\":5353:5359   */\n      0x00\n        /* \"#utility.yul\":5380:5400   */\n      tag_350\n      tag_224\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5370:5400   */\n      swap1\n      pop\n        /* \"#utility.yul\":5409:5442   */\n      tag_351\n        /* \"#utility.yul\":5437:5441   */\n      dup3\n        /* \"#utility.yul\":5429:5435   */\n      dup3\n        /* \"#utility.yul\":5409:5442   */\n      tag_244\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5319:5448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5454:5762   */\n    tag_246:\n        /* \"#utility.yul\":5516:5520   */\n      0x00\n        /* \"#utility.yul\":5606:5624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5598:5604   */\n      dup3\n        /* \"#utility.yul\":5595:5625   */\n      gt\n        /* \"#utility.yul\":5592:5648   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5628:5646   */\n      tag_354\n      tag_243\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5592:5648   */\n    tag_353:\n        /* \"#utility.yul\":5666:5695   */\n      tag_355\n        /* \"#utility.yul\":5688:5694   */\n      dup3\n        /* \"#utility.yul\":5666:5695   */\n      tag_236\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5658:5695   */\n      swap1\n      pop\n        /* \"#utility.yul\":5750:5754   */\n      0x20\n        /* \"#utility.yul\":5744:5748   */\n      dup2\n        /* \"#utility.yul\":5740:5755   */\n      add\n        /* \"#utility.yul\":5732:5755   */\n      swap1\n      pop\n        /* \"#utility.yul\":5454:5762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5916   */\n    tag_247:\n        /* \"#utility.yul\":5866:5872   */\n      dup3\n        /* \"#utility.yul\":5861:5864   */\n      dup2\n        /* \"#utility.yul\":5856:5859   */\n      dup4\n        /* \"#utility.yul\":5843:5873   */\n      calldatacopy\n        /* \"#utility.yul\":5907:5908   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup4\n        /* \"#utility.yul\":5893:5896   */\n      dup4\n        /* \"#utility.yul\":5889:5905   */\n      add\n        /* \"#utility.yul\":5882:5909   */\n      mstore\n        /* \"#utility.yul\":5768:5916   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6347   */\n    tag_248:\n        /* \"#utility.yul\":6000:6005   */\n      0x00\n        /* \"#utility.yul\":6025:6091   */\n      tag_358\n        /* \"#utility.yul\":6041:6090   */\n      tag_359\n        /* \"#utility.yul\":6083:6089   */\n      dup5\n        /* \"#utility.yul\":6041:6090   */\n      tag_246\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6025:6091   */\n      tag_245\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6016:6091   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6120   */\n      dup3\n        /* \"#utility.yul\":6107:6112   */\n      dup2\n        /* \"#utility.yul\":6100:6121   */\n      mstore\n        /* \"#utility.yul\":6152:6156   */\n      0x20\n        /* \"#utility.yul\":6145:6150   */\n      dup2\n        /* \"#utility.yul\":6141:6157   */\n      add\n        /* \"#utility.yul\":6190:6193   */\n      dup5\n        /* \"#utility.yul\":6181:6187   */\n      dup5\n        /* \"#utility.yul\":6176:6179   */\n      dup5\n        /* \"#utility.yul\":6172:6188   */\n      add\n        /* \"#utility.yul\":6169:6194   */\n      gt\n        /* \"#utility.yul\":6166:6278   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":6197:6276   */\n      tag_361\n      tag_242\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6166:6278   */\n    tag_360:\n        /* \"#utility.yul\":6287:6341   */\n      tag_362\n        /* \"#utility.yul\":6334:6340   */\n      dup5\n        /* \"#utility.yul\":6329:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6327   */\n      dup6\n        /* \"#utility.yul\":6287:6341   */\n      tag_247\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6006:6347   */\n      pop\n        /* \"#utility.yul\":5922:6347   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6707   */\n    tag_249:\n        /* \"#utility.yul\":6423:6428   */\n      0x00\n        /* \"#utility.yul\":6472:6475   */\n      dup3\n        /* \"#utility.yul\":6465:6469   */\n      0x1f\n        /* \"#utility.yul\":6457:6463   */\n      dup4\n        /* \"#utility.yul\":6453:6470   */\n      add\n        /* \"#utility.yul\":6449:6476   */\n      slt\n        /* \"#utility.yul\":6439:6561   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":6480:6559   */\n      tag_365\n      tag_241\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6439:6561   */\n    tag_364:\n        /* \"#utility.yul\":6597:6603   */\n      dup2\n        /* \"#utility.yul\":6584:6604   */\n      calldataload\n        /* \"#utility.yul\":6622:6701   */\n      tag_366\n        /* \"#utility.yul\":6697:6700   */\n      dup5\n        /* \"#utility.yul\":6689:6695   */\n      dup3\n        /* \"#utility.yul\":6682:6686   */\n      0x20\n        /* \"#utility.yul\":6674:6680   */\n      dup7\n        /* \"#utility.yul\":6670:6687   */\n      add\n        /* \"#utility.yul\":6622:6701   */\n      tag_248\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6613:6701   */\n      swap2\n      pop\n        /* \"#utility.yul\":6429:6707   */\n      pop\n        /* \"#utility.yul\":6367:6707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6713:7222   */\n    tag_54:\n        /* \"#utility.yul\":6782:6788   */\n      0x00\n        /* \"#utility.yul\":6831:6833   */\n      0x20\n        /* \"#utility.yul\":6819:6828   */\n      dup3\n        /* \"#utility.yul\":6810:6817   */\n      dup5\n        /* \"#utility.yul\":6806:6829   */\n      sub\n        /* \"#utility.yul\":6802:6834   */\n      slt\n        /* \"#utility.yul\":6799:6918   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":6837:6916   */\n      tag_369\n      tag_225\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6799:6918   */\n    tag_368:\n        /* \"#utility.yul\":6985:6986   */\n      0x00\n        /* \"#utility.yul\":6974:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6987   */\n      add\n        /* \"#utility.yul\":6957:6988   */\n      calldataload\n        /* \"#utility.yul\":7015:7033   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7007:7013   */\n      dup2\n        /* \"#utility.yul\":7004:7034   */\n      gt\n        /* \"#utility.yul\":7001:7118   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7037:7116   */\n      tag_371\n      tag_226\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7001:7118   */\n    tag_370:\n        /* \"#utility.yul\":7142:7205   */\n      tag_372\n        /* \"#utility.yul\":7197:7204   */\n      dup5\n        /* \"#utility.yul\":7188:7194   */\n      dup3\n        /* \"#utility.yul\":7177:7186   */\n      dup6\n        /* \"#utility.yul\":7173:7195   */\n      add\n        /* \"#utility.yul\":7142:7205   */\n      tag_249\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7132:7205   */\n      swap2\n      pop\n        /* \"#utility.yul\":6928:7215   */\n      pop\n        /* \"#utility.yul\":6713:7222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7228:7288   */\n    tag_250:\n        /* \"#utility.yul\":7256:7259   */\n      0x00\n        /* \"#utility.yul\":7277:7282   */\n      dup2\n        /* \"#utility.yul\":7270:7282   */\n      swap1\n      pop\n        /* \"#utility.yul\":7228:7288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7294:7436   */\n    tag_251:\n        /* \"#utility.yul\":7344:7353   */\n      0x00\n        /* \"#utility.yul\":7377:7430   */\n      tag_375\n        /* \"#utility.yul\":7395:7429   */\n      tag_376\n        /* \"#utility.yul\":7404:7428   */\n      tag_377\n        /* \"#utility.yul\":7422:7427   */\n      dup5\n        /* \"#utility.yul\":7404:7428   */\n      tag_230\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7395:7429   */\n      tag_250\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7377:7430   */\n      tag_230\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7364:7430   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7442:7568   */\n    tag_252:\n        /* \"#utility.yul\":7492:7501   */\n      0x00\n        /* \"#utility.yul\":7525:7562   */\n      tag_379\n        /* \"#utility.yul\":7556:7561   */\n      dup3\n        /* \"#utility.yul\":7525:7562   */\n      tag_251\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7512:7562   */\n      swap1\n      pop\n        /* \"#utility.yul\":7442:7568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7574:7721   */\n    tag_253:\n        /* \"#utility.yul\":7645:7654   */\n      0x00\n        /* \"#utility.yul\":7678:7715   */\n      tag_381\n        /* \"#utility.yul\":7709:7714   */\n      dup3\n        /* \"#utility.yul\":7678:7715   */\n      tag_252\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7665:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7574:7721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7727:7900   */\n    tag_254:\n        /* \"#utility.yul\":7835:7893   */\n      tag_383\n        /* \"#utility.yul\":7887:7892   */\n      dup2\n        /* \"#utility.yul\":7835:7893   */\n      tag_253\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7830:7833   */\n      dup3\n        /* \"#utility.yul\":7823:7894   */\n      mstore\n        /* \"#utility.yul\":7727:7900   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8170   */\n    tag_59:\n        /* \"#utility.yul\":8020:8024   */\n      0x00\n        /* \"#utility.yul\":8058:8060   */\n      0x20\n        /* \"#utility.yul\":8047:8056   */\n      dup3\n        /* \"#utility.yul\":8043:8061   */\n      add\n        /* \"#utility.yul\":8035:8061   */\n      swap1\n      pop\n        /* \"#utility.yul\":8071:8163   */\n      tag_385\n        /* \"#utility.yul\":8160:8161   */\n      0x00\n        /* \"#utility.yul\":8149:8158   */\n      dup4\n        /* \"#utility.yul\":8145:8162   */\n      add\n        /* \"#utility.yul\":8136:8142   */\n      dup5\n        /* \"#utility.yul\":8071:8163   */\n      tag_254\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7906:8170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8176:8505   */\n    tag_74:\n        /* \"#utility.yul\":8235:8241   */\n      0x00\n        /* \"#utility.yul\":8284:8286   */\n      0x20\n        /* \"#utility.yul\":8272:8281   */\n      dup3\n        /* \"#utility.yul\":8263:8270   */\n      dup5\n        /* \"#utility.yul\":8259:8282   */\n      sub\n        /* \"#utility.yul\":8255:8287   */\n      slt\n        /* \"#utility.yul\":8252:8371   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8290:8369   */\n      tag_388\n      tag_225\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8252:8371   */\n    tag_387:\n        /* \"#utility.yul\":8410:8411   */\n      0x00\n        /* \"#utility.yul\":8435:8488   */\n      tag_389\n        /* \"#utility.yul\":8480:8487   */\n      dup5\n        /* \"#utility.yul\":8471:8477   */\n      dup3\n        /* \"#utility.yul\":8460:8469   */\n      dup6\n        /* \"#utility.yul\":8456:8478   */\n      add\n        /* \"#utility.yul\":8435:8488   */\n      tag_240\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8425:8488   */\n      swap2\n      pop\n        /* \"#utility.yul\":8381:8498   */\n      pop\n        /* \"#utility.yul\":8176:8505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8511:8625   */\n    tag_255:\n        /* \"#utility.yul\":8578:8584   */\n      0x00\n        /* \"#utility.yul\":8612:8617   */\n      dup2\n        /* \"#utility.yul\":8606:8618   */\n      mload\n        /* \"#utility.yul\":8596:8618   */\n      swap1\n      pop\n        /* \"#utility.yul\":8511:8625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8631:8815   */\n    tag_256:\n        /* \"#utility.yul\":8730:8741   */\n      0x00\n        /* \"#utility.yul\":8764:8770   */\n      dup3\n        /* \"#utility.yul\":8759:8762   */\n      dup3\n        /* \"#utility.yul\":8752:8771   */\n      mstore\n        /* \"#utility.yul\":8804:8808   */\n      0x20\n        /* \"#utility.yul\":8799:8802   */\n      dup3\n        /* \"#utility.yul\":8795:8809   */\n      add\n        /* \"#utility.yul\":8780:8809   */\n      swap1\n      pop\n        /* \"#utility.yul\":8631:8815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8821:8953   */\n    tag_257:\n        /* \"#utility.yul\":8888:8892   */\n      0x00\n        /* \"#utility.yul\":8911:8914   */\n      dup2\n        /* \"#utility.yul\":8903:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8941:8945   */\n      0x20\n        /* \"#utility.yul\":8936:8939   */\n      dup3\n        /* \"#utility.yul\":8932:8946   */\n      add\n        /* \"#utility.yul\":8924:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":8821:8953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8959:9067   */\n    tag_258:\n        /* \"#utility.yul\":9036:9060   */\n      tag_394\n        /* \"#utility.yul\":9054:9059   */\n      dup2\n        /* \"#utility.yul\":9036:9060   */\n      tag_227\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9031:9034   */\n      dup3\n        /* \"#utility.yul\":9024:9061   */\n      mstore\n        /* \"#utility.yul\":8959:9067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9073:9252   */\n    tag_259:\n        /* \"#utility.yul\":9142:9152   */\n      0x00\n        /* \"#utility.yul\":9163:9209   */\n      tag_396\n        /* \"#utility.yul\":9205:9208   */\n      dup4\n        /* \"#utility.yul\":9197:9203   */\n      dup4\n        /* \"#utility.yul\":9163:9209   */\n      tag_258\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9241:9245   */\n      0x20\n        /* \"#utility.yul\":9236:9239   */\n      dup4\n        /* \"#utility.yul\":9232:9246   */\n      add\n        /* \"#utility.yul\":9218:9246   */\n      swap1\n      pop\n        /* \"#utility.yul\":9073:9252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9258:9371   */\n    tag_260:\n        /* \"#utility.yul\":9328:9332   */\n      0x00\n        /* \"#utility.yul\":9360:9364   */\n      0x20\n        /* \"#utility.yul\":9355:9358   */\n      dup3\n        /* \"#utility.yul\":9351:9365   */\n      add\n        /* \"#utility.yul\":9343:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9258:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:10139   */\n    tag_261:\n        /* \"#utility.yul\":9526:9529   */\n      0x00\n        /* \"#utility.yul\":9555:9609   */\n      tag_399\n        /* \"#utility.yul\":9603:9608   */\n      dup3\n        /* \"#utility.yul\":9555:9609   */\n      tag_255\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9625:9711   */\n      tag_400\n        /* \"#utility.yul\":9704:9710   */\n      dup2\n        /* \"#utility.yul\":9699:9702   */\n      dup6\n        /* \"#utility.yul\":9625:9711   */\n      tag_256\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9618:9711   */\n      swap4\n      pop\n        /* \"#utility.yul\":9735:9791   */\n      tag_401\n        /* \"#utility.yul\":9785:9790   */\n      dup4\n        /* \"#utility.yul\":9735:9791   */\n      tag_257\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9814:9821   */\n      dup1\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9830:10114   */\n    tag_402:\n        /* \"#utility.yul\":9855:9861   */\n      dup4\n        /* \"#utility.yul\":9852:9853   */\n      dup2\n        /* \"#utility.yul\":9849:9862   */\n      lt\n        /* \"#utility.yul\":9830:10114   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9931:9937   */\n      dup2\n        /* \"#utility.yul\":9925:9938   */\n      mload\n        /* \"#utility.yul\":9958:10021   */\n      tag_405\n        /* \"#utility.yul\":10017:10020   */\n      dup9\n        /* \"#utility.yul\":10002:10015   */\n      dup3\n        /* \"#utility.yul\":9958:10021   */\n      tag_259\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9951:10021   */\n      swap8\n      pop\n        /* \"#utility.yul\":10044:10104   */\n      tag_406\n        /* \"#utility.yul\":10097:10103   */\n      dup4\n        /* \"#utility.yul\":10044:10104   */\n      tag_260\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10034:10104   */\n      swap3\n      pop\n        /* \"#utility.yul\":9890:10114   */\n      pop\n        /* \"#utility.yul\":9877:9878   */\n      0x01\n        /* \"#utility.yul\":9874:9875   */\n      dup2\n        /* \"#utility.yul\":9870:9879   */\n      add\n        /* \"#utility.yul\":9865:9879   */\n      swap1\n      pop\n        /* \"#utility.yul\":9830:10114   */\n      jump(tag_402)\n    tag_404:\n        /* \"#utility.yul\":9834:9848   */\n      pop\n        /* \"#utility.yul\":10130:10133   */\n      dup6\n        /* \"#utility.yul\":10123:10133   */\n      swap4\n      pop\n        /* \"#utility.yul\":9531:10139   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9407:10139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10145:10518   */\n    tag_77:\n        /* \"#utility.yul\":10288:10292   */\n      0x00\n        /* \"#utility.yul\":10326:10328   */\n      0x20\n        /* \"#utility.yul\":10315:10324   */\n      dup3\n        /* \"#utility.yul\":10311:10329   */\n      add\n        /* \"#utility.yul\":10303:10329   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10384   */\n      dup2\n        /* \"#utility.yul\":10369:10373   */\n      dup2\n        /* \"#utility.yul\":10365:10385   */\n      sub\n        /* \"#utility.yul\":10361:10362   */\n      0x00\n        /* \"#utility.yul\":10350:10359   */\n      dup4\n        /* \"#utility.yul\":10346:10363   */\n      add\n        /* \"#utility.yul\":10339:10386   */\n      mstore\n        /* \"#utility.yul\":10403:10511   */\n      tag_408\n        /* \"#utility.yul\":10506:10510   */\n      dup2\n        /* \"#utility.yul\":10497:10503   */\n      dup5\n        /* \"#utility.yul\":10403:10511   */\n      tag_261\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10395:10511   */\n      swap1\n      pop\n        /* \"#utility.yul\":10145:10518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10524:10704   */\n    tag_262:\n        /* \"#utility.yul\":10572:10649   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10569:10570   */\n      0x00\n        /* \"#utility.yul\":10562:10650   */\n      mstore\n        /* \"#utility.yul\":10669:10673   */\n      0x22\n        /* \"#utility.yul\":10666:10667   */\n      0x04\n        /* \"#utility.yul\":10659:10674   */\n      mstore\n        /* \"#utility.yul\":10693:10697   */\n      0x24\n        /* \"#utility.yul\":10690:10691   */\n      0x00\n        /* \"#utility.yul\":10683:10698   */\n      revert\n        /* \"#utility.yul\":10710:11030   */\n    tag_87:\n        /* \"#utility.yul\":10754:10760   */\n      0x00\n        /* \"#utility.yul\":10791:10792   */\n      0x02\n        /* \"#utility.yul\":10785:10789   */\n      dup3\n        /* \"#utility.yul\":10781:10793   */\n      div\n        /* \"#utility.yul\":10771:10793   */\n      swap1\n      pop\n        /* \"#utility.yul\":10838:10839   */\n      0x01\n        /* \"#utility.yul\":10832:10836   */\n      dup3\n        /* \"#utility.yul\":10828:10840   */\n      and\n        /* \"#utility.yul\":10859:10877   */\n      dup1\n        /* \"#utility.yul\":10849:10930   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10915:10919   */\n      0x7f\n        /* \"#utility.yul\":10907:10913   */\n      dup3\n        /* \"#utility.yul\":10903:10920   */\n      and\n        /* \"#utility.yul\":10893:10920   */\n      swap2\n      pop\n        /* \"#utility.yul\":10849:10930   */\n    tag_411:\n        /* \"#utility.yul\":10977:10979   */\n      0x20\n        /* \"#utility.yul\":10969:10975   */\n      dup3\n        /* \"#utility.yul\":10966:10980   */\n      lt\n        /* \"#utility.yul\":10946:10964   */\n      dup2\n        /* \"#utility.yul\":10943:10981   */\n      sub\n        /* \"#utility.yul\":10940:11024   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":10996:11014   */\n      tag_413\n      tag_262\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10940:11024   */\n    tag_412:\n        /* \"#utility.yul\":10761:11030   */\n      pop\n        /* \"#utility.yul\":10710:11030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11036:11213   */\n    tag_263:\n        /* \"#utility.yul\":11176:11205   */\n      0x4d65737361676520696e646578206f7574206f6620626f756e64730000000000\n        /* \"#utility.yul\":11172:11173   */\n      0x00\n        /* \"#utility.yul\":11164:11170   */\n      dup3\n        /* \"#utility.yul\":11160:11174   */\n      add\n        /* \"#utility.yul\":11153:11206   */\n      mstore\n        /* \"#utility.yul\":11036:11213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11219:11585   */\n    tag_264:\n        /* \"#utility.yul\":11361:11364   */\n      0x00\n        /* \"#utility.yul\":11382:11449   */\n      tag_416\n        /* \"#utility.yul\":11446:11448   */\n      0x1b\n        /* \"#utility.yul\":11441:11444   */\n      dup4\n        /* \"#utility.yul\":11382:11449   */\n      tag_234\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11375:11449   */\n      swap2\n      pop\n        /* \"#utility.yul\":11458:11551   */\n      tag_417\n        /* \"#utility.yul\":11547:11550   */\n      dup3\n        /* \"#utility.yul\":11458:11551   */\n      tag_263\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11576:11578   */\n      0x20\n        /* \"#utility.yul\":11571:11574   */\n      dup3\n        /* \"#utility.yul\":11567:11579   */\n      add\n        /* \"#utility.yul\":11560:11579   */\n      swap1\n      pop\n        /* \"#utility.yul\":11219:11585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11591:12010   */\n    tag_96:\n        /* \"#utility.yul\":11757:11761   */\n      0x00\n        /* \"#utility.yul\":11795:11797   */\n      0x20\n        /* \"#utility.yul\":11784:11793   */\n      dup3\n        /* \"#utility.yul\":11780:11798   */\n      add\n        /* \"#utility.yul\":11772:11798   */\n      swap1\n      pop\n        /* \"#utility.yul\":11844:11853   */\n      dup2\n        /* \"#utility.yul\":11838:11842   */\n      dup2\n        /* \"#utility.yul\":11834:11854   */\n      sub\n        /* \"#utility.yul\":11830:11831   */\n      0x00\n        /* \"#utility.yul\":11819:11828   */\n      dup4\n        /* \"#utility.yul\":11815:11832   */\n      add\n        /* \"#utility.yul\":11808:11855   */\n      mstore\n        /* \"#utility.yul\":11872:12003   */\n      tag_419\n        /* \"#utility.yul\":11998:12002   */\n      dup2\n        /* \"#utility.yul\":11872:12003   */\n      tag_264\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11864:12003   */\n      swap1\n      pop\n        /* \"#utility.yul\":11591:12010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12016:12196   */\n    tag_99:\n        /* \"#utility.yul\":12064:12141   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12061:12062   */\n      0x00\n        /* \"#utility.yul\":12054:12142   */\n      mstore\n        /* \"#utility.yul\":12161:12165   */\n      0x32\n        /* \"#utility.yul\":12158:12159   */\n      0x04\n        /* \"#utility.yul\":12151:12166   */\n      mstore\n        /* \"#utility.yul\":12185:12189   */\n      0x24\n        /* \"#utility.yul\":12182:12183   */\n      0x00\n        /* \"#utility.yul\":12175:12190   */\n      revert\n        /* \"#utility.yul\":12202:12425   */\n    tag_265:\n        /* \"#utility.yul\":12342:12376   */\n      0x4d65737361676520696e646578206f7574206f6620626f756e647320666f7220\n        /* \"#utility.yul\":12338:12339   */\n      0x00\n        /* \"#utility.yul\":12330:12336   */\n      dup3\n        /* \"#utility.yul\":12326:12340   */\n      add\n        /* \"#utility.yul\":12319:12377   */\n      mstore\n        /* \"#utility.yul\":12411:12417   */\n      0x7573657200000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12406:12408   */\n      0x20\n        /* \"#utility.yul\":12398:12404   */\n      dup3\n        /* \"#utility.yul\":12394:12409   */\n      add\n        /* \"#utility.yul\":12387:12418   */\n      mstore\n        /* \"#utility.yul\":12202:12425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12431:12797   */\n    tag_266:\n        /* \"#utility.yul\":12573:12576   */\n      0x00\n        /* \"#utility.yul\":12594:12661   */\n      tag_423\n        /* \"#utility.yul\":12658:12660   */\n      0x24\n        /* \"#utility.yul\":12653:12656   */\n      dup4\n        /* \"#utility.yul\":12594:12661   */\n      tag_234\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12587:12661   */\n      swap2\n      pop\n        /* \"#utility.yul\":12670:12763   */\n      tag_424\n        /* \"#utility.yul\":12759:12762   */\n      dup3\n        /* \"#utility.yul\":12670:12763   */\n      tag_265\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12788:12790   */\n      0x40\n        /* \"#utility.yul\":12783:12786   */\n      dup3\n        /* \"#utility.yul\":12779:12791   */\n      add\n        /* \"#utility.yul\":12772:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12431:12797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:13222   */\n    tag_109:\n        /* \"#utility.yul\":12969:12973   */\n      0x00\n        /* \"#utility.yul\":13007:13009   */\n      0x20\n        /* \"#utility.yul\":12996:13005   */\n      dup3\n        /* \"#utility.yul\":12992:13010   */\n      add\n        /* \"#utility.yul\":12984:13010   */\n      swap1\n      pop\n        /* \"#utility.yul\":13056:13065   */\n      dup2\n        /* \"#utility.yul\":13050:13054   */\n      dup2\n        /* \"#utility.yul\":13046:13066   */\n      sub\n        /* \"#utility.yul\":13042:13043   */\n      0x00\n        /* \"#utility.yul\":13031:13040   */\n      dup4\n        /* \"#utility.yul\":13027:13044   */\n      add\n        /* \"#utility.yul\":13020:13067   */\n      mstore\n        /* \"#utility.yul\":13084:13215   */\n      tag_426\n        /* \"#utility.yul\":13210:13214   */\n      dup2\n        /* \"#utility.yul\":13084:13215   */\n      tag_266\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13076:13215   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:13222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13228:13400   */\n    tag_267:\n        /* \"#utility.yul\":13368:13392   */\n      0x496e76616c6964206665652070657263656e7461676500000000000000000000\n        /* \"#utility.yul\":13364:13365   */\n      0x00\n        /* \"#utility.yul\":13356:13362   */\n      dup3\n        /* \"#utility.yul\":13352:13366   */\n      add\n        /* \"#utility.yul\":13345:13393   */\n      mstore\n        /* \"#utility.yul\":13228:13400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13406:13772   */\n    tag_268:\n        /* \"#utility.yul\":13548:13551   */\n      0x00\n        /* \"#utility.yul\":13569:13636   */\n      tag_429\n        /* \"#utility.yul\":13633:13635   */\n      0x16\n        /* \"#utility.yul\":13628:13631   */\n      dup4\n        /* \"#utility.yul\":13569:13636   */\n      tag_234\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13562:13636   */\n      swap2\n      pop\n        /* \"#utility.yul\":13645:13738   */\n      tag_430\n        /* \"#utility.yul\":13734:13737   */\n      dup3\n        /* \"#utility.yul\":13645:13738   */\n      tag_267\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13763:13765   */\n      0x20\n        /* \"#utility.yul\":13758:13761   */\n      dup3\n        /* \"#utility.yul\":13754:13766   */\n      add\n        /* \"#utility.yul\":13747:13766   */\n      swap1\n      pop\n        /* \"#utility.yul\":13406:13772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13778:14197   */\n    tag_127:\n        /* \"#utility.yul\":13944:13948   */\n      0x00\n        /* \"#utility.yul\":13982:13984   */\n      0x20\n        /* \"#utility.yul\":13971:13980   */\n      dup3\n        /* \"#utility.yul\":13967:13985   */\n      add\n        /* \"#utility.yul\":13959:13985   */\n      swap1\n      pop\n        /* \"#utility.yul\":14031:14040   */\n      dup2\n        /* \"#utility.yul\":14025:14029   */\n      dup2\n        /* \"#utility.yul\":14021:14041   */\n      sub\n        /* \"#utility.yul\":14017:14018   */\n      0x00\n        /* \"#utility.yul\":14006:14015   */\n      dup4\n        /* \"#utility.yul\":14002:14019   */\n      add\n        /* \"#utility.yul\":13995:14042   */\n      mstore\n        /* \"#utility.yul\":14059:14190   */\n      tag_432\n        /* \"#utility.yul\":14185:14189   */\n      dup2\n        /* \"#utility.yul\":14059:14190   */\n      tag_268\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14051:14190   */\n      swap1\n      pop\n        /* \"#utility.yul\":13778:14197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14203:14383   */\n    tag_269:\n        /* \"#utility.yul\":14251:14328   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14248:14249   */\n      0x00\n        /* \"#utility.yul\":14241:14329   */\n      mstore\n        /* \"#utility.yul\":14348:14352   */\n      0x11\n        /* \"#utility.yul\":14345:14346   */\n      0x04\n        /* \"#utility.yul\":14338:14353   */\n      mstore\n        /* \"#utility.yul\":14372:14376   */\n      0x24\n        /* \"#utility.yul\":14369:14370   */\n      0x00\n        /* \"#utility.yul\":14362:14377   */\n      revert\n        /* \"#utility.yul\":14389:14799   */\n    tag_133:\n        /* \"#utility.yul\":14429:14436   */\n      0x00\n        /* \"#utility.yul\":14452:14472   */\n      tag_435\n        /* \"#utility.yul\":14470:14471   */\n      dup3\n        /* \"#utility.yul\":14452:14472   */\n      tag_227\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14447:14472   */\n      swap2\n      pop\n        /* \"#utility.yul\":14486:14506   */\n      tag_436\n        /* \"#utility.yul\":14504:14505   */\n      dup4\n        /* \"#utility.yul\":14486:14506   */\n      tag_227\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14481:14506   */\n      swap3\n      pop\n        /* \"#utility.yul\":14541:14542   */\n      dup3\n        /* \"#utility.yul\":14538:14539   */\n      dup3\n        /* \"#utility.yul\":14534:14543   */\n      mul\n        /* \"#utility.yul\":14563:14593   */\n      tag_437\n        /* \"#utility.yul\":14581:14592   */\n      dup2\n        /* \"#utility.yul\":14563:14593   */\n      tag_227\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14552:14593   */\n      swap2\n      pop\n        /* \"#utility.yul\":14742:14743   */\n      dup3\n        /* \"#utility.yul\":14733:14740   */\n      dup3\n        /* \"#utility.yul\":14729:14744   */\n      div\n        /* \"#utility.yul\":14726:14727   */\n      dup5\n        /* \"#utility.yul\":14723:14745   */\n      eq\n        /* \"#utility.yul\":14703:14704   */\n      dup4\n        /* \"#utility.yul\":14696:14705   */\n      iszero\n        /* \"#utility.yul\":14676:14759   */\n      or\n        /* \"#utility.yul\":14653:14792   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":14772:14790   */\n      tag_439\n      tag_269\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14653:14792   */\n    tag_438:\n        /* \"#utility.yul\":14437:14799   */\n      pop\n        /* \"#utility.yul\":14389:14799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14805:14985   */\n    tag_270:\n        /* \"#utility.yul\":14853:14930   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14850:14851   */\n      0x00\n        /* \"#utility.yul\":14843:14931   */\n      mstore\n        /* \"#utility.yul\":14950:14954   */\n      0x12\n        /* \"#utility.yul\":14947:14948   */\n      0x04\n        /* \"#utility.yul\":14940:14955   */\n      mstore\n        /* \"#utility.yul\":14974:14978   */\n      0x24\n        /* \"#utility.yul\":14971:14972   */\n      0x00\n        /* \"#utility.yul\":14964:14979   */\n      revert\n        /* \"#utility.yul\":14991:15176   */\n    tag_135:\n        /* \"#utility.yul\":15031:15032   */\n      0x00\n        /* \"#utility.yul\":15048:15068   */\n      tag_442\n        /* \"#utility.yul\":15066:15067   */\n      dup3\n        /* \"#utility.yul\":15048:15068   */\n      tag_227\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15043:15068   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15102   */\n      tag_443\n        /* \"#utility.yul\":15100:15101   */\n      dup4\n        /* \"#utility.yul\":15082:15102   */\n      tag_227\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15077:15102   */\n      swap3\n      pop\n        /* \"#utility.yul\":15121:15122   */\n      dup3\n        /* \"#utility.yul\":15111:15146   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":15126:15144   */\n      tag_445\n      tag_270\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15111:15146   */\n    tag_444:\n        /* \"#utility.yul\":15168:15169   */\n      dup3\n        /* \"#utility.yul\":15165:15166   */\n      dup3\n        /* \"#utility.yul\":15161:15170   */\n      div\n        /* \"#utility.yul\":15156:15170   */\n      swap1\n      pop\n        /* \"#utility.yul\":14991:15176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15182:15376   */\n    tag_137:\n        /* \"#utility.yul\":15222:15226   */\n      0x00\n        /* \"#utility.yul\":15242:15262   */\n      tag_447\n        /* \"#utility.yul\":15260:15261   */\n      dup3\n        /* \"#utility.yul\":15242:15262   */\n      tag_227\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":15237:15262   */\n      swap2\n      pop\n        /* \"#utility.yul\":15276:15296   */\n      tag_448\n        /* \"#utility.yul\":15294:15295   */\n      dup4\n        /* \"#utility.yul\":15276:15296   */\n      tag_227\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15271:15296   */\n      swap3\n      pop\n        /* \"#utility.yul\":15320:15321   */\n      dup3\n        /* \"#utility.yul\":15317:15318   */\n      dup3\n        /* \"#utility.yul\":15313:15322   */\n      sub\n        /* \"#utility.yul\":15305:15322   */\n      swap1\n      pop\n        /* \"#utility.yul\":15344:15345   */\n      dup2\n        /* \"#utility.yul\":15338:15342   */\n      dup2\n        /* \"#utility.yul\":15335:15346   */\n      gt\n        /* \"#utility.yul\":15332:15369   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":15349:15367   */\n      tag_450\n      tag_269\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15332:15369   */\n    tag_449:\n        /* \"#utility.yul\":15182:15376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15382:15523   */\n    tag_271:\n        /* \"#utility.yul\":15431:15435   */\n      0x00\n        /* \"#utility.yul\":15454:15457   */\n      dup2\n        /* \"#utility.yul\":15446:15457   */\n      swap1\n      pop\n        /* \"#utility.yul\":15477:15480   */\n      dup2\n        /* \"#utility.yul\":15474:15475   */\n      0x00\n        /* \"#utility.yul\":15467:15481   */\n      mstore\n        /* \"#utility.yul\":15511:15515   */\n      0x20\n        /* \"#utility.yul\":15508:15509   */\n      0x00\n        /* \"#utility.yul\":15498:15516   */\n      keccak256\n        /* \"#utility.yul\":15490:15516   */\n      swap1\n      pop\n        /* \"#utility.yul\":15382:15523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15529:15622   */\n    tag_272:\n        /* \"#utility.yul\":15566:15572   */\n      0x00\n        /* \"#utility.yul\":15613:15615   */\n      0x20\n        /* \"#utility.yul\":15608:15610   */\n      0x1f\n        /* \"#utility.yul\":15601:15606   */\n      dup4\n        /* \"#utility.yul\":15597:15611   */\n      add\n        /* \"#utility.yul\":15593:15616   */\n      div\n        /* \"#utility.yul\":15583:15616   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15628:15735   */\n    tag_273:\n        /* \"#utility.yul\":15672:15680   */\n      0x00\n        /* \"#utility.yul\":15722:15727   */\n      dup3\n        /* \"#utility.yul\":15716:15720   */\n      dup3\n        /* \"#utility.yul\":15712:15728   */\n      shl\n        /* \"#utility.yul\":15691:15728   */\n      swap1\n      pop\n        /* \"#utility.yul\":15628:15735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15741:16134   */\n    tag_274:\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15860:15861   */\n      0x08\n        /* \"#utility.yul\":15848:15858   */\n      dup4\n        /* \"#utility.yul\":15844:15862   */\n      mul\n        /* \"#utility.yul\":15883:15980   */\n      tag_455\n        /* \"#utility.yul\":15913:15979   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15902:15911   */\n      dup3\n        /* \"#utility.yul\":15883:15980   */\n      tag_273\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16001:16040   */\n      tag_456\n        /* \"#utility.yul\":16031:16039   */\n      dup7\n        /* \"#utility.yul\":16020:16029   */\n      dup4\n        /* \"#utility.yul\":16001:16040   */\n      tag_273\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15989:16040   */\n      swap6\n      pop\n        /* \"#utility.yul\":16073:16077   */\n      dup1\n        /* \"#utility.yul\":16069:16078   */\n      not\n        /* \"#utility.yul\":16062:16067   */\n      dup5\n        /* \"#utility.yul\":16058:16079   */\n      and\n        /* \"#utility.yul\":16049:16079   */\n      swap4\n      pop\n        /* \"#utility.yul\":16122:16126   */\n      dup1\n        /* \"#utility.yul\":16112:16120   */\n      dup7\n        /* \"#utility.yul\":16108:16127   */\n      and\n        /* \"#utility.yul\":16101:16106   */\n      dup5\n        /* \"#utility.yul\":16098:16128   */\n      or\n        /* \"#utility.yul\":16088:16128   */\n      swap3\n      pop\n        /* \"#utility.yul\":15817:16134   */\n      pop\n      pop\n        /* \"#utility.yul\":15741:16134   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16140:16282   */\n    tag_275:\n        /* \"#utility.yul\":16190:16199   */\n      0x00\n        /* \"#utility.yul\":16223:16276   */\n      tag_458\n        /* \"#utility.yul\":16241:16275   */\n      tag_459\n        /* \"#utility.yul\":16250:16274   */\n      tag_460\n        /* \"#utility.yul\":16268:16273   */\n      dup5\n        /* \"#utility.yul\":16250:16274   */\n      tag_227\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16241:16275   */\n      tag_250\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16223:16276   */\n      tag_227\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16210:16276   */\n      swap1\n      pop\n        /* \"#utility.yul\":16140:16282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16288:16363   */\n    tag_276:\n        /* \"#utility.yul\":16331:16334   */\n      0x00\n        /* \"#utility.yul\":16352:16357   */\n      dup2\n        /* \"#utility.yul\":16345:16357   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16369:16638   */\n    tag_277:\n        /* \"#utility.yul\":16479:16518   */\n      tag_463\n        /* \"#utility.yul\":16510:16517   */\n      dup4\n        /* \"#utility.yul\":16479:16518   */\n      tag_275\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":16540:16631   */\n      tag_464\n        /* \"#utility.yul\":16589:16630   */\n      tag_465\n        /* \"#utility.yul\":16613:16629   */\n      dup3\n        /* \"#utility.yul\":16589:16630   */\n      tag_276\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16581:16587   */\n      dup5\n        /* \"#utility.yul\":16574:16578   */\n      dup5\n        /* \"#utility.yul\":16568:16579   */\n      sload\n        /* \"#utility.yul\":16540:16631   */\n      tag_274\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16534:16538   */\n      dup3\n        /* \"#utility.yul\":16527:16632   */\n      sstore\n        /* \"#utility.yul\":16445:16638   */\n      pop\n        /* \"#utility.yul\":16369:16638   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16644:16717   */\n    tag_278:\n        /* \"#utility.yul\":16689:16692   */\n      0x00\n        /* \"#utility.yul\":16644:16717   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16723:16912   */\n    tag_279:\n        /* \"#utility.yul\":16800:16832   */\n      tag_468\n      tag_278\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16841:16906   */\n      tag_469\n        /* \"#utility.yul\":16899:16905   */\n      dup2\n        /* \"#utility.yul\":16891:16897   */\n      dup5\n        /* \"#utility.yul\":16885:16889   */\n      dup5\n        /* \"#utility.yul\":16841:16906   */\n      tag_277\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16776:16912   */\n      pop\n        /* \"#utility.yul\":16723:16912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16918:17104   */\n    tag_280:\n        /* \"#utility.yul\":16978:17098   */\n    tag_471:\n        /* \"#utility.yul\":16995:16998   */\n      dup2\n        /* \"#utility.yul\":16988:16993   */\n      dup2\n        /* \"#utility.yul\":16985:16999   */\n      lt\n        /* \"#utility.yul\":16978:17098   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":17049:17088   */\n      tag_474\n        /* \"#utility.yul\":17086:17087   */\n      0x00\n        /* \"#utility.yul\":17079:17084   */\n      dup3\n        /* \"#utility.yul\":17049:17088   */\n      tag_279\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17022:17023   */\n      0x01\n        /* \"#utility.yul\":17015:17020   */\n      dup2\n        /* \"#utility.yul\":17011:17024   */\n      add\n        /* \"#utility.yul\":17002:17024   */\n      swap1\n      pop\n        /* \"#utility.yul\":16978:17098   */\n      jump(tag_471)\n    tag_473:\n        /* \"#utility.yul\":16918:17104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17110:17653   */\n    tag_281:\n        /* \"#utility.yul\":17211:17213   */\n      0x1f\n        /* \"#utility.yul\":17206:17209   */\n      dup3\n        /* \"#utility.yul\":17203:17214   */\n      gt\n        /* \"#utility.yul\":17200:17646   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":17245:17283   */\n      tag_477\n        /* \"#utility.yul\":17277:17282   */\n      dup2\n        /* \"#utility.yul\":17245:17283   */\n      tag_271\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17329:17358   */\n      tag_478\n        /* \"#utility.yul\":17347:17357   */\n      dup5\n        /* \"#utility.yul\":17329:17358   */\n      tag_272\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17319:17327   */\n      dup2\n        /* \"#utility.yul\":17315:17359   */\n      add\n        /* \"#utility.yul\":17512:17514   */\n      0x20\n        /* \"#utility.yul\":17500:17510   */\n      dup6\n        /* \"#utility.yul\":17497:17515   */\n      lt\n        /* \"#utility.yul\":17494:17543   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":17533:17541   */\n      dup2\n        /* \"#utility.yul\":17518:17541   */\n      swap1\n      pop\n        /* \"#utility.yul\":17494:17543   */\n    tag_479:\n        /* \"#utility.yul\":17556:17636   */\n      tag_480\n        /* \"#utility.yul\":17612:17634   */\n      tag_481\n        /* \"#utility.yul\":17630:17633   */\n      dup6\n        /* \"#utility.yul\":17612:17634   */\n      tag_272\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17602:17610   */\n      dup4\n        /* \"#utility.yul\":17598:17635   */\n      add\n        /* \"#utility.yul\":17585:17596   */\n      dup3\n        /* \"#utility.yul\":17556:17636   */\n      tag_280\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17215:17646   */\n      pop\n      pop\n        /* \"#utility.yul\":17200:17646   */\n    tag_476:\n        /* \"#utility.yul\":17110:17653   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17659:17776   */\n    tag_282:\n        /* \"#utility.yul\":17713:17721   */\n      0x00\n        /* \"#utility.yul\":17763:17768   */\n      dup3\n        /* \"#utility.yul\":17757:17761   */\n      dup3\n        /* \"#utility.yul\":17753:17769   */\n      shr\n        /* \"#utility.yul\":17732:17769   */\n      swap1\n      pop\n        /* \"#utility.yul\":17659:17776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17782:17951   */\n    tag_283:\n        /* \"#utility.yul\":17826:17832   */\n      0x00\n        /* \"#utility.yul\":17859:17910   */\n      tag_484\n        /* \"#utility.yul\":17907:17908   */\n      0x00\n        /* \"#utility.yul\":17903:17909   */\n      not\n        /* \"#utility.yul\":17895:17900   */\n      dup5\n        /* \"#utility.yul\":17892:17893   */\n      0x08\n        /* \"#utility.yul\":17888:17901   */\n      mul\n        /* \"#utility.yul\":17859:17910   */\n      tag_282\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17855:17911   */\n      not\n        /* \"#utility.yul\":17940:17944   */\n      dup1\n        /* \"#utility.yul\":17934:17938   */\n      dup4\n        /* \"#utility.yul\":17930:17945   */\n      and\n        /* \"#utility.yul\":17920:17945   */\n      swap2\n      pop\n        /* \"#utility.yul\":17833:17951   */\n      pop\n        /* \"#utility.yul\":17782:17951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17956:18251   */\n    tag_284:\n        /* \"#utility.yul\":18032:18036   */\n      0x00\n        /* \"#utility.yul\":18178:18207   */\n      tag_486\n        /* \"#utility.yul\":18203:18206   */\n      dup4\n        /* \"#utility.yul\":18197:18201   */\n      dup4\n        /* \"#utility.yul\":18178:18207   */\n      tag_283\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18170:18207   */\n      swap2\n      pop\n        /* \"#utility.yul\":18240:18243   */\n      dup3\n        /* \"#utility.yul\":18237:18238   */\n      0x02\n        /* \"#utility.yul\":18233:18244   */\n      mul\n        /* \"#utility.yul\":18227:18231   */\n      dup3\n        /* \"#utility.yul\":18224:18245   */\n      or\n        /* \"#utility.yul\":18216:18245   */\n      swap1\n      pop\n        /* \"#utility.yul\":17956:18251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18256:19651   */\n    tag_147:\n        /* \"#utility.yul\":18373:18410   */\n      tag_488\n        /* \"#utility.yul\":18406:18409   */\n      dup3\n        /* \"#utility.yul\":18373:18410   */\n      tag_233\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18475:18493   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18467:18473   */\n      dup2\n        /* \"#utility.yul\":18464:18494   */\n      gt\n        /* \"#utility.yul\":18461:18517   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":18497:18515   */\n      tag_490\n      tag_243\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18461:18517   */\n    tag_489:\n        /* \"#utility.yul\":18541:18579   */\n      tag_491\n        /* \"#utility.yul\":18573:18577   */\n      dup3\n        /* \"#utility.yul\":18567:18578   */\n      sload\n        /* \"#utility.yul\":18541:18579   */\n      tag_87\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18626:18693   */\n      tag_492\n        /* \"#utility.yul\":18686:18692   */\n      dup3\n        /* \"#utility.yul\":18678:18684   */\n      dup3\n        /* \"#utility.yul\":18672:18676   */\n      dup6\n        /* \"#utility.yul\":18626:18693   */\n      tag_281\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18720:18721   */\n      0x00\n        /* \"#utility.yul\":18744:18748   */\n      0x20\n        /* \"#utility.yul\":18731:18748   */\n      swap1\n      pop\n        /* \"#utility.yul\":18776:18778   */\n      0x1f\n        /* \"#utility.yul\":18768:18774   */\n      dup4\n        /* \"#utility.yul\":18765:18779   */\n      gt\n        /* \"#utility.yul\":18793:18794   */\n      0x01\n        /* \"#utility.yul\":18788:19406   */\n      dup2\n      eq\n      tag_494\n      jumpi\n        /* \"#utility.yul\":19450:19451   */\n      0x00\n        /* \"#utility.yul\":19467:19473   */\n      dup5\n        /* \"#utility.yul\":19464:19541   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":19516:19525   */\n      dup3\n        /* \"#utility.yul\":19511:19514   */\n      dup8\n        /* \"#utility.yul\":19507:19526   */\n      add\n        /* \"#utility.yul\":19501:19527   */\n      mload\n        /* \"#utility.yul\":19492:19527   */\n      swap1\n      pop\n        /* \"#utility.yul\":19464:19541   */\n    tag_495:\n        /* \"#utility.yul\":19567:19634   */\n      tag_496\n        /* \"#utility.yul\":19627:19633   */\n      dup6\n        /* \"#utility.yul\":19620:19625   */\n      dup3\n        /* \"#utility.yul\":19567:19634   */\n      tag_284\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19561:19565   */\n      dup7\n        /* \"#utility.yul\":19554:19635   */\n      sstore\n        /* \"#utility.yul\":19423:19645   */\n      pop\n        /* \"#utility.yul\":18758:19645   */\n      jump(tag_493)\n        /* \"#utility.yul\":18788:19406   */\n    tag_494:\n        /* \"#utility.yul\":18840:18844   */\n      0x1f\n        /* \"#utility.yul\":18836:18845   */\n      not\n        /* \"#utility.yul\":18828:18834   */\n      dup5\n        /* \"#utility.yul\":18824:18846   */\n      and\n        /* \"#utility.yul\":18874:18911   */\n      tag_497\n        /* \"#utility.yul\":18906:18910   */\n      dup7\n        /* \"#utility.yul\":18874:18911   */\n      tag_271\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18933:18934   */\n      0x00\n        /* \"#utility.yul\":18947:19155   */\n    tag_498:\n        /* \"#utility.yul\":18961:18968   */\n      dup3\n        /* \"#utility.yul\":18958:18959   */\n      dup2\n        /* \"#utility.yul\":18955:18969   */\n      lt\n        /* \"#utility.yul\":18947:19155   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":19040:19049   */\n      dup5\n        /* \"#utility.yul\":19035:19038   */\n      dup10\n        /* \"#utility.yul\":19031:19050   */\n      add\n        /* \"#utility.yul\":19025:19051   */\n      mload\n        /* \"#utility.yul\":19017:19023   */\n      dup3\n        /* \"#utility.yul\":19010:19052   */\n      sstore\n        /* \"#utility.yul\":19091:19092   */\n      0x01\n        /* \"#utility.yul\":19083:19089   */\n      dup3\n        /* \"#utility.yul\":19079:19093   */\n      add\n        /* \"#utility.yul\":19069:19093   */\n      swap2\n      pop\n        /* \"#utility.yul\":19138:19140   */\n      0x20\n        /* \"#utility.yul\":19127:19136   */\n      dup6\n        /* \"#utility.yul\":19123:19141   */\n      add\n        /* \"#utility.yul\":19110:19141   */\n      swap5\n      pop\n        /* \"#utility.yul\":18984:18988   */\n      0x20\n        /* \"#utility.yul\":18981:18982   */\n      dup2\n        /* \"#utility.yul\":18977:18989   */\n      add\n        /* \"#utility.yul\":18972:18989   */\n      swap1\n      pop\n        /* \"#utility.yul\":18947:19155   */\n      jump(tag_498)\n    tag_500:\n        /* \"#utility.yul\":19183:19189   */\n      dup7\n        /* \"#utility.yul\":19174:19181   */\n      dup4\n        /* \"#utility.yul\":19171:19190   */\n      lt\n        /* \"#utility.yul\":19168:19347   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":19241:19250   */\n      dup5\n        /* \"#utility.yul\":19236:19239   */\n      dup10\n        /* \"#utility.yul\":19232:19251   */\n      add\n        /* \"#utility.yul\":19226:19252   */\n      mload\n        /* \"#utility.yul\":19284:19332   */\n      tag_502\n        /* \"#utility.yul\":19326:19330   */\n      0x1f\n        /* \"#utility.yul\":19318:19324   */\n      dup10\n        /* \"#utility.yul\":19314:19331   */\n      and\n        /* \"#utility.yul\":19303:19312   */\n      dup3\n        /* \"#utility.yul\":19284:19332   */\n      tag_283\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19276:19282   */\n      dup4\n        /* \"#utility.yul\":19269:19333   */\n      sstore\n        /* \"#utility.yul\":19191:19347   */\n      pop\n        /* \"#utility.yul\":19168:19347   */\n    tag_501:\n        /* \"#utility.yul\":19393:19394   */\n      0x01\n        /* \"#utility.yul\":19389:19390   */\n      0x02\n        /* \"#utility.yul\":19381:19387   */\n      dup9\n        /* \"#utility.yul\":19377:19391   */\n      mul\n        /* \"#utility.yul\":19373:19395   */\n      add\n        /* \"#utility.yul\":19367:19371   */\n      dup9\n        /* \"#utility.yul\":19360:19396   */\n      sstore\n        /* \"#utility.yul\":18795:19406   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18758:19645   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":18348:19651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18256:19651   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19657:19970   */\n    tag_153:\n        /* \"#utility.yul\":19770:19774   */\n      0x00\n        /* \"#utility.yul\":19808:19810   */\n      0x20\n        /* \"#utility.yul\":19797:19806   */\n      dup3\n        /* \"#utility.yul\":19793:19811   */\n      add\n        /* \"#utility.yul\":19785:19811   */\n      swap1\n      pop\n        /* \"#utility.yul\":19857:19866   */\n      dup2\n        /* \"#utility.yul\":19851:19855   */\n      dup2\n        /* \"#utility.yul\":19847:19867   */\n      sub\n        /* \"#utility.yul\":19843:19844   */\n      0x00\n        /* \"#utility.yul\":19832:19841   */\n      dup4\n        /* \"#utility.yul\":19828:19845   */\n      add\n        /* \"#utility.yul\":19821:19868   */\n      mstore\n        /* \"#utility.yul\":19885:19963   */\n      tag_504\n        /* \"#utility.yul\":19958:19962   */\n      dup2\n        /* \"#utility.yul\":19949:19955   */\n      dup5\n        /* \"#utility.yul\":19885:19963   */\n      tag_237\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":19877:19963   */\n      swap1\n      pop\n        /* \"#utility.yul\":19657:19970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19976:20418   */\n    tag_187:\n        /* \"#utility.yul\":20125:20129   */\n      0x00\n        /* \"#utility.yul\":20163:20165   */\n      0x60\n        /* \"#utility.yul\":20152:20161   */\n      dup3\n        /* \"#utility.yul\":20148:20166   */\n      add\n        /* \"#utility.yul\":20140:20166   */\n      swap1\n      pop\n        /* \"#utility.yul\":20176:20247   */\n      tag_506\n        /* \"#utility.yul\":20244:20245   */\n      0x00\n        /* \"#utility.yul\":20233:20242   */\n      dup4\n        /* \"#utility.yul\":20229:20246   */\n      add\n        /* \"#utility.yul\":20220:20226   */\n      dup7\n        /* \"#utility.yul\":20176:20247   */\n      tag_232\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20257:20329   */\n      tag_507\n        /* \"#utility.yul\":20325:20327   */\n      0x20\n        /* \"#utility.yul\":20314:20323   */\n      dup4\n        /* \"#utility.yul\":20310:20328   */\n      add\n        /* \"#utility.yul\":20301:20307   */\n      dup6\n        /* \"#utility.yul\":20257:20329   */\n      tag_232\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20339:20411   */\n      tag_508\n        /* \"#utility.yul\":20407:20409   */\n      0x40\n        /* \"#utility.yul\":20396:20405   */\n      dup4\n        /* \"#utility.yul\":20392:20410   */\n      add\n        /* \"#utility.yul\":20383:20389   */\n      dup5\n        /* \"#utility.yul\":20339:20411   */\n      tag_238\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19976:20418   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20424:20514   */\n    tag_285:\n        /* \"#utility.yul\":20458:20465   */\n      0x00\n        /* \"#utility.yul\":20501:20506   */\n      dup2\n        /* \"#utility.yul\":20494:20507   */\n      iszero\n        /* \"#utility.yul\":20487:20508   */\n      iszero\n        /* \"#utility.yul\":20476:20508   */\n      swap1\n      pop\n        /* \"#utility.yul\":20424:20514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20520:20636   */\n    tag_286:\n        /* \"#utility.yul\":20590:20611   */\n      tag_511\n        /* \"#utility.yul\":20605:20610   */\n      dup2\n        /* \"#utility.yul\":20590:20611   */\n      tag_285\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":20583:20588   */\n      dup2\n        /* \"#utility.yul\":20580:20612   */\n      eq\n        /* \"#utility.yul\":20570:20630   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":20626:20627   */\n      0x00\n        /* \"#utility.yul\":20623:20624   */\n      dup1\n        /* \"#utility.yul\":20616:20628   */\n      revert\n        /* \"#utility.yul\":20570:20630   */\n    tag_512:\n        /* \"#utility.yul\":20520:20636   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20642:20779   */\n    tag_287:\n        /* \"#utility.yul\":20696:20701   */\n      0x00\n        /* \"#utility.yul\":20727:20733   */\n      dup2\n        /* \"#utility.yul\":20721:20734   */\n      mload\n        /* \"#utility.yul\":20712:20734   */\n      swap1\n      pop\n        /* \"#utility.yul\":20743:20773   */\n      tag_514\n        /* \"#utility.yul\":20767:20772   */\n      dup2\n        /* \"#utility.yul\":20743:20773   */\n      tag_286\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20642:20779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20785:21130   */\n    tag_197:\n        /* \"#utility.yul\":20852:20858   */\n      0x00\n        /* \"#utility.yul\":20901:20903   */\n      0x20\n        /* \"#utility.yul\":20889:20898   */\n      dup3\n        /* \"#utility.yul\":20880:20887   */\n      dup5\n        /* \"#utility.yul\":20876:20899   */\n      sub\n        /* \"#utility.yul\":20872:20904   */\n      slt\n        /* \"#utility.yul\":20869:20988   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":20907:20986   */\n      tag_517\n      tag_225\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20869:20988   */\n    tag_516:\n        /* \"#utility.yul\":21027:21028   */\n      0x00\n        /* \"#utility.yul\":21052:21113   */\n      tag_518\n        /* \"#utility.yul\":21105:21112   */\n      dup5\n        /* \"#utility.yul\":21096:21102   */\n      dup3\n        /* \"#utility.yul\":21085:21094   */\n      dup6\n        /* \"#utility.yul\":21081:21103   */\n      add\n        /* \"#utility.yul\":21052:21113   */\n      tag_287\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":21042:21113   */\n      swap2\n      pop\n        /* \"#utility.yul\":20998:21123   */\n      pop\n        /* \"#utility.yul\":20785:21130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21136:21234   */\n    tag_288:\n        /* \"#utility.yul\":21187:21193   */\n      0x00\n        /* \"#utility.yul\":21221:21226   */\n      dup2\n        /* \"#utility.yul\":21215:21227   */\n      mload\n        /* \"#utility.yul\":21205:21227   */\n      swap1\n      pop\n        /* \"#utility.yul\":21136:21234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21240:21387   */\n    tag_289:\n        /* \"#utility.yul\":21341:21352   */\n      0x00\n        /* \"#utility.yul\":21378:21381   */\n      dup2\n        /* \"#utility.yul\":21363:21381   */\n      swap1\n      pop\n        /* \"#utility.yul\":21240:21387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21393:21779   */\n    tag_290:\n        /* \"#utility.yul\":21497:21500   */\n      0x00\n        /* \"#utility.yul\":21525:21563   */\n      tag_522\n        /* \"#utility.yul\":21557:21562   */\n      dup3\n        /* \"#utility.yul\":21525:21563   */\n      tag_288\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21579:21667   */\n      tag_523\n        /* \"#utility.yul\":21660:21666   */\n      dup2\n        /* \"#utility.yul\":21655:21658   */\n      dup6\n        /* \"#utility.yul\":21579:21667   */\n      tag_289\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":21572:21667   */\n      swap4\n      pop\n        /* \"#utility.yul\":21676:21741   */\n      tag_524\n        /* \"#utility.yul\":21734:21740   */\n      dup2\n        /* \"#utility.yul\":21729:21732   */\n      dup6\n        /* \"#utility.yul\":21722:21726   */\n      0x20\n        /* \"#utility.yul\":21715:21720   */\n      dup7\n        /* \"#utility.yul\":21711:21727   */\n      add\n        /* \"#utility.yul\":21676:21741   */\n      tag_235\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":21766:21772   */\n      dup1\n        /* \"#utility.yul\":21761:21764   */\n      dup5\n        /* \"#utility.yul\":21757:21773   */\n      add\n        /* \"#utility.yul\":21750:21773   */\n      swap2\n      pop\n        /* \"#utility.yul\":21501:21779   */\n      pop\n        /* \"#utility.yul\":21393:21779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21785:22056   */\n    tag_207:\n        /* \"#utility.yul\":21915:21918   */\n      0x00\n        /* \"#utility.yul\":21937:22030   */\n      tag_526\n        /* \"#utility.yul\":22026:22029   */\n      dup3\n        /* \"#utility.yul\":22017:22023   */\n      dup5\n        /* \"#utility.yul\":21937:22030   */\n      tag_290\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":21930:22030   */\n      swap2\n      pop\n        /* \"#utility.yul\":22047:22050   */\n      dup2\n        /* \"#utility.yul\":22040:22050   */\n      swap1\n      pop\n        /* \"#utility.yul\":21785:22056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200bc1b62467bf7ebdbbd3e8351294c8417b698887677a79a73e13210f62d1b3dc64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1580": {
									"entryPoint": null,
									"id": 1580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1710": {
									"entryPoint": null,
									"id": 1710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 682,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1540": {
									"entryPoint": 835,
									"id": 1540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 345,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 842,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 538,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:12",
										"nodeType": "YulBlock",
										"src": "0:1707:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "939:413:12",
													"nodeType": "YulBlock",
													"src": "939:413:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:12",
																"nodeType": "YulBlock",
																"src": "985:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:12"
																			},
																			"nativeSrc": "987:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:12"
																		},
																		"nativeSrc": "987:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:12"
																		},
																		"nativeSrc": "956:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "981:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:12"
																},
																"nativeSrc": "952:32:12",
																"nodeType": "YulFunctionCall",
																"src": "952:32:12"
															},
															"nativeSrc": "949:119:12",
															"nodeType": "YulIf",
															"src": "949:119:12"
														},
														{
															"nativeSrc": "1078:128:12",
															"nodeType": "YulBlock",
															"src": "1078:128:12",
															"statements": [
																{
																	"nativeSrc": "1093:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:12"
																				},
																				"nativeSrc": "1164:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:12"
																		},
																		"nativeSrc": "1132:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:12",
															"nodeType": "YulBlock",
															"src": "1216:129:12",
															"statements": [
																{
																	"nativeSrc": "1231:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:12"
																				},
																				"nativeSrc": "1303:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:12"
																		},
																		"nativeSrc": "1271:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:12",
														"nodeType": "YulTypedName",
														"src": "901:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:12",
														"nodeType": "YulTypedName",
														"src": "912:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:12",
														"nodeType": "YulTypedName",
														"src": "924:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:12",
														"nodeType": "YulTypedName",
														"src": "932:6:12",
														"type": ""
													}
												],
												"src": "845:507:12"
											},
											{
												"body": {
													"nativeSrc": "1423:53:12",
													"nodeType": "YulBlock",
													"src": "1423:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:12"
																		},
																		"nativeSrc": "1445:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:12"
																},
																"nativeSrc": "1433:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:12"
															},
															"nativeSrc": "1433:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:12",
														"nodeType": "YulTypedName",
														"src": "1411:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:12",
														"nodeType": "YulTypedName",
														"src": "1418:3:12",
														"type": ""
													}
												],
												"src": "1358:118:12"
											},
											{
												"body": {
													"nativeSrc": "1580:124:12",
													"nodeType": "YulBlock",
													"src": "1580:124:12",
													"statements": [
														{
															"nativeSrc": "1590:26:12",
															"nodeType": "YulAssignment",
															"src": "1590:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:12"
																},
																"nativeSrc": "1598:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:12"
																		},
																		"nativeSrc": "1679:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:12"
																},
																"nativeSrc": "1626:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:12"
															},
															"nativeSrc": "1626:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:12",
														"nodeType": "YulTypedName",
														"src": "1552:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:12",
														"nodeType": "YulTypedName",
														"src": "1564:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:12",
														"nodeType": "YulTypedName",
														"src": "1575:4:12",
														"type": ""
													}
												],
												"src": "1482:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526064600455600a600555348015610019575f80fd5b506040516120d53803806120d5833981810160405281019061003b91906103cf565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ac575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a3919061041c565b60405180910390fd5b6100bb8161015960201b60201c565b50600180819055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101523361021a60201b60201c565b5050610435565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6102286102aa60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610298575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161028f919061041c565b60405180910390fd5b6102a78161015960201b60201c565b50565b6102b861034360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166102dc61034a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146103415761030561034360201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610338919061041c565b60405180910390fd5b565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61039e82610375565b9050919050565b6103ae81610394565b81146103b8575f80fd5b50565b5f815190506103c9816103a5565b92915050565b5f80604083850312156103e5576103e4610371565b5b5f6103f2858286016103bb565b9250506020610403858286016103bb565b9150509250929050565b61041681610394565b82525050565b5f60208201905061042f5f83018461040d565b92915050565b611c93806104425f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806355a373d6116100955780639428cda3116100645780639428cda31461028d578063ad039fad146102bd578063aface8cd146102ed578063f2fde38b14610309576100fe565b806355a373d614610229578063715018a6146102475780637862f04c146102515780638da5cb5b1461026f576100fe565b80632024c1b7116100d15780632024c1b71461018e57806336913a40146101c057806338daefb6146101f1578063469c81101461020d576100fe565b80630d80fefd146101025780631293092e14610134578063147e910814610152578063185870f914610170575b5f80fd5b61011c6004803603810190610117919061112f565b610325565b60405161012b93929190611218565b60405180910390f35b61013c6103ff565b6040516101499190611254565b60405180910390f35b61015a610405565b6040516101679190611254565b60405180910390f35b610178610411565b604051610185919061126d565b60405180910390f35b6101a860048036038101906101a3919061112f565b610436565b6040516101b793929190611218565b60405180910390f35b6101da60048036038101906101d591906112b0565b610568565b6040516101e89291906112ee565b60405180910390f35b61020b6004803603810190610206919061112f565b61070b565b005b61022760048036038101906102229190611448565b610761565b005b610231610ad7565b60405161023e91906114ea565b60405180910390f35b61024f610afc565b005b610259610b06565b6040516102669190611254565b60405180910390f35b610277610b0c565b604051610284919061126d565b60405180910390f35b6102a760048036038101906102a291906112b0565b610b33565b6040516102b49190611254565b60405180910390f35b6102d760048036038101906102d29190611503565b610b5e565b6040516102e491906115e5565b60405180910390f35b6103076004803603810190610302919061112f565b610bf1565b005b610323600480360381019061031e9190611503565b610c03565b005b60068181548110610334575f80fd5b905f5260205f2090600302015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461037890611632565b80601f01602080910402602001604051908101604052809291908181526020018280546103a490611632565b80156103ef5780601f106103c6576101008083540402835291602001916103ef565b820191905f5260205f20905b8154815290600101906020018083116103d257829003601f168201915b5050505050908060020154905083565b60045481565b5f600680549050905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60605f6006805490508410610481576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610478906116ac565b60405180910390fd5b5f60068581548110610496576104956116ca565b5b905f5260205f2090600302019050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010182600201548180546104dc90611632565b80601f016020809104026020016040519081016040528092919081815260200182805461050890611632565b80156105535780601f1061052a57610100808354040283529160200191610553565b820191905f5260205f20905b81548152906001019060200180831161053657829003601f168201915b50505050509150935093509350509193909250565b60605f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905083106105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490611767565b60405180910390fd5b5f60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061063d5761063c6116ca565b5b905f5260205f20015490505f6006828154811061065d5761065c6116ca565b5b905f5260205f209060030201905080600101816002015481805461068090611632565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90611632565b80156106f75780601f106106ce576101008083540402835291602001916106f7565b820191905f5260205f20905b8154815290600101906020018083116106da57829003601f168201915b505050505091509350935050509250929050565b610713610c87565b6064811115610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e906117cf565b60405180910390fd5b8060058190555050565b610769610d0e565b5f606460055460045461077c919061181a565b6107869190611888565b90505f8160045461079791906118b8565b90506108083360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d54909392919063ffffffff16565b61085633308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d54909392919063ffffffff16565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016108b09190611254565b5f604051808303815f87803b1580156108c7575f80fd5b505af11580156108d9573d5f803e3d5ffd5b50505050600660405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200142815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161098f9190611a7f565b5060408201518160020155505060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060016006805490506109eb91906118b8565b908060018154018082558091505060019003905f5260205f20015f90919091909150557f69e27f80547602d16208b028c44d20f25956e1fb7d0f51d62aa02f392426f37182604051610a3d9190611254565b60405180910390a17f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac781604051610a749190611254565b60405180910390a13373ffffffffffffffffffffffffffffffffffffffff167f0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e813084604051610ac29190611b4e565b60405180910390a25050610ad4610dd6565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b04610c87565b565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6007602052815f5260405f208181548110610b4c575f80fd5b905f5260205f20015f91509150505481565b606060075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610be557602002820191905f5260205f20905b815481526020019060010190808311610bd1575b50505050509050919050565b610bf9610c87565b8060048190555050565b610c0b610c87565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c72919061126d565b60405180910390fd5b610c8481610ddf565b50565b610c8f610ea0565b73ffffffffffffffffffffffffffffffffffffffff16610cad610b0c565b73ffffffffffffffffffffffffffffffffffffffff1614610d0c57610cd0610ea0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d03919061126d565b60405180910390fd5b565b600260015403610d4a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b610dd0848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d8993929190611b6e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ea7565b50505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f610ed1828473ffffffffffffffffffffffffffffffffffffffff16610f3c90919063ffffffff16565b90505f815114158015610ef5575080806020019051810190610ef39190611bd8565b155b15610f3757826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f2e919061126d565b60405180910390fd5b505050565b6060610f4983835f610f51565b905092915050565b606081471015610f9857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610f8f919061126d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610fc09190611c47565b5f6040518083038185875af1925050503d805f8114610ffa576040519150601f19603f3d011682016040523d82523d5f602084013e610fff565b606091505b509150915061100f86838361101a565b925050509392505050565b60608261102f5761102a826110a7565b61109f565b5f825114801561105557505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161108e919061126d565b60405180910390fd5b8190506110a0565b5b9392505050565b5f815111156110b95780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61110e816110fc565b8114611118575f80fd5b50565b5f8135905061112981611105565b92915050565b5f60208284031215611144576111436110f4565b5b5f6111518482850161111b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111838261115a565b9050919050565b61119381611179565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111db82611199565b6111e581856111a3565b93506111f58185602086016111b3565b6111fe816111c1565b840191505092915050565b611212816110fc565b82525050565b5f60608201905061122b5f83018661118a565b818103602083015261123d81856111d1565b905061124c6040830184611209565b949350505050565b5f6020820190506112675f830184611209565b92915050565b5f6020820190506112805f83018461118a565b92915050565b61128f81611179565b8114611299575f80fd5b50565b5f813590506112aa81611286565b92915050565b5f80604083850312156112c6576112c56110f4565b5b5f6112d38582860161129c565b92505060206112e48582860161111b565b9150509250929050565b5f6040820190508181035f83015261130681856111d1565b90506113156020830184611209565b9392505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61135a826111c1565b810181811067ffffffffffffffff8211171561137957611378611324565b5b80604052505050565b5f61138b6110eb565b90506113978282611351565b919050565b5f67ffffffffffffffff8211156113b6576113b5611324565b5b6113bf826111c1565b9050602081019050919050565b828183375f83830152505050565b5f6113ec6113e78461139c565b611382565b90508281526020810184848401111561140857611407611320565b5b6114138482856113cc565b509392505050565b5f82601f83011261142f5761142e61131c565b5b813561143f8482602086016113da565b91505092915050565b5f6020828403121561145d5761145c6110f4565b5b5f82013567ffffffffffffffff81111561147a576114796110f8565b5b6114868482850161141b565b91505092915050565b5f819050919050565b5f6114b26114ad6114a88461115a565b61148f565b61115a565b9050919050565b5f6114c382611498565b9050919050565b5f6114d4826114b9565b9050919050565b6114e4816114ca565b82525050565b5f6020820190506114fd5f8301846114db565b92915050565b5f60208284031215611518576115176110f4565b5b5f6115258482850161129c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611560816110fc565b82525050565b5f6115718383611557565b60208301905092915050565b5f602082019050919050565b5f6115938261152e565b61159d8185611538565b93506115a883611548565b805f5b838110156115d85781516115bf8882611566565b97506115ca8361157d565b9250506001810190506115ab565b5085935050505092915050565b5f6020820190508181035f8301526115fd8184611589565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061164957607f821691505b60208210810361165c5761165b611605565b5b50919050565b7f4d65737361676520696e646578206f7574206f6620626f756e647300000000005f82015250565b5f611696601b836111a3565b91506116a182611662565b602082019050919050565b5f6020820190508181035f8301526116c38161168a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4d65737361676520696e646578206f7574206f6620626f756e647320666f72205f8201527f7573657200000000000000000000000000000000000000000000000000000000602082015250565b5f6117516024836111a3565b915061175c826116f7565b604082019050919050565b5f6020820190508181035f83015261177e81611745565b9050919050565b7f496e76616c6964206665652070657263656e74616765000000000000000000005f82015250565b5f6117b96016836111a3565b91506117c482611785565b602082019050919050565b5f6020820190508181035f8301526117e6816117ad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611824826110fc565b915061182f836110fc565b925082820261183d816110fc565b91508282048414831517611854576118536117ed565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611892826110fc565b915061189d836110fc565b9250826118ad576118ac61185b565b5b828204905092915050565b5f6118c2826110fc565b91506118cd836110fc565b92508282039050818111156118e5576118e46117ed565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261190c565b611951868361190c565b95508019841693508086168417925050509392505050565b5f61198361197e611979846110fc565b61148f565b6110fc565b9050919050565b5f819050919050565b61199c83611969565b6119b06119a88261198a565b848454611918565b825550505050565b5f90565b6119c46119b8565b6119cf818484611993565b505050565b5b818110156119f2576119e75f826119bc565b6001810190506119d5565b5050565b601f821115611a3757611a08816118eb565b611a11846118fd565b81016020851015611a20578190505b611a34611a2c856118fd565b8301826119d4565b50505b505050565b5f82821c905092915050565b5f611a575f1984600802611a3c565b1980831691505092915050565b5f611a6f8383611a48565b9150826002028217905092915050565b611a8882611199565b67ffffffffffffffff811115611aa157611aa0611324565b5b611aab8254611632565b611ab68282856119f6565b5f60209050601f831160018114611ae7575f8415611ad5578287015190505b611adf8582611a64565b865550611b46565b601f198416611af5866118eb565b5f5b82811015611b1c57848901518255600182019150602085019450602081019050611af7565b86831015611b395784890151611b35601f891682611a48565b8355505b6001600288020188555050505b505050505050565b5f6020820190508181035f830152611b6681846111d1565b905092915050565b5f606082019050611b815f83018661118a565b611b8e602083018561118a565b611b9b6040830184611209565b949350505050565b5f8115159050919050565b611bb781611ba3565b8114611bc1575f80fd5b50565b5f81519050611bd281611bae565b92915050565b5f60208284031215611bed57611bec6110f4565b5b5f611bfa84828501611bc4565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611c2182611c03565b611c2b8185611c0d565b9350611c3b8185602086016111b3565b80840191505092915050565b5f611c528284611c17565b91508190509291505056fea26469706673582212200bc1b62467bf7ebdbbd3e8351294c8417b698887677a79a73e13210f62d1b3dc64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x4 SSTORE PUSH1 0xA PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x20D5 CODESIZE SUB DUP1 PUSH2 0x20D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3B SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB DUP2 PUSH2 0x159 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x152 CALLER PUSH2 0x21A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x435 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x298 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x159 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x343 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DC PUSH2 0x34A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x341 JUMPI PUSH2 0x305 PUSH2 0x343 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39E DUP3 PUSH2 0x375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x394 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C9 DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E4 PUSH2 0x371 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3F2 DUP6 DUP3 DUP7 ADD PUSH2 0x3BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x403 DUP6 DUP3 DUP7 ADD PUSH2 0x3BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42F PUSH0 DUP4 ADD DUP5 PUSH2 0x40D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C93 DUP1 PUSH2 0x442 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55A373D6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9428CDA3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9428CDA3 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xAD039FAD EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAFACE8CD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x309 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x7862F04C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2024C1B7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2024C1B7 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x36913A40 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x38DAEFB6 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x469C8110 EQ PUSH2 0x20D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xD80FEFD EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1293092E EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x147E9108 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x185870F9 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP3 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0xAFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x378 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A4 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x4DC SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x508 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x553 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x553 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x536 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65D JUMPI PUSH2 0x65C PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x769 PUSH2 0xD0E JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x856 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x69E27F80547602D16208B028C44D20F25956E1FB7D0F51D62AA02F392426F371 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7FCCDA06D6EB51C23CBD16D49B9B3F3EBAFB002DBA1B074895CBB35D0E8130 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xAD4 PUSH2 0xDD6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xC87 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBD1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC87 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC0B PUSH2 0xC87 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xDDF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xEA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCAD PUSH2 0xB0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0C JUMPI PUSH2 0xCD0 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDD0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEA7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xED1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF37 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF49 DUP4 DUP4 PUSH0 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xF98 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x100F DUP7 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x102F JUMPI PUSH2 0x102A DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1055 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1097 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x10A0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x10B9 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110E DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1151 DUP5 DUP3 DUP6 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1183 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DB DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x11E5 DUP2 DUP6 PUSH2 0x11A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1212 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x122B PUSH0 DUP4 ADD DUP7 PUSH2 0x118A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x123D DUP2 DUP6 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x124C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH0 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1280 PUSH0 DUP4 ADD DUP5 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP2 EQ PUSH2 0x1299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12AA DUP2 PUSH2 0x1286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12D3 DUP6 DUP3 DUP7 ADD PUSH2 0x129C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1306 DUP2 DUP6 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1315 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x135A DUP3 PUSH2 0x11C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1379 JUMPI PUSH2 0x1378 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x138B PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP PUSH2 0x1397 DUP3 DUP3 PUSH2 0x1351 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B5 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH2 0x13BF DUP3 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13EC PUSH2 0x13E7 DUP5 PUSH2 0x139C JUMP JUMPDEST PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1408 JUMPI PUSH2 0x1407 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH2 0x1413 DUP5 DUP3 DUP6 PUSH2 0x13CC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x142F JUMPI PUSH2 0x142E PUSH2 0x131C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x143F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x147A JUMPI PUSH2 0x1479 PUSH2 0x10F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1486 DUP5 DUP3 DUP6 ADD PUSH2 0x141B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14B2 PUSH2 0x14AD PUSH2 0x14A8 DUP5 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C3 DUP3 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FD PUSH0 DUP4 ADD DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1525 DUP5 DUP3 DUP6 ADD PUSH2 0x129C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1560 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1571 DUP4 DUP4 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x159D DUP2 DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP4 POP PUSH2 0x15A8 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI DUP2 MLOAD PUSH2 0x15BF DUP9 DUP3 PUSH2 0x1566 JUMP JUMPDEST SWAP8 POP PUSH2 0x15CA DUP4 PUSH2 0x157D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15FD DUP2 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1649 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1605 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65737361676520696E646578206F7574206F6620626F756E64730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 PUSH1 0x1B DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4D65737361676520696E646578206F7574206F6620626F756E647320666F7220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7573657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1751 PUSH1 0x24 DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x175C DUP3 PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177E DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206665652070657263656E7461676500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 PUSH1 0x16 DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C4 DUP3 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E6 DUP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x182F DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x183D DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17ED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1892 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x189D DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x185B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C2 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x18CD DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x17ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1947 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x1951 DUP7 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH2 0x197E PUSH2 0x1979 DUP5 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199C DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x19A8 DUP3 PUSH2 0x198A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1918 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x19C4 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x19CF DUP2 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19E7 PUSH0 DUP3 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A08 DUP2 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1A11 DUP5 PUSH2 0x18FD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A20 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1A34 PUSH2 0x1A2C DUP6 PUSH2 0x18FD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x19D4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A57 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1A3C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6F DUP4 DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A88 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH2 0x1AA0 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH2 0x1AAB DUP3 SLOAD PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1AB6 DUP3 DUP3 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1AD5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1ADF DUP6 DUP3 PUSH2 0x1A64 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1AF5 DUP7 PUSH2 0x18EB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B1C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AF7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1B39 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1B35 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1A48 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B66 DUP2 DUP5 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B81 PUSH0 DUP4 ADD DUP7 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1B8E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB7 DUP2 PUSH2 0x1BA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD2 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BEC PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFA DUP5 DUP3 DUP6 ADD PUSH2 0x1BC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C2B DUP2 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1C3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 DUP5 PUSH2 0x1C17 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xC1 0xB6 0x24 PUSH8 0xBF7EBDBBD3E83512 SWAP5 0xC8 COINBASE PUSH28 0x698887677A79A73E13210F62D1B3DC64736F6C634300081900330000 ",
							"sourceMap": "377:4031:11:-:0;;;576:3;547:32;;714:2;674:42;;1119:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:10;1917:7;:21;;;;1263:14:11::1;1233:13;;:45;;;;;;;;;;;;;;;;;;1306:16;1288:15;;:34;;;;;;;;;;;;;;;;;;1332:29;1350:10;1332:17;;;:29;;:::i;:::-;1119:287:::0;;377:4031;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2543:215::-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;377:4031:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1225": {
									"entryPoint": 3751,
									"id": 1225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3207,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1540": {
									"entryPoint": 3744,
									"id": 1540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1615": {
									"entryPoint": 3542,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1607": {
									"entryPoint": 3342,
									"id": 1607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1527": {
									"entryPoint": 4263,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3551,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@developerFeePercentage_1653": {
									"entryPoint": 2822,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@developerWallet_1647": {
									"entryPoint": 1041,
									"id": 1647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1395": {
									"entryPoint": 3921,
									"id": 1395,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1349": {
									"entryPoint": 3900,
									"id": 1349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMessageByIndex_1879": {
									"entryPoint": 1078,
									"id": 1879,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getTotalMessages_1844": {
									"entryPoint": 1029,
									"id": 1844,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserMessageByIndex_1935": {
									"entryPoint": 1384,
									"id": 1935,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@getUserMessageIndexes_1892": {
									"entryPoint": 2910,
									"id": 1892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@messageCost_1650": {
									"entryPoint": 1023,
									"id": 1650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@messages_1664": {
									"entryPoint": 805,
									"id": 1664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2828,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1717": {
									"entryPoint": 2812,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1062": {
									"entryPoint": 3412,
									"id": 1062,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sendMessage_1835": {
									"entryPoint": 1889,
									"id": 1835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDeveloperFeePercentage_1748": {
									"entryPoint": 1803,
									"id": 1748,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMessageCost_1729": {
									"entryPoint": 3057,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenContract_1645": {
									"entryPoint": 2775,
									"id": 1645,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3075,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMessages_1669": {
									"entryPoint": 2867,
									"id": 1669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1487": {
									"entryPoint": 4122,
									"id": 1487,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20Burnable_$923_to_t_address_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20Burnable_$923__to_t_address__fromStack_reversed": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ERC20Burnable_$923_to_t_address": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22059:12",
										"nodeType": "YulBlock",
										"src": "0:22059:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:32:12",
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nativeSrc": "389:16:12",
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:12",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nativeSrc": "460:79:12",
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nativeSrc": "490:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nativeSrc": "480:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nativeSrc": "473:43:12",
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nativeSrc": "470:63:12",
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:12",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nativeSrc": "597:87:12",
													"nodeType": "YulBlock",
													"src": "597:87:12",
													"statements": [
														{
															"nativeSrc": "607:29:12",
															"nodeType": "YulAssignment",
															"src": "607:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:12"
																},
																"nativeSrc": "616:20:12",
																"nodeType": "YulFunctionCall",
																"src": "616:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:12"
																},
																"nativeSrc": "645:33:12",
																"nodeType": "YulFunctionCall",
																"src": "645:33:12"
															},
															"nativeSrc": "645:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:12",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:12",
														"nodeType": "YulTypedName",
														"src": "583:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:12",
														"nodeType": "YulTypedName",
														"src": "591:5:12",
														"type": ""
													}
												],
												"src": "545:139:12"
											},
											{
												"body": {
													"nativeSrc": "756:263:12",
													"nodeType": "YulBlock",
													"src": "756:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:12",
																"nodeType": "YulBlock",
																"src": "802:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:12"
																			},
																			"nativeSrc": "804:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:12"
																		},
																		"nativeSrc": "804:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:12"
																		},
																		"nativeSrc": "773:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:12",
																		"nodeType": "YulLiteral",
																		"src": "798:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:12"
																},
																"nativeSrc": "769:32:12",
																"nodeType": "YulFunctionCall",
																"src": "769:32:12"
															},
															"nativeSrc": "766:119:12",
															"nodeType": "YulIf",
															"src": "766:119:12"
														},
														{
															"nativeSrc": "895:117:12",
															"nodeType": "YulBlock",
															"src": "895:117:12",
															"statements": [
																{
																	"nativeSrc": "910:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:12",
																		"nodeType": "YulLiteral",
																		"src": "924:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:12",
																			"nodeType": "YulTypedName",
																			"src": "914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:12",
																	"nodeType": "YulAssignment",
																	"src": "939:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:12"
																				},
																				"nativeSrc": "970:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:12"
																		},
																		"nativeSrc": "949:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:12",
														"nodeType": "YulTypedName",
														"src": "726:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:12",
														"nodeType": "YulTypedName",
														"src": "737:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:12",
														"nodeType": "YulTypedName",
														"src": "749:6:12",
														"type": ""
													}
												],
												"src": "690:329:12"
											},
											{
												"body": {
													"nativeSrc": "1070:81:12",
													"nodeType": "YulBlock",
													"src": "1070:81:12",
													"statements": [
														{
															"nativeSrc": "1080:65:12",
															"nodeType": "YulAssignment",
															"src": "1080:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:12"
																},
																"nativeSrc": "1091:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:12",
														"nodeType": "YulTypedName",
														"src": "1052:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:12",
														"nodeType": "YulTypedName",
														"src": "1062:7:12",
														"type": ""
													}
												],
												"src": "1025:126:12"
											},
											{
												"body": {
													"nativeSrc": "1202:51:12",
													"nodeType": "YulBlock",
													"src": "1202:51:12",
													"statements": [
														{
															"nativeSrc": "1212:35:12",
															"nodeType": "YulAssignment",
															"src": "1212:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:12"
																},
																"nativeSrc": "1223:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:12",
														"nodeType": "YulTypedName",
														"src": "1184:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:12",
														"nodeType": "YulTypedName",
														"src": "1194:7:12",
														"type": ""
													}
												],
												"src": "1157:96:12"
											},
											{
												"body": {
													"nativeSrc": "1324:53:12",
													"nodeType": "YulBlock",
													"src": "1324:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:12"
																		},
																		"nativeSrc": "1346:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nativeSrc": "1334:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:12"
															},
															"nativeSrc": "1334:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:12",
														"nodeType": "YulTypedName",
														"src": "1312:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:12",
														"nodeType": "YulTypedName",
														"src": "1319:3:12",
														"type": ""
													}
												],
												"src": "1259:118:12"
											},
											{
												"body": {
													"nativeSrc": "1442:40:12",
													"nodeType": "YulBlock",
													"src": "1442:40:12",
													"statements": [
														{
															"nativeSrc": "1453:22:12",
															"nodeType": "YulAssignment",
															"src": "1453:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1469:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1469:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1463:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1463:5:12"
																},
																"nativeSrc": "1463:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1463:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1453:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1453:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1383:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1425:5:12",
														"nodeType": "YulTypedName",
														"src": "1425:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1435:6:12",
														"nodeType": "YulTypedName",
														"src": "1435:6:12",
														"type": ""
													}
												],
												"src": "1383:99:12"
											},
											{
												"body": {
													"nativeSrc": "1584:73:12",
													"nodeType": "YulBlock",
													"src": "1584:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1601:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1601:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1606:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1606:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1594:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:12"
																},
																"nativeSrc": "1594:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1594:19:12"
															},
															"nativeSrc": "1594:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1594:19:12"
														},
														{
															"nativeSrc": "1622:29:12",
															"nodeType": "YulAssignment",
															"src": "1622:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1646:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1637:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:12"
																},
																"nativeSrc": "1637:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1637:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1622:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1622:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1488:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1556:3:12",
														"nodeType": "YulTypedName",
														"src": "1556:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1561:6:12",
														"nodeType": "YulTypedName",
														"src": "1561:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1572:11:12",
														"nodeType": "YulTypedName",
														"src": "1572:11:12",
														"type": ""
													}
												],
												"src": "1488:169:12"
											},
											{
												"body": {
													"nativeSrc": "1725:77:12",
													"nodeType": "YulBlock",
													"src": "1725:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1742:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1742:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1747:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1747:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1752:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1752:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1736:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1736:5:12"
																},
																"nativeSrc": "1736:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1736:23:12"
															},
															"nativeSrc": "1736:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1736:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1779:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1779:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1784:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1784:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1775:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:12"
																		},
																		"nativeSrc": "1775:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1775:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1793:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1793:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1768:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:12"
																},
																"nativeSrc": "1768:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1768:27:12"
															},
															"nativeSrc": "1768:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1768:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1663:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1707:3:12",
														"nodeType": "YulTypedName",
														"src": "1707:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1712:3:12",
														"nodeType": "YulTypedName",
														"src": "1712:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1717:6:12",
														"nodeType": "YulTypedName",
														"src": "1717:6:12",
														"type": ""
													}
												],
												"src": "1663:139:12"
											},
											{
												"body": {
													"nativeSrc": "1856:54:12",
													"nodeType": "YulBlock",
													"src": "1856:54:12",
													"statements": [
														{
															"nativeSrc": "1866:38:12",
															"nodeType": "YulAssignment",
															"src": "1866:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1884:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1884:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1891:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1891:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1880:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1880:3:12"
																		},
																		"nativeSrc": "1880:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1880:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1900:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1900:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1896:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:12"
																		},
																		"nativeSrc": "1896:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1896:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1876:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1876:3:12"
																},
																"nativeSrc": "1876:28:12",
																"nodeType": "YulFunctionCall",
																"src": "1876:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1866:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1808:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:12",
														"nodeType": "YulTypedName",
														"src": "1839:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1849:6:12",
														"nodeType": "YulTypedName",
														"src": "1849:6:12",
														"type": ""
													}
												],
												"src": "1808:102:12"
											},
											{
												"body": {
													"nativeSrc": "2008:285:12",
													"nodeType": "YulBlock",
													"src": "2008:285:12",
													"statements": [
														{
															"nativeSrc": "2018:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2018:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2065:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2065:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2032:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2032:32:12"
																},
																"nativeSrc": "2032:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2032:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2022:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2022:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2080:78:12",
															"nodeType": "YulAssignment",
															"src": "2080:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2146:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2146:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2151:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2151:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2087:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2087:58:12"
																},
																"nativeSrc": "2087:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2087:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2080:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2206:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2206:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2213:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2213:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2202:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:12"
																		},
																		"nativeSrc": "2202:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2202:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2220:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2220:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2225:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2225:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2167:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:34:12"
																},
																"nativeSrc": "2167:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:65:12"
															},
															"nativeSrc": "2167:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2167:65:12"
														},
														{
															"nativeSrc": "2241:46:12",
															"nodeType": "YulAssignment",
															"src": "2241:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2252:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2252:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2279:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2257:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2257:21:12"
																		},
																		"nativeSrc": "2257:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:12"
																},
																"nativeSrc": "2248:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2248:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2241:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1916:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1989:5:12",
														"nodeType": "YulTypedName",
														"src": "1989:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1996:3:12",
														"nodeType": "YulTypedName",
														"src": "1996:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2004:3:12",
														"nodeType": "YulTypedName",
														"src": "2004:3:12",
														"type": ""
													}
												],
												"src": "1916:377:12"
											},
											{
												"body": {
													"nativeSrc": "2364:53:12",
													"nodeType": "YulBlock",
													"src": "2364:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2381:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2381:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2404:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2404:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2386:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2386:17:12"
																		},
																		"nativeSrc": "2386:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:12"
																},
																"nativeSrc": "2374:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2374:37:12"
															},
															"nativeSrc": "2374:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2374:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2299:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2352:5:12",
														"nodeType": "YulTypedName",
														"src": "2352:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2359:3:12",
														"nodeType": "YulTypedName",
														"src": "2359:3:12",
														"type": ""
													}
												],
												"src": "2299:118:12"
											},
											{
												"body": {
													"nativeSrc": "2597:359:12",
													"nodeType": "YulBlock",
													"src": "2597:359:12",
													"statements": [
														{
															"nativeSrc": "2607:26:12",
															"nodeType": "YulAssignment",
															"src": "2607:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2619:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2619:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2630:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2630:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:12"
																},
																"nativeSrc": "2615:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2615:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2607:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2607:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2687:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2700:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2711:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2711:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2696:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2696:3:12"
																		},
																		"nativeSrc": "2696:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2696:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2643:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2643:43:12"
																},
																"nativeSrc": "2643:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2643:71:12"
															},
															"nativeSrc": "2643:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2643:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2735:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2746:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2746:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nativeSrc": "2731:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2755:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2761:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2761:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2751:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:12"
																		},
																		"nativeSrc": "2751:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:12"
																},
																"nativeSrc": "2724:48:12",
																"nodeType": "YulFunctionCall",
																"src": "2724:48:12"
															},
															"nativeSrc": "2724:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "2724:48:12"
														},
														{
															"nativeSrc": "2781:86:12",
															"nodeType": "YulAssignment",
															"src": "2781:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2853:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2862:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2862:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2789:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2789:63:12"
																},
																"nativeSrc": "2789:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2789:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2781:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2781:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2921:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2921:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2945:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2945:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:12"
																		},
																		"nativeSrc": "2930:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2930:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2877:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2877:43:12"
																},
																"nativeSrc": "2877:72:12",
																"nodeType": "YulFunctionCall",
																"src": "2877:72:12"
															},
															"nativeSrc": "2877:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "2877:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "2423:533:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2553:9:12",
														"nodeType": "YulTypedName",
														"src": "2553:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2565:6:12",
														"nodeType": "YulTypedName",
														"src": "2565:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2573:6:12",
														"nodeType": "YulTypedName",
														"src": "2573:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2581:6:12",
														"nodeType": "YulTypedName",
														"src": "2581:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2592:4:12",
														"nodeType": "YulTypedName",
														"src": "2592:4:12",
														"type": ""
													}
												],
												"src": "2423:533:12"
											},
											{
												"body": {
													"nativeSrc": "3060:124:12",
													"nodeType": "YulBlock",
													"src": "3060:124:12",
													"statements": [
														{
															"nativeSrc": "3070:26:12",
															"nodeType": "YulAssignment",
															"src": "3070:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3093:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3093:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3078:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:12"
																},
																"nativeSrc": "3078:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3078:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3070:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3070:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3150:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3163:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3174:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3174:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3159:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:12"
																		},
																		"nativeSrc": "3159:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3106:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3106:43:12"
																},
																"nativeSrc": "3106:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3106:71:12"
															},
															"nativeSrc": "3106:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3106:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2962:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3032:9:12",
														"nodeType": "YulTypedName",
														"src": "3032:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3044:6:12",
														"nodeType": "YulTypedName",
														"src": "3044:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3055:4:12",
														"nodeType": "YulTypedName",
														"src": "3055:4:12",
														"type": ""
													}
												],
												"src": "2962:222:12"
											},
											{
												"body": {
													"nativeSrc": "3288:124:12",
													"nodeType": "YulBlock",
													"src": "3288:124:12",
													"statements": [
														{
															"nativeSrc": "3298:26:12",
															"nodeType": "YulAssignment",
															"src": "3298:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:12"
																},
																"nativeSrc": "3306:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3306:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3378:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3378:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3391:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3391:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3402:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3402:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3387:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:12"
																		},
																		"nativeSrc": "3387:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3387:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3334:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3334:43:12"
																},
																"nativeSrc": "3334:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3334:71:12"
															},
															"nativeSrc": "3334:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3334:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3190:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3260:9:12",
														"nodeType": "YulTypedName",
														"src": "3260:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3283:4:12",
														"nodeType": "YulTypedName",
														"src": "3283:4:12",
														"type": ""
													}
												],
												"src": "3190:222:12"
											},
											{
												"body": {
													"nativeSrc": "3461:79:12",
													"nodeType": "YulBlock",
													"src": "3461:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3518:16:12",
																"nodeType": "YulBlock",
																"src": "3518:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3527:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3527:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3530:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3530:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3520:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3520:6:12"
																			},
																			"nativeSrc": "3520:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3520:12:12"
																		},
																		"nativeSrc": "3520:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3520:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3484:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3484:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3509:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3509:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3491:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3491:17:12"
																				},
																				"nativeSrc": "3491:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3491:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3481:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3481:2:12"
																		},
																		"nativeSrc": "3481:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:12"
																},
																"nativeSrc": "3474:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3474:43:12"
															},
															"nativeSrc": "3471:63:12",
															"nodeType": "YulIf",
															"src": "3471:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3418:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3454:5:12",
														"nodeType": "YulTypedName",
														"src": "3454:5:12",
														"type": ""
													}
												],
												"src": "3418:122:12"
											},
											{
												"body": {
													"nativeSrc": "3598:87:12",
													"nodeType": "YulBlock",
													"src": "3598:87:12",
													"statements": [
														{
															"nativeSrc": "3608:29:12",
															"nodeType": "YulAssignment",
															"src": "3608:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3630:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3617:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3617:12:12"
																},
																"nativeSrc": "3617:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3617:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3608:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3608:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3673:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3673:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3646:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3646:26:12"
																},
																"nativeSrc": "3646:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3646:33:12"
															},
															"nativeSrc": "3646:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3646:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3546:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3576:6:12",
														"nodeType": "YulTypedName",
														"src": "3576:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3584:3:12",
														"nodeType": "YulTypedName",
														"src": "3584:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3592:5:12",
														"nodeType": "YulTypedName",
														"src": "3592:5:12",
														"type": ""
													}
												],
												"src": "3546:139:12"
											},
											{
												"body": {
													"nativeSrc": "3774:391:12",
													"nodeType": "YulBlock",
													"src": "3774:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3820:83:12",
																"nodeType": "YulBlock",
																"src": "3820:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3822:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3822:77:12"
																			},
																			"nativeSrc": "3822:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3822:79:12"
																		},
																		"nativeSrc": "3822:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3822:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3795:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3795:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3804:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3791:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:12"
																		},
																		"nativeSrc": "3791:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3816:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3787:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:12"
																},
																"nativeSrc": "3787:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3787:32:12"
															},
															"nativeSrc": "3784:119:12",
															"nodeType": "YulIf",
															"src": "3784:119:12"
														},
														{
															"nativeSrc": "3913:117:12",
															"nodeType": "YulBlock",
															"src": "3913:117:12",
															"statements": [
																{
																	"nativeSrc": "3928:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3928:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3942:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3942:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3932:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3932:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3957:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3957:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3992:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3992:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4003:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4003:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3988:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3988:3:12"
																				},
																				"nativeSrc": "3988:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3988:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4012:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4012:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3967:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3967:20:12"
																		},
																		"nativeSrc": "3967:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3967:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3957:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3957:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4040:118:12",
															"nodeType": "YulBlock",
															"src": "4040:118:12",
															"statements": [
																{
																	"nativeSrc": "4055:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4055:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4069:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4069:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4059:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4059:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4085:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4085:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4120:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4120:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4131:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4116:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4116:3:12"
																				},
																				"nativeSrc": "4116:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4116:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4140:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4140:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4095:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4095:20:12"
																		},
																		"nativeSrc": "4095:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4095:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4085:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4085:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3691:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3736:9:12",
														"nodeType": "YulTypedName",
														"src": "3736:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3747:7:12",
														"nodeType": "YulTypedName",
														"src": "3747:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3759:6:12",
														"nodeType": "YulTypedName",
														"src": "3759:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3767:6:12",
														"nodeType": "YulTypedName",
														"src": "3767:6:12",
														"type": ""
													}
												],
												"src": "3691:474:12"
											},
											{
												"body": {
													"nativeSrc": "4317:277:12",
													"nodeType": "YulBlock",
													"src": "4317:277:12",
													"statements": [
														{
															"nativeSrc": "4327:26:12",
															"nodeType": "YulAssignment",
															"src": "4327:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4339:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4339:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4350:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4350:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:12"
																},
																"nativeSrc": "4335:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4335:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4327:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4327:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4374:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4385:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4385:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:12"
																		},
																		"nativeSrc": "4370:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4393:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4393:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4399:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4389:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:12"
																		},
																		"nativeSrc": "4389:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4389:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4363:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:12"
																},
																"nativeSrc": "4363:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4363:47:12"
															},
															"nativeSrc": "4363:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4363:47:12"
														},
														{
															"nativeSrc": "4419:86:12",
															"nodeType": "YulAssignment",
															"src": "4419:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4491:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4491:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4500:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4500:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4427:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "4427:63:12"
																},
																"nativeSrc": "4427:78:12",
																"nodeType": "YulFunctionCall",
																"src": "4427:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4419:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4419:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4559:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4559:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4572:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4572:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4583:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4583:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4568:3:12"
																		},
																		"nativeSrc": "4568:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4568:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4515:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4515:43:12"
																},
																"nativeSrc": "4515:72:12",
																"nodeType": "YulFunctionCall",
																"src": "4515:72:12"
															},
															"nativeSrc": "4515:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "4515:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "4171:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4281:9:12",
														"nodeType": "YulTypedName",
														"src": "4281:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4293:6:12",
														"nodeType": "YulTypedName",
														"src": "4293:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4301:6:12",
														"nodeType": "YulTypedName",
														"src": "4301:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4312:4:12",
														"nodeType": "YulTypedName",
														"src": "4312:4:12",
														"type": ""
													}
												],
												"src": "4171:423:12"
											},
											{
												"body": {
													"nativeSrc": "4689:28:12",
													"nodeType": "YulBlock",
													"src": "4689:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4706:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4706:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4709:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4699:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:12"
																},
																"nativeSrc": "4699:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4699:12:12"
															},
															"nativeSrc": "4699:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4699:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4600:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4600:117:12"
											},
											{
												"body": {
													"nativeSrc": "4812:28:12",
													"nodeType": "YulBlock",
													"src": "4812:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4829:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4829:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4832:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4832:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4822:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4822:6:12"
																},
																"nativeSrc": "4822:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4822:12:12"
															},
															"nativeSrc": "4822:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4822:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4723:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4723:117:12"
											},
											{
												"body": {
													"nativeSrc": "4874:152:12",
													"nodeType": "YulBlock",
													"src": "4874:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4891:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4891:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4894:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4894:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:12"
																},
																"nativeSrc": "4884:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4884:88:12"
															},
															"nativeSrc": "4884:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4884:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4988:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4988:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4991:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4991:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4981:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:12"
																},
																"nativeSrc": "4981:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4981:15:12"
															},
															"nativeSrc": "4981:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4981:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5012:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5012:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5015:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5005:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:12"
																},
																"nativeSrc": "5005:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5005:15:12"
															},
															"nativeSrc": "5005:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5005:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4846:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4846:180:12"
											},
											{
												"body": {
													"nativeSrc": "5075:238:12",
													"nodeType": "YulBlock",
													"src": "5075:238:12",
													"statements": [
														{
															"nativeSrc": "5085:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5085:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5107:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5107:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5137:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5137:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5115:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5115:21:12"
																		},
																		"nativeSrc": "5115:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:12"
																},
																"nativeSrc": "5103:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5103:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5089:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5089:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5254:22:12",
																"nodeType": "YulBlock",
																"src": "5254:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5256:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5256:16:12"
																			},
																			"nativeSrc": "5256:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5256:18:12"
																		},
																		"nativeSrc": "5256:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5256:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5197:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5197:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5209:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5209:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5194:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5194:2:12"
																		},
																		"nativeSrc": "5194:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5233:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5233:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5245:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5245:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5230:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5230:2:12"
																		},
																		"nativeSrc": "5230:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5230:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5191:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5191:2:12"
																},
																"nativeSrc": "5191:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5191:62:12"
															},
															"nativeSrc": "5188:88:12",
															"nodeType": "YulIf",
															"src": "5188:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5292:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5292:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5296:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5296:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5285:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:12"
																},
																"nativeSrc": "5285:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5285:22:12"
															},
															"nativeSrc": "5285:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5285:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5032:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5061:6:12",
														"nodeType": "YulTypedName",
														"src": "5061:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5069:4:12",
														"nodeType": "YulTypedName",
														"src": "5069:4:12",
														"type": ""
													}
												],
												"src": "5032:281:12"
											},
											{
												"body": {
													"nativeSrc": "5360:88:12",
													"nodeType": "YulBlock",
													"src": "5360:88:12",
													"statements": [
														{
															"nativeSrc": "5370:30:12",
															"nodeType": "YulAssignment",
															"src": "5370:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5380:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5380:18:12"
																},
																"nativeSrc": "5380:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5380:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5370:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5429:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5429:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5437:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5437:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5409:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5409:19:12"
																},
																"nativeSrc": "5409:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5409:33:12"
															},
															"nativeSrc": "5409:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5409:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5319:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5344:4:12",
														"nodeType": "YulTypedName",
														"src": "5344:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5353:6:12",
														"nodeType": "YulTypedName",
														"src": "5353:6:12",
														"type": ""
													}
												],
												"src": "5319:129:12"
											},
											{
												"body": {
													"nativeSrc": "5521:241:12",
													"nodeType": "YulBlock",
													"src": "5521:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5626:22:12",
																"nodeType": "YulBlock",
																"src": "5626:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5628:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5628:16:12"
																			},
																			"nativeSrc": "5628:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5628:18:12"
																		},
																		"nativeSrc": "5628:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5628:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5598:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5598:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5606:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5606:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5595:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5595:2:12"
																},
																"nativeSrc": "5595:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5595:30:12"
															},
															"nativeSrc": "5592:56:12",
															"nodeType": "YulIf",
															"src": "5592:56:12"
														},
														{
															"nativeSrc": "5658:37:12",
															"nodeType": "YulAssignment",
															"src": "5658:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5688:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5688:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5666:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "5666:21:12"
																},
																"nativeSrc": "5666:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5666:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5658:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5658:4:12"
																}
															]
														},
														{
															"nativeSrc": "5732:23:12",
															"nodeType": "YulAssignment",
															"src": "5732:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5744:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5744:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5750:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5750:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5740:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:12"
																},
																"nativeSrc": "5740:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5740:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5732:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5732:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5454:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5505:6:12",
														"nodeType": "YulTypedName",
														"src": "5505:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5516:4:12",
														"nodeType": "YulTypedName",
														"src": "5516:4:12",
														"type": ""
													}
												],
												"src": "5454:308:12"
											},
											{
												"body": {
													"nativeSrc": "5832:84:12",
													"nodeType": "YulBlock",
													"src": "5832:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5856:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5856:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5861:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5861:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5866:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5866:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5843:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5843:12:12"
																},
																"nativeSrc": "5843:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5843:30:12"
															},
															"nativeSrc": "5843:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5843:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5893:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5893:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5898:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5898:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5889:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:12"
																		},
																		"nativeSrc": "5889:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5907:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5907:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:12"
																},
																"nativeSrc": "5882:27:12",
																"nodeType": "YulFunctionCall",
																"src": "5882:27:12"
															},
															"nativeSrc": "5882:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "5882:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5768:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5814:3:12",
														"nodeType": "YulTypedName",
														"src": "5814:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5819:3:12",
														"nodeType": "YulTypedName",
														"src": "5819:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5824:6:12",
														"nodeType": "YulTypedName",
														"src": "5824:6:12",
														"type": ""
													}
												],
												"src": "5768:148:12"
											},
											{
												"body": {
													"nativeSrc": "6006:341:12",
													"nodeType": "YulBlock",
													"src": "6006:341:12",
													"statements": [
														{
															"nativeSrc": "6016:75:12",
															"nodeType": "YulAssignment",
															"src": "6016:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6083:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6083:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6041:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "6041:41:12"
																		},
																		"nativeSrc": "6041:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6041:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6025:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6025:15:12"
																},
																"nativeSrc": "6025:66:12",
																"nodeType": "YulFunctionCall",
																"src": "6025:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6016:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6016:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6107:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6107:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6114:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6114:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6100:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:12"
																},
																"nativeSrc": "6100:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6100:21:12"
															},
															"nativeSrc": "6100:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6100:21:12"
														},
														{
															"nativeSrc": "6130:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6130:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6145:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6145:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6152:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6152:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6141:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6141:3:12"
																},
																"nativeSrc": "6141:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6141:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6134:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6134:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6195:83:12",
																"nodeType": "YulBlock",
																"src": "6195:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6197:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:77:12"
																			},
																			"nativeSrc": "6197:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6197:79:12"
																		},
																		"nativeSrc": "6197:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6197:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6176:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6176:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6181:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6181:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6172:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:12"
																		},
																		"nativeSrc": "6172:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6190:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6190:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6169:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6169:2:12"
																},
																"nativeSrc": "6169:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6169:25:12"
															},
															"nativeSrc": "6166:112:12",
															"nodeType": "YulIf",
															"src": "6166:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6324:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6324:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6329:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6329:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6334:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6334:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6287:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "6287:36:12"
																},
																"nativeSrc": "6287:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6287:54:12"
															},
															"nativeSrc": "6287:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6287:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5922:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5979:3:12",
														"nodeType": "YulTypedName",
														"src": "5979:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5984:6:12",
														"nodeType": "YulTypedName",
														"src": "5984:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5992:3:12",
														"nodeType": "YulTypedName",
														"src": "5992:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6000:5:12",
														"nodeType": "YulTypedName",
														"src": "6000:5:12",
														"type": ""
													}
												],
												"src": "5922:425:12"
											},
											{
												"body": {
													"nativeSrc": "6429:278:12",
													"nodeType": "YulBlock",
													"src": "6429:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6478:83:12",
																"nodeType": "YulBlock",
																"src": "6478:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6480:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6480:77:12"
																			},
																			"nativeSrc": "6480:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6480:79:12"
																		},
																		"nativeSrc": "6480:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6480:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6457:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6457:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6465:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6465:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6453:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6453:3:12"
																				},
																				"nativeSrc": "6453:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6453:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6472:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6449:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6449:3:12"
																		},
																		"nativeSrc": "6449:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6449:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6442:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6442:6:12"
																},
																"nativeSrc": "6442:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6442:35:12"
															},
															"nativeSrc": "6439:122:12",
															"nodeType": "YulIf",
															"src": "6439:122:12"
														},
														{
															"nativeSrc": "6570:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6570:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6597:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6597:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6584:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6584:12:12"
																},
																"nativeSrc": "6584:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6584:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6574:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6574:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6613:88:12",
															"nodeType": "YulAssignment",
															"src": "6613:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6674:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6674:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6682:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6670:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:12"
																		},
																		"nativeSrc": "6670:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6689:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6689:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6697:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6697:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6622:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "6622:47:12"
																},
																"nativeSrc": "6622:79:12",
																"nodeType": "YulFunctionCall",
																"src": "6622:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6613:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6613:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6367:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6407:6:12",
														"nodeType": "YulTypedName",
														"src": "6407:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6415:3:12",
														"nodeType": "YulTypedName",
														"src": "6415:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6423:5:12",
														"nodeType": "YulTypedName",
														"src": "6423:5:12",
														"type": ""
													}
												],
												"src": "6367:340:12"
											},
											{
												"body": {
													"nativeSrc": "6789:433:12",
													"nodeType": "YulBlock",
													"src": "6789:433:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6835:83:12",
																"nodeType": "YulBlock",
																"src": "6835:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6837:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6837:77:12"
																			},
																			"nativeSrc": "6837:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6837:79:12"
																		},
																		"nativeSrc": "6837:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6837:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6810:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6810:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6819:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6806:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:12"
																		},
																		"nativeSrc": "6806:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6806:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6831:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6831:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6802:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:12"
																},
																"nativeSrc": "6802:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6802:32:12"
															},
															"nativeSrc": "6799:119:12",
															"nodeType": "YulIf",
															"src": "6799:119:12"
														},
														{
															"nativeSrc": "6928:287:12",
															"nodeType": "YulBlock",
															"src": "6928:287:12",
															"statements": [
																{
																	"nativeSrc": "6943:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6943:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6974:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6974:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6985:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6985:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6970:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6970:3:12"
																				},
																				"nativeSrc": "6970:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6970:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6957:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "6957:12:12"
																		},
																		"nativeSrc": "6957:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6957:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6947:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6947:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7035:83:12",
																		"nodeType": "YulBlock",
																		"src": "7035:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7037:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7037:77:12"
																					},
																					"nativeSrc": "7037:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7037:79:12"
																				},
																				"nativeSrc": "7037:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7037:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7007:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7007:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7015:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7015:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7004:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7004:2:12"
																		},
																		"nativeSrc": "7004:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7004:30:12"
																	},
																	"nativeSrc": "7001:117:12",
																	"nodeType": "YulIf",
																	"src": "7001:117:12"
																},
																{
																	"nativeSrc": "7132:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7132:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7177:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7177:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7188:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7188:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7173:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7173:3:12"
																				},
																				"nativeSrc": "7173:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7173:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7197:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7197:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7142:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7142:30:12"
																		},
																		"nativeSrc": "7142:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7142:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7132:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7132:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "6713:509:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6759:9:12",
														"nodeType": "YulTypedName",
														"src": "6759:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6770:7:12",
														"nodeType": "YulTypedName",
														"src": "6770:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6782:6:12",
														"nodeType": "YulTypedName",
														"src": "6782:6:12",
														"type": ""
													}
												],
												"src": "6713:509:12"
											},
											{
												"body": {
													"nativeSrc": "7260:28:12",
													"nodeType": "YulBlock",
													"src": "7260:28:12",
													"statements": [
														{
															"nativeSrc": "7270:12:12",
															"nodeType": "YulAssignment",
															"src": "7270:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "7277:5:12",
																"nodeType": "YulIdentifier",
																"src": "7277:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7270:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7228:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7246:5:12",
														"nodeType": "YulTypedName",
														"src": "7246:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7256:3:12",
														"nodeType": "YulTypedName",
														"src": "7256:3:12",
														"type": ""
													}
												],
												"src": "7228:60:12"
											},
											{
												"body": {
													"nativeSrc": "7354:82:12",
													"nodeType": "YulBlock",
													"src": "7354:82:12",
													"statements": [
														{
															"nativeSrc": "7364:66:12",
															"nodeType": "YulAssignment",
															"src": "7364:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7422:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7422:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7404:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "7404:17:12"
																				},
																				"nativeSrc": "7404:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7404:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7395:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "7395:8:12"
																		},
																		"nativeSrc": "7395:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7395:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7377:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7377:17:12"
																},
																"nativeSrc": "7377:53:12",
																"nodeType": "YulFunctionCall",
																"src": "7377:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7364:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7364:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7294:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7334:5:12",
														"nodeType": "YulTypedName",
														"src": "7334:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7344:9:12",
														"nodeType": "YulTypedName",
														"src": "7344:9:12",
														"type": ""
													}
												],
												"src": "7294:142:12"
											},
											{
												"body": {
													"nativeSrc": "7502:66:12",
													"nodeType": "YulBlock",
													"src": "7502:66:12",
													"statements": [
														{
															"nativeSrc": "7512:50:12",
															"nodeType": "YulAssignment",
															"src": "7512:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7556:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7556:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7525:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "7525:30:12"
																},
																"nativeSrc": "7525:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7525:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7512:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7512:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7442:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7482:5:12",
														"nodeType": "YulTypedName",
														"src": "7482:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7492:9:12",
														"nodeType": "YulTypedName",
														"src": "7492:9:12",
														"type": ""
													}
												],
												"src": "7442:126:12"
											},
											{
												"body": {
													"nativeSrc": "7655:66:12",
													"nodeType": "YulBlock",
													"src": "7655:66:12",
													"statements": [
														{
															"nativeSrc": "7665:50:12",
															"nodeType": "YulAssignment",
															"src": "7665:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7709:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7709:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7678:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "7678:30:12"
																},
																"nativeSrc": "7678:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7678:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7665:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7665:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20Burnable_$923_to_t_address",
												"nativeSrc": "7574:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7635:5:12",
														"nodeType": "YulTypedName",
														"src": "7635:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7645:9:12",
														"nodeType": "YulTypedName",
														"src": "7645:9:12",
														"type": ""
													}
												],
												"src": "7574:147:12"
											},
											{
												"body": {
													"nativeSrc": "7813:87:12",
													"nodeType": "YulBlock",
													"src": "7813:87:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7830:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7830:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7887:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7887:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20Burnable_$923_to_t_address",
																			"nativeSrc": "7835:51:12",
																			"nodeType": "YulIdentifier",
																			"src": "7835:51:12"
																		},
																		"nativeSrc": "7835:58:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:58:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7823:6:12"
																},
																"nativeSrc": "7823:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7823:71:12"
															},
															"nativeSrc": "7823:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7823:71:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20Burnable_$923_to_t_address_fromStack",
												"nativeSrc": "7727:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7801:5:12",
														"nodeType": "YulTypedName",
														"src": "7801:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7808:3:12",
														"nodeType": "YulTypedName",
														"src": "7808:3:12",
														"type": ""
													}
												],
												"src": "7727:173:12"
											},
											{
												"body": {
													"nativeSrc": "8025:145:12",
													"nodeType": "YulBlock",
													"src": "8025:145:12",
													"statements": [
														{
															"nativeSrc": "8035:26:12",
															"nodeType": "YulAssignment",
															"src": "8035:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8047:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8047:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8058:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8058:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8043:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8043:3:12"
																},
																"nativeSrc": "8043:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8043:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8035:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8035:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8136:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8149:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8160:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8160:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8145:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8145:3:12"
																		},
																		"nativeSrc": "8145:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8145:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20Burnable_$923_to_t_address_fromStack",
																	"nativeSrc": "8071:64:12",
																	"nodeType": "YulIdentifier",
																	"src": "8071:64:12"
																},
																"nativeSrc": "8071:92:12",
																"nodeType": "YulFunctionCall",
																"src": "8071:92:12"
															},
															"nativeSrc": "8071:92:12",
															"nodeType": "YulExpressionStatement",
															"src": "8071:92:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20Burnable_$923__to_t_address__fromStack_reversed",
												"nativeSrc": "7906:264:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7997:9:12",
														"nodeType": "YulTypedName",
														"src": "7997:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8009:6:12",
														"nodeType": "YulTypedName",
														"src": "8009:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8020:4:12",
														"nodeType": "YulTypedName",
														"src": "8020:4:12",
														"type": ""
													}
												],
												"src": "7906:264:12"
											},
											{
												"body": {
													"nativeSrc": "8242:263:12",
													"nodeType": "YulBlock",
													"src": "8242:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8288:83:12",
																"nodeType": "YulBlock",
																"src": "8288:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8290:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8290:77:12"
																			},
																			"nativeSrc": "8290:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8290:79:12"
																		},
																		"nativeSrc": "8290:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8290:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8263:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8263:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8272:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8272:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8259:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8259:3:12"
																		},
																		"nativeSrc": "8259:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8259:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8284:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8284:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8255:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:12"
																},
																"nativeSrc": "8255:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8255:32:12"
															},
															"nativeSrc": "8252:119:12",
															"nodeType": "YulIf",
															"src": "8252:119:12"
														},
														{
															"nativeSrc": "8381:117:12",
															"nodeType": "YulBlock",
															"src": "8381:117:12",
															"statements": [
																{
																	"nativeSrc": "8396:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8396:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8410:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8410:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8400:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8400:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8425:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8425:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8460:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8460:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8471:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8471:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8456:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8456:3:12"
																				},
																				"nativeSrc": "8456:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8456:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8480:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8480:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8435:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8435:20:12"
																		},
																		"nativeSrc": "8435:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8435:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8425:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8425:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8176:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8212:9:12",
														"nodeType": "YulTypedName",
														"src": "8212:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8223:7:12",
														"nodeType": "YulTypedName",
														"src": "8223:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8235:6:12",
														"nodeType": "YulTypedName",
														"src": "8235:6:12",
														"type": ""
													}
												],
												"src": "8176:329:12"
											},
											{
												"body": {
													"nativeSrc": "8585:40:12",
													"nodeType": "YulBlock",
													"src": "8585:40:12",
													"statements": [
														{
															"nativeSrc": "8596:22:12",
															"nodeType": "YulAssignment",
															"src": "8596:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8612:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8612:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8606:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8606:5:12"
																},
																"nativeSrc": "8606:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8606:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8596:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8511:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8568:5:12",
														"nodeType": "YulTypedName",
														"src": "8568:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8578:6:12",
														"nodeType": "YulTypedName",
														"src": "8578:6:12",
														"type": ""
													}
												],
												"src": "8511:114:12"
											},
											{
												"body": {
													"nativeSrc": "8742:73:12",
													"nodeType": "YulBlock",
													"src": "8742:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8759:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8764:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8764:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:12"
																},
																"nativeSrc": "8752:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8752:19:12"
															},
															"nativeSrc": "8752:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8752:19:12"
														},
														{
															"nativeSrc": "8780:29:12",
															"nodeType": "YulAssignment",
															"src": "8780:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8799:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8799:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8804:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8804:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8795:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8795:3:12"
																},
																"nativeSrc": "8795:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8795:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8780:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "8780:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8631:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8714:3:12",
														"nodeType": "YulTypedName",
														"src": "8714:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8719:6:12",
														"nodeType": "YulTypedName",
														"src": "8719:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8730:11:12",
														"nodeType": "YulTypedName",
														"src": "8730:11:12",
														"type": ""
													}
												],
												"src": "8631:184:12"
											},
											{
												"body": {
													"nativeSrc": "8893:60:12",
													"nodeType": "YulBlock",
													"src": "8893:60:12",
													"statements": [
														{
															"nativeSrc": "8903:11:12",
															"nodeType": "YulAssignment",
															"src": "8903:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "8911:3:12",
																"nodeType": "YulIdentifier",
																"src": "8911:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8903:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8903:4:12"
																}
															]
														},
														{
															"nativeSrc": "8924:22:12",
															"nodeType": "YulAssignment",
															"src": "8924:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8936:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8936:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8941:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8941:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8932:3:12"
																},
																"nativeSrc": "8932:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8932:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8924:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8924:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8821:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8880:3:12",
														"nodeType": "YulTypedName",
														"src": "8880:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8888:4:12",
														"nodeType": "YulTypedName",
														"src": "8888:4:12",
														"type": ""
													}
												],
												"src": "8821:132:12"
											},
											{
												"body": {
													"nativeSrc": "9014:53:12",
													"nodeType": "YulBlock",
													"src": "9014:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9031:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9031:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9054:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9054:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9036:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9036:17:12"
																		},
																		"nativeSrc": "9036:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9036:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9024:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:12"
																},
																"nativeSrc": "9024:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9024:37:12"
															},
															"nativeSrc": "9024:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9024:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "8959:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9002:5:12",
														"nodeType": "YulTypedName",
														"src": "9002:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9009:3:12",
														"nodeType": "YulTypedName",
														"src": "9009:3:12",
														"type": ""
													}
												],
												"src": "8959:108:12"
											},
											{
												"body": {
													"nativeSrc": "9153:99:12",
													"nodeType": "YulBlock",
													"src": "9153:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9197:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9197:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9205:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9205:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "9163:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "9163:33:12"
																},
																"nativeSrc": "9163:46:12",
																"nodeType": "YulFunctionCall",
																"src": "9163:46:12"
															},
															"nativeSrc": "9163:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "9163:46:12"
														},
														{
															"nativeSrc": "9218:28:12",
															"nodeType": "YulAssignment",
															"src": "9218:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9236:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9236:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9241:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9241:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9232:3:12"
																},
																"nativeSrc": "9232:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9232:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "9218:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "9218:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "9073:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "9126:6:12",
														"nodeType": "YulTypedName",
														"src": "9126:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9134:3:12",
														"nodeType": "YulTypedName",
														"src": "9134:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "9142:10:12",
														"nodeType": "YulTypedName",
														"src": "9142:10:12",
														"type": ""
													}
												],
												"src": "9073:179:12"
											},
											{
												"body": {
													"nativeSrc": "9333:38:12",
													"nodeType": "YulBlock",
													"src": "9333:38:12",
													"statements": [
														{
															"nativeSrc": "9343:22:12",
															"nodeType": "YulAssignment",
															"src": "9343:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9355:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9360:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9360:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9351:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9351:3:12"
																},
																"nativeSrc": "9351:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9351:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9343:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9343:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9258:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9320:3:12",
														"nodeType": "YulTypedName",
														"src": "9320:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9328:4:12",
														"nodeType": "YulTypedName",
														"src": "9328:4:12",
														"type": ""
													}
												],
												"src": "9258:113:12"
											},
											{
												"body": {
													"nativeSrc": "9531:608:12",
													"nodeType": "YulBlock",
													"src": "9531:608:12",
													"statements": [
														{
															"nativeSrc": "9541:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9541:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9603:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9603:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9555:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "9555:47:12"
																},
																"nativeSrc": "9555:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9555:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9545:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9545:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9618:93:12",
															"nodeType": "YulAssignment",
															"src": "9618:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9699:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9699:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9704:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9625:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "9625:73:12"
																},
																"nativeSrc": "9625:86:12",
																"nodeType": "YulFunctionCall",
																"src": "9625:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9618:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9618:3:12"
																}
															]
														},
														{
															"nativeSrc": "9720:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9720:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9785:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9785:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9735:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "9735:49:12"
																},
																"nativeSrc": "9735:56:12",
																"nodeType": "YulFunctionCall",
																"src": "9735:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "9724:7:12",
																	"nodeType": "YulTypedName",
																	"src": "9724:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9800:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9800:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9814:7:12",
																"nodeType": "YulIdentifier",
																"src": "9814:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9804:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9804:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9890:224:12",
																"nodeType": "YulBlock",
																"src": "9890:224:12",
																"statements": [
																	{
																		"nativeSrc": "9904:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9904:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9931:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9931:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9925:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9925:5:12"
																			},
																			"nativeSrc": "9925:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9925:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9908:13:12",
																				"nodeType": "YulTypedName",
																				"src": "9908:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9951:70:12",
																		"nodeType": "YulAssignment",
																		"src": "9951:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "10002:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "10002:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "10017:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10017:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "9958:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "9958:43:12"
																			},
																			"nativeSrc": "9958:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9958:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9951:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9951:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10034:70:12",
																		"nodeType": "YulAssignment",
																		"src": "10034:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10097:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10097:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "10044:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "10044:52:12"
																			},
																			"nativeSrc": "10044:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10044:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "10034:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10034:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9852:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9852:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9855:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9855:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9849:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9849:2:12"
																},
																"nativeSrc": "9849:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9849:13:12"
															},
															"nativeSrc": "9830:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9863:18:12",
																"nodeType": "YulBlock",
																"src": "9863:18:12",
																"statements": [
																	{
																		"nativeSrc": "9865:14:12",
																		"nodeType": "YulAssignment",
																		"src": "9865:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9874:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "9874:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9877:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9877:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9870:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9870:3:12"
																			},
																			"nativeSrc": "9870:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9870:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9865:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "9865:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9834:14:12",
																"nodeType": "YulBlock",
																"src": "9834:14:12",
																"statements": [
																	{
																		"nativeSrc": "9836:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9836:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9845:1:12",
																			"nodeType": "YulLiteral",
																			"src": "9845:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9840:1:12",
																				"nodeType": "YulTypedName",
																				"src": "9840:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9830:284:12"
														},
														{
															"nativeSrc": "10123:10:12",
															"nodeType": "YulAssignment",
															"src": "10123:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "10130:3:12",
																"nodeType": "YulIdentifier",
																"src": "10130:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10123:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10123:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9407:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9510:5:12",
														"nodeType": "YulTypedName",
														"src": "9510:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9517:3:12",
														"nodeType": "YulTypedName",
														"src": "9517:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9526:3:12",
														"nodeType": "YulTypedName",
														"src": "9526:3:12",
														"type": ""
													}
												],
												"src": "9407:732:12"
											},
											{
												"body": {
													"nativeSrc": "10293:225:12",
													"nodeType": "YulBlock",
													"src": "10293:225:12",
													"statements": [
														{
															"nativeSrc": "10303:26:12",
															"nodeType": "YulAssignment",
															"src": "10303:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10315:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10315:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10326:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10326:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10311:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:12"
																},
																"nativeSrc": "10311:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10311:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10303:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10303:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10350:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10361:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10361:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10346:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:12"
																		},
																		"nativeSrc": "10346:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10346:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10369:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10369:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10375:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10375:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10365:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:12"
																		},
																		"nativeSrc": "10365:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:12"
																},
																"nativeSrc": "10339:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10339:47:12"
															},
															"nativeSrc": "10339:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10339:47:12"
														},
														{
															"nativeSrc": "10395:116:12",
															"nodeType": "YulAssignment",
															"src": "10395:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10497:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10506:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10506:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10403:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "10403:93:12"
																},
																"nativeSrc": "10403:108:12",
																"nodeType": "YulFunctionCall",
																"src": "10403:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10395:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10395:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10145:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10265:9:12",
														"nodeType": "YulTypedName",
														"src": "10265:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10277:6:12",
														"nodeType": "YulTypedName",
														"src": "10277:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10288:4:12",
														"nodeType": "YulTypedName",
														"src": "10288:4:12",
														"type": ""
													}
												],
												"src": "10145:373:12"
											},
											{
												"body": {
													"nativeSrc": "10552:152:12",
													"nodeType": "YulBlock",
													"src": "10552:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10569:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10569:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10572:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10572:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10562:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10562:6:12"
																},
																"nativeSrc": "10562:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10562:88:12"
															},
															"nativeSrc": "10562:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10562:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10666:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10666:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10669:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10669:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:12"
																},
																"nativeSrc": "10659:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10659:15:12"
															},
															"nativeSrc": "10659:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10659:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10690:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10690:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10693:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10693:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10683:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:12"
																},
																"nativeSrc": "10683:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10683:15:12"
															},
															"nativeSrc": "10683:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10683:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10524:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10524:180:12"
											},
											{
												"body": {
													"nativeSrc": "10761:269:12",
													"nodeType": "YulBlock",
													"src": "10761:269:12",
													"statements": [
														{
															"nativeSrc": "10771:22:12",
															"nodeType": "YulAssignment",
															"src": "10771:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10785:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10785:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10791:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10791:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10781:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10781:3:12"
																},
																"nativeSrc": "10781:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10781:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10771:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10771:6:12"
																}
															]
														},
														{
															"nativeSrc": "10802:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10802:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10832:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10832:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10838:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10838:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10828:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:12"
																},
																"nativeSrc": "10828:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10828:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10806:18:12",
																	"nodeType": "YulTypedName",
																	"src": "10806:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10879:51:12",
																"nodeType": "YulBlock",
																"src": "10879:51:12",
																"statements": [
																	{
																		"nativeSrc": "10893:27:12",
																		"nodeType": "YulAssignment",
																		"src": "10893:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10907:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10907:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10915:4:12",
																					"nodeType": "YulLiteral",
																					"src": "10915:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10903:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10903:3:12"
																			},
																			"nativeSrc": "10903:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10903:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10893:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10893:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10859:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "10859:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10852:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10852:6:12"
																},
																"nativeSrc": "10852:26:12",
																"nodeType": "YulFunctionCall",
																"src": "10852:26:12"
															},
															"nativeSrc": "10849:81:12",
															"nodeType": "YulIf",
															"src": "10849:81:12"
														},
														{
															"body": {
																"nativeSrc": "10982:42:12",
																"nodeType": "YulBlock",
																"src": "10982:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10996:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10996:16:12"
																			},
																			"nativeSrc": "10996:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10996:18:12"
																		},
																		"nativeSrc": "10996:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10996:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10946:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "10946:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10969:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10969:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10977:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10977:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10966:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10966:2:12"
																		},
																		"nativeSrc": "10966:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10943:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10943:2:12"
																},
																"nativeSrc": "10943:38:12",
																"nodeType": "YulFunctionCall",
																"src": "10943:38:12"
															},
															"nativeSrc": "10940:84:12",
															"nodeType": "YulIf",
															"src": "10940:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10710:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10745:4:12",
														"nodeType": "YulTypedName",
														"src": "10745:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10754:6:12",
														"nodeType": "YulTypedName",
														"src": "10754:6:12",
														"type": ""
													}
												],
												"src": "10710:320:12"
											},
											{
												"body": {
													"nativeSrc": "11142:71:12",
													"nodeType": "YulBlock",
													"src": "11142:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11164:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11164:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11172:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11172:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11160:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11160:3:12"
																		},
																		"nativeSrc": "11160:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11160:14:12"
																	},
																	{
																		"hexValue": "4d65737361676520696e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nativeSrc": "11176:29:12",
																		"nodeType": "YulLiteral",
																		"src": "11176:29:12",
																		"type": "",
																		"value": "Message index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11153:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:12"
																},
																"nativeSrc": "11153:53:12",
																"nodeType": "YulFunctionCall",
																"src": "11153:53:12"
															},
															"nativeSrc": "11153:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "11153:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2",
												"nativeSrc": "11036:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11134:6:12",
														"nodeType": "YulTypedName",
														"src": "11134:6:12",
														"type": ""
													}
												],
												"src": "11036:177:12"
											},
											{
												"body": {
													"nativeSrc": "11365:220:12",
													"nodeType": "YulBlock",
													"src": "11365:220:12",
													"statements": [
														{
															"nativeSrc": "11375:74:12",
															"nodeType": "YulAssignment",
															"src": "11375:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11441:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11441:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11446:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11446:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11382:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11382:58:12"
																},
																"nativeSrc": "11382:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11382:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11375:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11375:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11547:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11547:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2",
																	"nativeSrc": "11458:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11458:88:12"
																},
																"nativeSrc": "11458:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11458:93:12"
															},
															"nativeSrc": "11458:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11458:93:12"
														},
														{
															"nativeSrc": "11560:19:12",
															"nodeType": "YulAssignment",
															"src": "11560:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11571:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11571:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11576:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11567:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11567:3:12"
																},
																"nativeSrc": "11567:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11567:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11560:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11219:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11353:3:12",
														"nodeType": "YulTypedName",
														"src": "11353:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11361:3:12",
														"nodeType": "YulTypedName",
														"src": "11361:3:12",
														"type": ""
													}
												],
												"src": "11219:366:12"
											},
											{
												"body": {
													"nativeSrc": "11762:248:12",
													"nodeType": "YulBlock",
													"src": "11762:248:12",
													"statements": [
														{
															"nativeSrc": "11772:26:12",
															"nodeType": "YulAssignment",
															"src": "11772:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11784:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11784:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11795:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11795:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11780:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11780:3:12"
																},
																"nativeSrc": "11780:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11780:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11772:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11772:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11819:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11819:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11830:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11830:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11815:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11815:3:12"
																		},
																		"nativeSrc": "11815:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11815:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11838:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11838:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11844:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11844:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11834:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11834:3:12"
																		},
																		"nativeSrc": "11834:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11834:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11808:6:12"
																},
																"nativeSrc": "11808:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11808:47:12"
															},
															"nativeSrc": "11808:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11808:47:12"
														},
														{
															"nativeSrc": "11864:139:12",
															"nodeType": "YulAssignment",
															"src": "11864:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11998:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11998:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11872:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11872:124:12"
																},
																"nativeSrc": "11872:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11872:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11864:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11864:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11591:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11742:9:12",
														"nodeType": "YulTypedName",
														"src": "11742:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11757:4:12",
														"nodeType": "YulTypedName",
														"src": "11757:4:12",
														"type": ""
													}
												],
												"src": "11591:419:12"
											},
											{
												"body": {
													"nativeSrc": "12044:152:12",
													"nodeType": "YulBlock",
													"src": "12044:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12061:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12061:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12064:77:12",
																		"nodeType": "YulLiteral",
																		"src": "12064:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:12"
																},
																"nativeSrc": "12054:88:12",
																"nodeType": "YulFunctionCall",
																"src": "12054:88:12"
															},
															"nativeSrc": "12054:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "12054:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12158:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12158:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12161:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12161:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12151:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:12"
																},
																"nativeSrc": "12151:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12151:15:12"
															},
															"nativeSrc": "12151:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12151:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12182:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12182:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12185:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12185:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12175:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12175:6:12"
																},
																"nativeSrc": "12175:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12175:15:12"
															},
															"nativeSrc": "12175:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12175:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12016:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "12016:180:12"
											},
											{
												"body": {
													"nativeSrc": "12308:117:12",
													"nodeType": "YulBlock",
													"src": "12308:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12330:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12330:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12338:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12338:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12326:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12326:3:12"
																		},
																		"nativeSrc": "12326:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12326:14:12"
																	},
																	{
																		"hexValue": "4d65737361676520696e646578206f7574206f6620626f756e647320666f7220",
																		"kind": "string",
																		"nativeSrc": "12342:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12342:34:12",
																		"type": "",
																		"value": "Message index out of bounds for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12319:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12319:6:12"
																},
																"nativeSrc": "12319:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12319:58:12"
															},
															"nativeSrc": "12319:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12319:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12398:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12398:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12406:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12406:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12394:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12394:3:12"
																		},
																		"nativeSrc": "12394:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12394:15:12"
																	},
																	{
																		"hexValue": "75736572",
																		"kind": "string",
																		"nativeSrc": "12411:6:12",
																		"nodeType": "YulLiteral",
																		"src": "12411:6:12",
																		"type": "",
																		"value": "user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12387:6:12"
																},
																"nativeSrc": "12387:31:12",
																"nodeType": "YulFunctionCall",
																"src": "12387:31:12"
															},
															"nativeSrc": "12387:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "12387:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b",
												"nativeSrc": "12202:223:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12300:6:12",
														"nodeType": "YulTypedName",
														"src": "12300:6:12",
														"type": ""
													}
												],
												"src": "12202:223:12"
											},
											{
												"body": {
													"nativeSrc": "12577:220:12",
													"nodeType": "YulBlock",
													"src": "12577:220:12",
													"statements": [
														{
															"nativeSrc": "12587:74:12",
															"nodeType": "YulAssignment",
															"src": "12587:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12653:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12653:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12658:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12594:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12594:58:12"
																},
																"nativeSrc": "12594:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12594:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12587:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12587:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12759:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b",
																	"nativeSrc": "12670:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12670:88:12"
																},
																"nativeSrc": "12670:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12670:93:12"
															},
															"nativeSrc": "12670:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12670:93:12"
														},
														{
															"nativeSrc": "12772:19:12",
															"nodeType": "YulAssignment",
															"src": "12772:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12779:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:12"
																},
																"nativeSrc": "12779:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12779:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12431:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12565:3:12",
														"nodeType": "YulTypedName",
														"src": "12565:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12573:3:12",
														"nodeType": "YulTypedName",
														"src": "12573:3:12",
														"type": ""
													}
												],
												"src": "12431:366:12"
											},
											{
												"body": {
													"nativeSrc": "12974:248:12",
													"nodeType": "YulBlock",
													"src": "12974:248:12",
													"statements": [
														{
															"nativeSrc": "12984:26:12",
															"nodeType": "YulAssignment",
															"src": "12984:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12996:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12996:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13007:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13007:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12992:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12992:3:12"
																},
																"nativeSrc": "12992:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12992:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12984:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12984:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13031:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13031:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13042:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13042:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13027:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13027:3:12"
																		},
																		"nativeSrc": "13027:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13027:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13050:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13050:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13056:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13056:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13046:3:12"
																		},
																		"nativeSrc": "13046:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13046:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13020:6:12"
																},
																"nativeSrc": "13020:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13020:47:12"
															},
															"nativeSrc": "13020:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13020:47:12"
														},
														{
															"nativeSrc": "13076:139:12",
															"nodeType": "YulAssignment",
															"src": "13076:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13210:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13210:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13084:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13084:124:12"
																},
																"nativeSrc": "13084:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13084:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13076:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13076:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12803:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12954:9:12",
														"nodeType": "YulTypedName",
														"src": "12954:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12969:4:12",
														"nodeType": "YulTypedName",
														"src": "12969:4:12",
														"type": ""
													}
												],
												"src": "12803:419:12"
											},
											{
												"body": {
													"nativeSrc": "13334:66:12",
													"nodeType": "YulBlock",
													"src": "13334:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13356:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13356:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13364:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13364:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:12"
																		},
																		"nativeSrc": "13352:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13352:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964206665652070657263656e74616765",
																		"kind": "string",
																		"nativeSrc": "13368:24:12",
																		"nodeType": "YulLiteral",
																		"src": "13368:24:12",
																		"type": "",
																		"value": "Invalid fee percentage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:12"
																},
																"nativeSrc": "13345:48:12",
																"nodeType": "YulFunctionCall",
																"src": "13345:48:12"
															},
															"nativeSrc": "13345:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "13345:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157",
												"nativeSrc": "13228:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13326:6:12",
														"nodeType": "YulTypedName",
														"src": "13326:6:12",
														"type": ""
													}
												],
												"src": "13228:172:12"
											},
											{
												"body": {
													"nativeSrc": "13552:220:12",
													"nodeType": "YulBlock",
													"src": "13552:220:12",
													"statements": [
														{
															"nativeSrc": "13562:74:12",
															"nodeType": "YulAssignment",
															"src": "13562:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13628:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13628:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13633:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13633:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13569:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13569:58:12"
																},
																"nativeSrc": "13569:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13569:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13562:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13562:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13734:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13734:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157",
																	"nativeSrc": "13645:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13645:88:12"
																},
																"nativeSrc": "13645:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13645:93:12"
															},
															"nativeSrc": "13645:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13645:93:12"
														},
														{
															"nativeSrc": "13747:19:12",
															"nodeType": "YulAssignment",
															"src": "13747:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13758:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13758:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13763:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13754:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13754:3:12"
																},
																"nativeSrc": "13754:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13754:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13747:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13747:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13406:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13540:3:12",
														"nodeType": "YulTypedName",
														"src": "13540:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13548:3:12",
														"nodeType": "YulTypedName",
														"src": "13548:3:12",
														"type": ""
													}
												],
												"src": "13406:366:12"
											},
											{
												"body": {
													"nativeSrc": "13949:248:12",
													"nodeType": "YulBlock",
													"src": "13949:248:12",
													"statements": [
														{
															"nativeSrc": "13959:26:12",
															"nodeType": "YulAssignment",
															"src": "13959:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13971:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13971:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13982:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13982:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13967:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13967:3:12"
																},
																"nativeSrc": "13967:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13967:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13959:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13959:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14006:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14006:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14017:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14017:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14002:3:12"
																		},
																		"nativeSrc": "14002:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14002:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14025:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14025:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14031:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14031:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14021:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14021:3:12"
																		},
																		"nativeSrc": "14021:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14021:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13995:6:12"
																},
																"nativeSrc": "13995:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13995:47:12"
															},
															"nativeSrc": "13995:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13995:47:12"
														},
														{
															"nativeSrc": "14051:139:12",
															"nodeType": "YulAssignment",
															"src": "14051:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14185:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14185:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14059:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14059:124:12"
																},
																"nativeSrc": "14059:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14059:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14051:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13778:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13929:9:12",
														"nodeType": "YulTypedName",
														"src": "13929:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13944:4:12",
														"nodeType": "YulTypedName",
														"src": "13944:4:12",
														"type": ""
													}
												],
												"src": "13778:419:12"
											},
											{
												"body": {
													"nativeSrc": "14231:152:12",
													"nodeType": "YulBlock",
													"src": "14231:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14248:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14248:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14251:77:12",
																		"nodeType": "YulLiteral",
																		"src": "14251:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14241:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14241:6:12"
																},
																"nativeSrc": "14241:88:12",
																"nodeType": "YulFunctionCall",
																"src": "14241:88:12"
															},
															"nativeSrc": "14241:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "14241:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14345:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14345:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14348:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14348:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14338:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14338:6:12"
																},
																"nativeSrc": "14338:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14338:15:12"
															},
															"nativeSrc": "14338:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14338:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14369:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14369:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14372:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14372:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14362:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14362:6:12"
																},
																"nativeSrc": "14362:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14362:15:12"
															},
															"nativeSrc": "14362:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14362:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14203:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14203:180:12"
											},
											{
												"body": {
													"nativeSrc": "14437:362:12",
													"nodeType": "YulBlock",
													"src": "14437:362:12",
													"statements": [
														{
															"nativeSrc": "14447:25:12",
															"nodeType": "YulAssignment",
															"src": "14447:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14470:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14470:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14452:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14452:17:12"
																},
																"nativeSrc": "14452:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14452:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14447:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14447:1:12"
																}
															]
														},
														{
															"nativeSrc": "14481:25:12",
															"nodeType": "YulAssignment",
															"src": "14481:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14504:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14504:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14486:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14486:17:12"
																},
																"nativeSrc": "14486:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14486:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14481:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14481:1:12"
																}
															]
														},
														{
															"nativeSrc": "14515:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14515:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14538:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14538:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14541:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14541:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14534:3:12"
																},
																"nativeSrc": "14534:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14534:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14519:11:12",
																	"nodeType": "YulTypedName",
																	"src": "14519:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14552:41:12",
															"nodeType": "YulAssignment",
															"src": "14552:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14581:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "14581:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14563:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14563:17:12"
																},
																"nativeSrc": "14563:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14563:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14552:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "14552:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14770:22:12",
																"nodeType": "YulBlock",
																"src": "14770:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14772:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14772:16:12"
																			},
																			"nativeSrc": "14772:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14772:18:12"
																		},
																		"nativeSrc": "14772:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14772:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14703:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "14703:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14696:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14696:6:12"
																				},
																				"nativeSrc": "14696:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14696:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14726:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "14726:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14733:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "14733:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14742:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "14742:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14729:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "14729:3:12"
																						},
																						"nativeSrc": "14729:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "14729:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14723:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "14723:2:12"
																				},
																				"nativeSrc": "14723:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14723:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14676:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14676:2:12"
																		},
																		"nativeSrc": "14676:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14676:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14656:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:12"
																},
																"nativeSrc": "14656:113:12",
																"nodeType": "YulFunctionCall",
																"src": "14656:113:12"
															},
															"nativeSrc": "14653:139:12",
															"nodeType": "YulIf",
															"src": "14653:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14389:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14420:1:12",
														"nodeType": "YulTypedName",
														"src": "14420:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14423:1:12",
														"nodeType": "YulTypedName",
														"src": "14423:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14429:7:12",
														"nodeType": "YulTypedName",
														"src": "14429:7:12",
														"type": ""
													}
												],
												"src": "14389:410:12"
											},
											{
												"body": {
													"nativeSrc": "14833:152:12",
													"nodeType": "YulBlock",
													"src": "14833:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14850:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14850:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14853:77:12",
																		"nodeType": "YulLiteral",
																		"src": "14853:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14843:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14843:6:12"
																},
																"nativeSrc": "14843:88:12",
																"nodeType": "YulFunctionCall",
																"src": "14843:88:12"
															},
															"nativeSrc": "14843:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "14843:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14947:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14947:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14950:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14950:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14940:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14940:6:12"
																},
																"nativeSrc": "14940:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14940:15:12"
															},
															"nativeSrc": "14940:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14940:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14971:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14971:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14974:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14974:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14964:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14964:6:12"
																},
																"nativeSrc": "14964:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14964:15:12"
															},
															"nativeSrc": "14964:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14964:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14805:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14805:180:12"
											},
											{
												"body": {
													"nativeSrc": "15033:143:12",
													"nodeType": "YulBlock",
													"src": "15033:143:12",
													"statements": [
														{
															"nativeSrc": "15043:25:12",
															"nodeType": "YulAssignment",
															"src": "15043:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15066:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15066:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15048:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15048:17:12"
																},
																"nativeSrc": "15048:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15048:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15043:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15043:1:12"
																}
															]
														},
														{
															"nativeSrc": "15077:25:12",
															"nodeType": "YulAssignment",
															"src": "15077:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15100:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15100:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15082:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15082:17:12"
																},
																"nativeSrc": "15082:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15082:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15077:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15077:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15124:22:12",
																"nodeType": "YulBlock",
																"src": "15124:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15126:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15126:16:12"
																			},
																			"nativeSrc": "15126:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15126:18:12"
																		},
																		"nativeSrc": "15126:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15126:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15121:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15121:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15114:6:12"
																},
																"nativeSrc": "15114:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15114:9:12"
															},
															"nativeSrc": "15111:35:12",
															"nodeType": "YulIf",
															"src": "15111:35:12"
														},
														{
															"nativeSrc": "15156:14:12",
															"nodeType": "YulAssignment",
															"src": "15156:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15165:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15165:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15168:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15168:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15161:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15161:3:12"
																},
																"nativeSrc": "15161:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15161:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15156:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15156:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14991:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15022:1:12",
														"nodeType": "YulTypedName",
														"src": "15022:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15025:1:12",
														"nodeType": "YulTypedName",
														"src": "15025:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15031:1:12",
														"nodeType": "YulTypedName",
														"src": "15031:1:12",
														"type": ""
													}
												],
												"src": "14991:185:12"
											},
											{
												"body": {
													"nativeSrc": "15227:149:12",
													"nodeType": "YulBlock",
													"src": "15227:149:12",
													"statements": [
														{
															"nativeSrc": "15237:25:12",
															"nodeType": "YulAssignment",
															"src": "15237:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15260:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15260:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15242:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15242:17:12"
																},
																"nativeSrc": "15242:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15242:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15237:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15237:1:12"
																}
															]
														},
														{
															"nativeSrc": "15271:25:12",
															"nodeType": "YulAssignment",
															"src": "15271:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15294:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15294:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15276:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15276:17:12"
																},
																"nativeSrc": "15276:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15276:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15271:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15271:1:12"
																}
															]
														},
														{
															"nativeSrc": "15305:17:12",
															"nodeType": "YulAssignment",
															"src": "15305:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15317:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15317:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15320:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15320:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15313:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15313:3:12"
																},
																"nativeSrc": "15313:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15313:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15305:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15305:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15347:22:12",
																"nodeType": "YulBlock",
																"src": "15347:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15349:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15349:16:12"
																			},
																			"nativeSrc": "15349:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15349:18:12"
																		},
																		"nativeSrc": "15349:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15349:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15338:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15338:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15344:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15344:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15335:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15335:2:12"
																},
																"nativeSrc": "15335:11:12",
																"nodeType": "YulFunctionCall",
																"src": "15335:11:12"
															},
															"nativeSrc": "15332:37:12",
															"nodeType": "YulIf",
															"src": "15332:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15182:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15213:1:12",
														"nodeType": "YulTypedName",
														"src": "15213:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15216:1:12",
														"nodeType": "YulTypedName",
														"src": "15216:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15222:4:12",
														"nodeType": "YulTypedName",
														"src": "15222:4:12",
														"type": ""
													}
												],
												"src": "15182:194:12"
											},
											{
												"body": {
													"nativeSrc": "15436:87:12",
													"nodeType": "YulBlock",
													"src": "15436:87:12",
													"statements": [
														{
															"nativeSrc": "15446:11:12",
															"nodeType": "YulAssignment",
															"src": "15446:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "15454:3:12",
																"nodeType": "YulIdentifier",
																"src": "15454:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15446:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15446:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15474:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15474:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15477:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15477:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15467:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15467:6:12"
																},
																"nativeSrc": "15467:14:12",
																"nodeType": "YulFunctionCall",
																"src": "15467:14:12"
															},
															"nativeSrc": "15467:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "15467:14:12"
														},
														{
															"nativeSrc": "15490:26:12",
															"nodeType": "YulAssignment",
															"src": "15490:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15508:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15511:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15511:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15498:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "15498:9:12"
																},
																"nativeSrc": "15498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15498:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15490:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15382:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15423:3:12",
														"nodeType": "YulTypedName",
														"src": "15423:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15431:4:12",
														"nodeType": "YulTypedName",
														"src": "15431:4:12",
														"type": ""
													}
												],
												"src": "15382:141:12"
											},
											{
												"body": {
													"nativeSrc": "15573:49:12",
													"nodeType": "YulBlock",
													"src": "15573:49:12",
													"statements": [
														{
															"nativeSrc": "15583:33:12",
															"nodeType": "YulAssignment",
															"src": "15583:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15601:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15601:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15608:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15608:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15597:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:12"
																		},
																		"nativeSrc": "15597:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15597:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15613:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15593:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15593:3:12"
																},
																"nativeSrc": "15593:23:12",
																"nodeType": "YulFunctionCall",
																"src": "15593:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15583:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15583:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15529:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15556:5:12",
														"nodeType": "YulTypedName",
														"src": "15556:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15566:6:12",
														"nodeType": "YulTypedName",
														"src": "15566:6:12",
														"type": ""
													}
												],
												"src": "15529:93:12"
											},
											{
												"body": {
													"nativeSrc": "15681:54:12",
													"nodeType": "YulBlock",
													"src": "15681:54:12",
													"statements": [
														{
															"nativeSrc": "15691:37:12",
															"nodeType": "YulAssignment",
															"src": "15691:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15716:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15716:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15722:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15722:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15712:3:12"
																},
																"nativeSrc": "15712:16:12",
																"nodeType": "YulFunctionCall",
																"src": "15712:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15691:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "15691:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15628:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15656:4:12",
														"nodeType": "YulTypedName",
														"src": "15656:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15662:5:12",
														"nodeType": "YulTypedName",
														"src": "15662:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15672:8:12",
														"nodeType": "YulTypedName",
														"src": "15672:8:12",
														"type": ""
													}
												],
												"src": "15628:107:12"
											},
											{
												"body": {
													"nativeSrc": "15817:317:12",
													"nodeType": "YulBlock",
													"src": "15817:317:12",
													"statements": [
														{
															"nativeSrc": "15827:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15827:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15848:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "15848:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15860:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15860:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15844:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15844:3:12"
																},
																"nativeSrc": "15844:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15844:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15831:9:12",
																	"nodeType": "YulTypedName",
																	"src": "15831:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15871:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15871:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15902:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15902:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15913:66:12",
																		"nodeType": "YulLiteral",
																		"src": "15913:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15883:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "15883:18:12"
																},
																"nativeSrc": "15883:97:12",
																"nodeType": "YulFunctionCall",
																"src": "15883:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15875:4:12",
																	"nodeType": "YulTypedName",
																	"src": "15875:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15989:51:12",
															"nodeType": "YulAssignment",
															"src": "15989:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16020:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16020:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16031:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "16031:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16001:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "16001:18:12"
																},
																"nativeSrc": "16001:39:12",
																"nodeType": "YulFunctionCall",
																"src": "16001:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15989:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "15989:8:12"
																}
															]
														},
														{
															"nativeSrc": "16049:30:12",
															"nodeType": "YulAssignment",
															"src": "16049:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16062:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16062:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16073:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16073:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16069:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16069:3:12"
																		},
																		"nativeSrc": "16069:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16069:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16058:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16058:3:12"
																},
																"nativeSrc": "16058:21:12",
																"nodeType": "YulFunctionCall",
																"src": "16058:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16049:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16049:5:12"
																}
															]
														},
														{
															"nativeSrc": "16088:40:12",
															"nodeType": "YulAssignment",
															"src": "16088:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16101:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16101:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16112:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "16112:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16122:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16122:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16108:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16108:3:12"
																		},
																		"nativeSrc": "16108:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16108:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16098:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16098:2:12"
																},
																"nativeSrc": "16098:30:12",
																"nodeType": "YulFunctionCall",
																"src": "16098:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16088:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16088:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15741:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15778:5:12",
														"nodeType": "YulTypedName",
														"src": "15778:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15785:10:12",
														"nodeType": "YulTypedName",
														"src": "15785:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15797:8:12",
														"nodeType": "YulTypedName",
														"src": "15797:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15810:6:12",
														"nodeType": "YulTypedName",
														"src": "15810:6:12",
														"type": ""
													}
												],
												"src": "15741:393:12"
											},
											{
												"body": {
													"nativeSrc": "16200:82:12",
													"nodeType": "YulBlock",
													"src": "16200:82:12",
													"statements": [
														{
															"nativeSrc": "16210:66:12",
															"nodeType": "YulAssignment",
															"src": "16210:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16268:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16268:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16250:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "16250:17:12"
																				},
																				"nativeSrc": "16250:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16250:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16241:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "16241:8:12"
																		},
																		"nativeSrc": "16241:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16241:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16223:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16223:17:12"
																},
																"nativeSrc": "16223:53:12",
																"nodeType": "YulFunctionCall",
																"src": "16223:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16210:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "16210:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16140:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16180:5:12",
														"nodeType": "YulTypedName",
														"src": "16180:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16190:9:12",
														"nodeType": "YulTypedName",
														"src": "16190:9:12",
														"type": ""
													}
												],
												"src": "16140:142:12"
											},
											{
												"body": {
													"nativeSrc": "16335:28:12",
													"nodeType": "YulBlock",
													"src": "16335:28:12",
													"statements": [
														{
															"nativeSrc": "16345:12:12",
															"nodeType": "YulAssignment",
															"src": "16345:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "16352:5:12",
																"nodeType": "YulIdentifier",
																"src": "16352:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16345:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16288:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16321:5:12",
														"nodeType": "YulTypedName",
														"src": "16321:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16331:3:12",
														"nodeType": "YulTypedName",
														"src": "16331:3:12",
														"type": ""
													}
												],
												"src": "16288:75:12"
											},
											{
												"body": {
													"nativeSrc": "16445:193:12",
													"nodeType": "YulBlock",
													"src": "16445:193:12",
													"statements": [
														{
															"nativeSrc": "16455:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16455:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16510:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "16510:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16479:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "16479:30:12"
																},
																"nativeSrc": "16479:39:12",
																"nodeType": "YulFunctionCall",
																"src": "16479:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16459:16:12",
																	"nodeType": "YulTypedName",
																	"src": "16459:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16534:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16534:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16574:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "16574:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16568:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "16568:5:12"
																				},
																				"nativeSrc": "16568:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16568:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16581:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16581:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16613:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "16613:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16589:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "16589:23:12"
																				},
																				"nativeSrc": "16589:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16589:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16540:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "16540:27:12"
																		},
																		"nativeSrc": "16540:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16540:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16527:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16527:6:12"
																},
																"nativeSrc": "16527:105:12",
																"nodeType": "YulFunctionCall",
																"src": "16527:105:12"
															},
															"nativeSrc": "16527:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "16527:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16369:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16422:4:12",
														"nodeType": "YulTypedName",
														"src": "16422:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16428:6:12",
														"nodeType": "YulTypedName",
														"src": "16428:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16436:7:12",
														"nodeType": "YulTypedName",
														"src": "16436:7:12",
														"type": ""
													}
												],
												"src": "16369:269:12"
											},
											{
												"body": {
													"nativeSrc": "16693:24:12",
													"nodeType": "YulBlock",
													"src": "16693:24:12",
													"statements": [
														{
															"nativeSrc": "16703:8:12",
															"nodeType": "YulAssignment",
															"src": "16703:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "16710:1:12",
																"nodeType": "YulLiteral",
																"src": "16710:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16703:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16644:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16689:3:12",
														"nodeType": "YulTypedName",
														"src": "16689:3:12",
														"type": ""
													}
												],
												"src": "16644:73:12"
											},
											{
												"body": {
													"nativeSrc": "16776:136:12",
													"nodeType": "YulBlock",
													"src": "16776:136:12",
													"statements": [
														{
															"nativeSrc": "16786:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16786:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16800:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "16800:30:12"
																},
																"nativeSrc": "16800:32:12",
																"nodeType": "YulFunctionCall",
																"src": "16800:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16790:6:12",
																	"nodeType": "YulTypedName",
																	"src": "16790:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16885:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16885:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16891:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16891:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16899:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16899:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16841:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16841:43:12"
																},
																"nativeSrc": "16841:65:12",
																"nodeType": "YulFunctionCall",
																"src": "16841:65:12"
															},
															"nativeSrc": "16841:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "16841:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16723:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16762:4:12",
														"nodeType": "YulTypedName",
														"src": "16762:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16768:6:12",
														"nodeType": "YulTypedName",
														"src": "16768:6:12",
														"type": ""
													}
												],
												"src": "16723:189:12"
											},
											{
												"body": {
													"nativeSrc": "16968:136:12",
													"nodeType": "YulBlock",
													"src": "16968:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17035:63:12",
																"nodeType": "YulBlock",
																"src": "17035:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17079:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17079:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17086:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17086:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17049:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "17049:29:12"
																			},
																			"nativeSrc": "17049:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17049:39:12"
																		},
																		"nativeSrc": "17049:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17049:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16988:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16988:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16995:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16985:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16985:2:12"
																},
																"nativeSrc": "16985:14:12",
																"nodeType": "YulFunctionCall",
																"src": "16985:14:12"
															},
															"nativeSrc": "16978:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17000:26:12",
																"nodeType": "YulBlock",
																"src": "17000:26:12",
																"statements": [
																	{
																		"nativeSrc": "17002:22:12",
																		"nodeType": "YulAssignment",
																		"src": "17002:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17015:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17015:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17022:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17022:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17011:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17011:3:12"
																			},
																			"nativeSrc": "17011:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17011:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17002:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "17002:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16982:2:12",
																"nodeType": "YulBlock",
																"src": "16982:2:12",
																"statements": []
															},
															"src": "16978:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16918:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16956:5:12",
														"nodeType": "YulTypedName",
														"src": "16956:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16963:3:12",
														"nodeType": "YulTypedName",
														"src": "16963:3:12",
														"type": ""
													}
												],
												"src": "16918:186:12"
											},
											{
												"body": {
													"nativeSrc": "17189:464:12",
													"nodeType": "YulBlock",
													"src": "17189:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17215:431:12",
																"nodeType": "YulBlock",
																"src": "17215:431:12",
																"statements": [
																	{
																		"nativeSrc": "17229:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17229:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17277:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17277:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17245:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "17245:31:12"
																			},
																			"nativeSrc": "17245:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17245:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17233:8:12",
																				"nodeType": "YulTypedName",
																				"src": "17233:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17296:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17296:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17319:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "17319:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17347:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "17347:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17329:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "17329:17:12"
																					},
																					"nativeSrc": "17329:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17329:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17315:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17315:3:12"
																			},
																			"nativeSrc": "17315:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17315:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17300:11:12",
																				"nodeType": "YulTypedName",
																				"src": "17300:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17516:27:12",
																			"nodeType": "YulBlock",
																			"src": "17516:27:12",
																			"statements": [
																				{
																					"nativeSrc": "17518:23:12",
																					"nodeType": "YulAssignment",
																					"src": "17518:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17533:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "17533:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17518:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "17518:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17500:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "17500:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17512:2:12",
																					"nodeType": "YulLiteral",
																					"src": "17512:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17497:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "17497:2:12"
																			},
																			"nativeSrc": "17497:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17497:18:12"
																		},
																		"nativeSrc": "17494:49:12",
																		"nodeType": "YulIf",
																		"src": "17494:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17585:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "17585:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17602:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "17602:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17630:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "17630:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17612:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "17612:17:12"
																							},
																							"nativeSrc": "17612:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "17612:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17598:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "17598:3:12"
																					},
																					"nativeSrc": "17598:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17598:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17556:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "17556:28:12"
																			},
																			"nativeSrc": "17556:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17556:80:12"
																		},
																		"nativeSrc": "17556:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17556:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17206:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17206:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17211:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17211:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17203:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17203:2:12"
																},
																"nativeSrc": "17203:11:12",
																"nodeType": "YulFunctionCall",
																"src": "17203:11:12"
															},
															"nativeSrc": "17200:446:12",
															"nodeType": "YulIf",
															"src": "17200:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17110:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17165:5:12",
														"nodeType": "YulTypedName",
														"src": "17165:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17172:3:12",
														"nodeType": "YulTypedName",
														"src": "17172:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17177:10:12",
														"nodeType": "YulTypedName",
														"src": "17177:10:12",
														"type": ""
													}
												],
												"src": "17110:543:12"
											},
											{
												"body": {
													"nativeSrc": "17722:54:12",
													"nodeType": "YulBlock",
													"src": "17722:54:12",
													"statements": [
														{
															"nativeSrc": "17732:37:12",
															"nodeType": "YulAssignment",
															"src": "17732:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17757:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17757:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17763:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17763:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17753:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17753:3:12"
																},
																"nativeSrc": "17753:16:12",
																"nodeType": "YulFunctionCall",
																"src": "17753:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17732:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "17732:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17659:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17697:4:12",
														"nodeType": "YulTypedName",
														"src": "17697:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17703:5:12",
														"nodeType": "YulTypedName",
														"src": "17703:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17713:8:12",
														"nodeType": "YulTypedName",
														"src": "17713:8:12",
														"type": ""
													}
												],
												"src": "17659:117:12"
											},
											{
												"body": {
													"nativeSrc": "17833:118:12",
													"nodeType": "YulBlock",
													"src": "17833:118:12",
													"statements": [
														{
															"nativeSrc": "17843:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17843:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17892:1:12",
																						"nodeType": "YulLiteral",
																						"src": "17892:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17895:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "17895:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17888:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17888:3:12"
																				},
																				"nativeSrc": "17888:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17888:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17907:1:12",
																						"nodeType": "YulLiteral",
																						"src": "17907:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17903:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17903:3:12"
																				},
																				"nativeSrc": "17903:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17903:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17859:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "17859:28:12"
																		},
																		"nativeSrc": "17859:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17859:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17855:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17855:3:12"
																},
																"nativeSrc": "17855:56:12",
																"nodeType": "YulFunctionCall",
																"src": "17855:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17847:4:12",
																	"nodeType": "YulTypedName",
																	"src": "17847:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17920:25:12",
															"nodeType": "YulAssignment",
															"src": "17920:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17934:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17934:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17940:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17940:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17930:3:12"
																},
																"nativeSrc": "17930:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17930:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17920:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17920:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17782:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17810:4:12",
														"nodeType": "YulTypedName",
														"src": "17810:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17816:5:12",
														"nodeType": "YulTypedName",
														"src": "17816:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17826:6:12",
														"nodeType": "YulTypedName",
														"src": "17826:6:12",
														"type": ""
													}
												],
												"src": "17782:169:12"
											},
											{
												"body": {
													"nativeSrc": "18037:214:12",
													"nodeType": "YulBlock",
													"src": "18037:214:12",
													"statements": [
														{
															"nativeSrc": "18170:37:12",
															"nodeType": "YulAssignment",
															"src": "18170:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18197:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18197:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18203:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18203:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18178:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "18178:18:12"
																},
																"nativeSrc": "18178:29:12",
																"nodeType": "YulFunctionCall",
																"src": "18178:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18170:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18170:4:12"
																}
															]
														},
														{
															"nativeSrc": "18216:29:12",
															"nodeType": "YulAssignment",
															"src": "18216:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18227:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18227:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18237:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18237:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18240:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18240:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18233:3:12"
																		},
																		"nativeSrc": "18233:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18233:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18224:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18224:2:12"
																},
																"nativeSrc": "18224:21:12",
																"nodeType": "YulFunctionCall",
																"src": "18224:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18216:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18216:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17956:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18018:4:12",
														"nodeType": "YulTypedName",
														"src": "18018:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18024:3:12",
														"nodeType": "YulTypedName",
														"src": "18024:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18032:4:12",
														"nodeType": "YulTypedName",
														"src": "18032:4:12",
														"type": ""
													}
												],
												"src": "17956:295:12"
											},
											{
												"body": {
													"nativeSrc": "18348:1303:12",
													"nodeType": "YulBlock",
													"src": "18348:1303:12",
													"statements": [
														{
															"nativeSrc": "18359:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18359:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18406:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18406:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18373:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "18373:32:12"
																},
																"nativeSrc": "18373:37:12",
																"nodeType": "YulFunctionCall",
																"src": "18373:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18363:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18363:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18495:22:12",
																"nodeType": "YulBlock",
																"src": "18495:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18497:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18497:16:12"
																			},
																			"nativeSrc": "18497:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18497:18:12"
																		},
																		"nativeSrc": "18497:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18497:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18467:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18475:18:12",
																		"nodeType": "YulLiteral",
																		"src": "18475:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18464:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18464:2:12"
																},
																"nativeSrc": "18464:30:12",
																"nodeType": "YulFunctionCall",
																"src": "18464:30:12"
															},
															"nativeSrc": "18461:56:12",
															"nodeType": "YulIf",
															"src": "18461:56:12"
														},
														{
															"nativeSrc": "18527:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18527:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18573:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18573:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18567:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "18567:5:12"
																		},
																		"nativeSrc": "18567:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18567:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18541:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "18541:25:12"
																},
																"nativeSrc": "18541:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18541:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18531:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18531:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18672:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18672:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18678:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18686:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18686:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18626:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "18626:45:12"
																},
																"nativeSrc": "18626:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18626:67:12"
															},
															"nativeSrc": "18626:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "18626:67:12"
														},
														{
															"nativeSrc": "18703:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18703:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "18720:1:12",
																"nodeType": "YulLiteral",
																"src": "18720:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18707:9:12",
																	"nodeType": "YulTypedName",
																	"src": "18707:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18731:17:12",
															"nodeType": "YulAssignment",
															"src": "18731:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "18744:4:12",
																"nodeType": "YulLiteral",
																"src": "18744:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18731:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "18731:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18795:611:12",
																		"nodeType": "YulBlock",
																		"src": "18795:611:12",
																		"statements": [
																			{
																				"nativeSrc": "18809:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18809:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18828:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "18828:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18840:4:12",
																									"nodeType": "YulLiteral",
																									"src": "18840:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18836:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "18836:3:12"
																							},
																							"nativeSrc": "18836:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "18836:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18824:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "18824:3:12"
																					},
																					"nativeSrc": "18824:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18824:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18813:7:12",
																						"nodeType": "YulTypedName",
																						"src": "18813:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18860:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18860:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18906:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "18906:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18874:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "18874:31:12"
																					},
																					"nativeSrc": "18874:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18874:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18864:6:12",
																						"nodeType": "YulTypedName",
																						"src": "18864:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18924:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18924:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18933:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18933:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18928:1:12",
																						"nodeType": "YulTypedName",
																						"src": "18928:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18992:163:12",
																					"nodeType": "YulBlock",
																					"src": "18992:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19017:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "19017:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19035:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "19035:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19040:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "19040:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19031:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "19031:3:12"
																												},
																												"nativeSrc": "19031:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "19031:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19025:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "19025:5:12"
																										},
																										"nativeSrc": "19025:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19025:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19010:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19010:6:12"
																								},
																								"nativeSrc": "19010:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19010:42:12"
																							},
																							"nativeSrc": "19010:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "19010:42:12"
																						},
																						{
																							"nativeSrc": "19069:24:12",
																							"nodeType": "YulAssignment",
																							"src": "19069:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19083:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "19083:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19091:1:12",
																										"nodeType": "YulLiteral",
																										"src": "19091:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19079:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "19079:3:12"
																								},
																								"nativeSrc": "19079:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19079:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19069:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19069:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19110:31:12",
																							"nodeType": "YulAssignment",
																							"src": "19110:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19127:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "19127:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19138:2:12",
																										"nodeType": "YulLiteral",
																										"src": "19138:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19123:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "19123:3:12"
																								},
																								"nativeSrc": "19123:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19123:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19110:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "19110:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18958:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "18958:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18961:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "18961:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18955:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "18955:2:12"
																					},
																					"nativeSrc": "18955:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18955:14:12"
																				},
																				"nativeSrc": "18947:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18970:21:12",
																					"nodeType": "YulBlock",
																					"src": "18970:21:12",
																					"statements": [
																						{
																							"nativeSrc": "18972:17:12",
																							"nodeType": "YulAssignment",
																							"src": "18972:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18981:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "18981:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18984:4:12",
																										"nodeType": "YulLiteral",
																										"src": "18984:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18977:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "18977:3:12"
																								},
																								"nativeSrc": "18977:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "18977:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18972:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "18972:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18951:3:12",
																					"nodeType": "YulBlock",
																					"src": "18951:3:12",
																					"statements": []
																				},
																				"src": "18947:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "19191:156:12",
																					"nodeType": "YulBlock",
																					"src": "19191:156:12",
																					"statements": [
																						{
																							"nativeSrc": "19209:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19209:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19236:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "19236:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19241:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19241:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19232:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "19232:3:12"
																										},
																										"nativeSrc": "19232:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19232:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19226:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19226:5:12"
																								},
																								"nativeSrc": "19226:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19226:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19213:9:12",
																									"nodeType": "YulTypedName",
																									"src": "19213:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19276:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "19276:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19303:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19303:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19318:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "19318:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19326:4:12",
																														"nodeType": "YulLiteral",
																														"src": "19326:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19314:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "19314:3:12"
																												},
																												"nativeSrc": "19314:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "19314:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19284:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "19284:18:12"
																										},
																										"nativeSrc": "19284:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19284:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19269:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19269:6:12"
																								},
																								"nativeSrc": "19269:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19269:64:12"
																							},
																							"nativeSrc": "19269:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "19269:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19174:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "19174:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19183:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "19183:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19171:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "19171:2:12"
																					},
																					"nativeSrc": "19171:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19171:19:12"
																				},
																				"nativeSrc": "19168:179:12",
																				"nodeType": "YulIf",
																				"src": "19168:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19367:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "19367:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19381:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "19381:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19389:1:12",
																											"nodeType": "YulLiteral",
																											"src": "19389:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19377:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "19377:3:12"
																									},
																									"nativeSrc": "19377:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "19377:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19393:1:12",
																									"nodeType": "YulLiteral",
																									"src": "19393:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19373:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "19373:3:12"
																							},
																							"nativeSrc": "19373:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "19373:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19360:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19360:6:12"
																					},
																					"nativeSrc": "19360:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19360:36:12"
																				},
																				"nativeSrc": "19360:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "19360:36:12"
																			}
																		]
																	},
																	"nativeSrc": "18788:618:12",
																	"nodeType": "YulCase",
																	"src": "18788:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18793:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18793:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19423:222:12",
																		"nodeType": "YulBlock",
																		"src": "19423:222:12",
																		"statements": [
																			{
																				"nativeSrc": "19437:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19437:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19450:1:12",
																					"nodeType": "YulLiteral",
																					"src": "19450:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19441:5:12",
																						"nodeType": "YulTypedName",
																						"src": "19441:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19474:67:12",
																					"nodeType": "YulBlock",
																					"src": "19474:67:12",
																					"statements": [
																						{
																							"nativeSrc": "19492:35:12",
																							"nodeType": "YulAssignment",
																							"src": "19492:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19511:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "19511:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19516:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19516:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19507:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "19507:3:12"
																										},
																										"nativeSrc": "19507:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19507:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19501:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19501:5:12"
																								},
																								"nativeSrc": "19501:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19501:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19492:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19492:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19467:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "19467:6:12"
																				},
																				"nativeSrc": "19464:77:12",
																				"nodeType": "YulIf",
																				"src": "19464:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19561:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "19561:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19620:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19620:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19627:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19627:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19567:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "19567:52:12"
																							},
																							"nativeSrc": "19567:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "19567:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19554:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19554:6:12"
																					},
																					"nativeSrc": "19554:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19554:81:12"
																				},
																				"nativeSrc": "19554:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "19554:81:12"
																			}
																		]
																	},
																	"nativeSrc": "19415:230:12",
																	"nodeType": "YulCase",
																	"src": "19415:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18768:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18768:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18776:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18776:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18765:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18765:2:12"
																},
																"nativeSrc": "18765:14:12",
																"nodeType": "YulFunctionCall",
																"src": "18765:14:12"
															},
															"nativeSrc": "18758:887:12",
															"nodeType": "YulSwitch",
															"src": "18758:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18256:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18337:4:12",
														"nodeType": "YulTypedName",
														"src": "18337:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18343:3:12",
														"nodeType": "YulTypedName",
														"src": "18343:3:12",
														"type": ""
													}
												],
												"src": "18256:1395:12"
											},
											{
												"body": {
													"nativeSrc": "19775:195:12",
													"nodeType": "YulBlock",
													"src": "19775:195:12",
													"statements": [
														{
															"nativeSrc": "19785:26:12",
															"nodeType": "YulAssignment",
															"src": "19785:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19797:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19797:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19808:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19793:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19793:3:12"
																},
																"nativeSrc": "19793:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19793:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19785:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19785:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19832:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19832:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19843:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19843:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19828:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19828:3:12"
																		},
																		"nativeSrc": "19828:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19828:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19851:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19851:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19857:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19857:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19847:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19847:3:12"
																		},
																		"nativeSrc": "19847:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19847:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19821:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19821:6:12"
																},
																"nativeSrc": "19821:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19821:47:12"
															},
															"nativeSrc": "19821:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19821:47:12"
														},
														{
															"nativeSrc": "19877:86:12",
															"nodeType": "YulAssignment",
															"src": "19877:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19949:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19958:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19958:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19885:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "19885:63:12"
																},
																"nativeSrc": "19885:78:12",
																"nodeType": "YulFunctionCall",
																"src": "19885:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19877:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19877:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19657:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19747:9:12",
														"nodeType": "YulTypedName",
														"src": "19747:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19759:6:12",
														"nodeType": "YulTypedName",
														"src": "19759:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19770:4:12",
														"nodeType": "YulTypedName",
														"src": "19770:4:12",
														"type": ""
													}
												],
												"src": "19657:313:12"
											},
											{
												"body": {
													"nativeSrc": "20130:288:12",
													"nodeType": "YulBlock",
													"src": "20130:288:12",
													"statements": [
														{
															"nativeSrc": "20140:26:12",
															"nodeType": "YulAssignment",
															"src": "20140:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20152:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20152:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20163:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20163:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20148:3:12"
																},
																"nativeSrc": "20148:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20148:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20140:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20140:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20220:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20220:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20233:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20233:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20244:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20244:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20229:3:12"
																		},
																		"nativeSrc": "20229:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20229:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20176:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20176:43:12"
																},
																"nativeSrc": "20176:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20176:71:12"
															},
															"nativeSrc": "20176:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20176:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20301:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20301:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20314:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20314:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20325:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20325:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20310:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20310:3:12"
																		},
																		"nativeSrc": "20310:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20310:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20257:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20257:43:12"
																},
																"nativeSrc": "20257:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20257:72:12"
															},
															"nativeSrc": "20257:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20257:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20383:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20383:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20396:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20396:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20407:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20407:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20392:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20392:3:12"
																		},
																		"nativeSrc": "20392:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20392:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20339:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20339:43:12"
																},
																"nativeSrc": "20339:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20339:72:12"
															},
															"nativeSrc": "20339:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20339:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19976:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20086:9:12",
														"nodeType": "YulTypedName",
														"src": "20086:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20098:6:12",
														"nodeType": "YulTypedName",
														"src": "20098:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20106:6:12",
														"nodeType": "YulTypedName",
														"src": "20106:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20114:6:12",
														"nodeType": "YulTypedName",
														"src": "20114:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20125:4:12",
														"nodeType": "YulTypedName",
														"src": "20125:4:12",
														"type": ""
													}
												],
												"src": "19976:442:12"
											},
											{
												"body": {
													"nativeSrc": "20466:48:12",
													"nodeType": "YulBlock",
													"src": "20466:48:12",
													"statements": [
														{
															"nativeSrc": "20476:32:12",
															"nodeType": "YulAssignment",
															"src": "20476:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20501:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20501:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "20494:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "20494:6:12"
																		},
																		"nativeSrc": "20494:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20494:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20487:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20487:6:12"
																},
																"nativeSrc": "20487:21:12",
																"nodeType": "YulFunctionCall",
																"src": "20487:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20476:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "20476:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "20424:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20448:5:12",
														"nodeType": "YulTypedName",
														"src": "20448:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20458:7:12",
														"nodeType": "YulTypedName",
														"src": "20458:7:12",
														"type": ""
													}
												],
												"src": "20424:90:12"
											},
											{
												"body": {
													"nativeSrc": "20560:76:12",
													"nodeType": "YulBlock",
													"src": "20560:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "20614:16:12",
																"nodeType": "YulBlock",
																"src": "20614:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20623:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20623:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20626:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20626:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20616:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20616:6:12"
																			},
																			"nativeSrc": "20616:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20616:12:12"
																		},
																		"nativeSrc": "20616:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "20616:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20583:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20583:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20605:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "20605:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "20590:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "20590:14:12"
																				},
																				"nativeSrc": "20590:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "20590:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20580:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "20580:2:12"
																		},
																		"nativeSrc": "20580:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20580:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20573:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20573:6:12"
																},
																"nativeSrc": "20573:40:12",
																"nodeType": "YulFunctionCall",
																"src": "20573:40:12"
															},
															"nativeSrc": "20570:60:12",
															"nodeType": "YulIf",
															"src": "20570:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20520:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20553:5:12",
														"nodeType": "YulTypedName",
														"src": "20553:5:12",
														"type": ""
													}
												],
												"src": "20520:116:12"
											},
											{
												"body": {
													"nativeSrc": "20702:77:12",
													"nodeType": "YulBlock",
													"src": "20702:77:12",
													"statements": [
														{
															"nativeSrc": "20712:22:12",
															"nodeType": "YulAssignment",
															"src": "20712:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20727:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20727:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20721:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "20721:5:12"
																},
																"nativeSrc": "20721:13:12",
																"nodeType": "YulFunctionCall",
																"src": "20721:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20712:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "20712:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20767:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20767:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20743:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "20743:23:12"
																},
																"nativeSrc": "20743:30:12",
																"nodeType": "YulFunctionCall",
																"src": "20743:30:12"
															},
															"nativeSrc": "20743:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "20743:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20642:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20680:6:12",
														"nodeType": "YulTypedName",
														"src": "20680:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20688:3:12",
														"nodeType": "YulTypedName",
														"src": "20688:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20696:5:12",
														"nodeType": "YulTypedName",
														"src": "20696:5:12",
														"type": ""
													}
												],
												"src": "20642:137:12"
											},
											{
												"body": {
													"nativeSrc": "20859:271:12",
													"nodeType": "YulBlock",
													"src": "20859:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "20905:83:12",
																"nodeType": "YulBlock",
																"src": "20905:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20907:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "20907:77:12"
																			},
																			"nativeSrc": "20907:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20907:79:12"
																		},
																		"nativeSrc": "20907:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "20907:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20880:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "20880:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20889:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20889:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20876:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20876:3:12"
																		},
																		"nativeSrc": "20876:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20876:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20901:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20901:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20872:3:12"
																},
																"nativeSrc": "20872:32:12",
																"nodeType": "YulFunctionCall",
																"src": "20872:32:12"
															},
															"nativeSrc": "20869:119:12",
															"nodeType": "YulIf",
															"src": "20869:119:12"
														},
														{
															"nativeSrc": "20998:125:12",
															"nodeType": "YulBlock",
															"src": "20998:125:12",
															"statements": [
																{
																	"nativeSrc": "21013:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21013:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21027:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21027:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21017:6:12",
																			"nodeType": "YulTypedName",
																			"src": "21017:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21042:71:12",
																	"nodeType": "YulAssignment",
																	"src": "21042:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21085:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "21085:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21096:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "21096:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21081:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "21081:3:12"
																				},
																				"nativeSrc": "21081:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21081:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21105:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21105:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21052:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "21052:28:12"
																		},
																		"nativeSrc": "21052:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21052:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21042:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "21042:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20785:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20829:9:12",
														"nodeType": "YulTypedName",
														"src": "20829:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20840:7:12",
														"nodeType": "YulTypedName",
														"src": "20840:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20852:6:12",
														"nodeType": "YulTypedName",
														"src": "20852:6:12",
														"type": ""
													}
												],
												"src": "20785:345:12"
											},
											{
												"body": {
													"nativeSrc": "21194:40:12",
													"nodeType": "YulBlock",
													"src": "21194:40:12",
													"statements": [
														{
															"nativeSrc": "21205:22:12",
															"nodeType": "YulAssignment",
															"src": "21205:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21221:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21221:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21215:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21215:5:12"
																},
																"nativeSrc": "21215:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21215:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21205:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21205:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21136:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21177:5:12",
														"nodeType": "YulTypedName",
														"src": "21177:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21187:6:12",
														"nodeType": "YulTypedName",
														"src": "21187:6:12",
														"type": ""
													}
												],
												"src": "21136:98:12"
											},
											{
												"body": {
													"nativeSrc": "21353:34:12",
													"nodeType": "YulBlock",
													"src": "21353:34:12",
													"statements": [
														{
															"nativeSrc": "21363:18:12",
															"nodeType": "YulAssignment",
															"src": "21363:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "21378:3:12",
																"nodeType": "YulIdentifier",
																"src": "21378:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21363:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "21363:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21240:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21325:3:12",
														"nodeType": "YulTypedName",
														"src": "21325:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21330:6:12",
														"nodeType": "YulTypedName",
														"src": "21330:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21341:11:12",
														"nodeType": "YulTypedName",
														"src": "21341:11:12",
														"type": ""
													}
												],
												"src": "21240:147:12"
											},
											{
												"body": {
													"nativeSrc": "21501:278:12",
													"nodeType": "YulBlock",
													"src": "21501:278:12",
													"statements": [
														{
															"nativeSrc": "21511:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21511:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21557:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21557:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21525:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "21525:31:12"
																},
																"nativeSrc": "21525:38:12",
																"nodeType": "YulFunctionCall",
																"src": "21525:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21515:6:12",
																	"nodeType": "YulTypedName",
																	"src": "21515:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21572:95:12",
															"nodeType": "YulAssignment",
															"src": "21572:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21655:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21655:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21660:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21660:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21579:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "21579:75:12"
																},
																"nativeSrc": "21579:88:12",
																"nodeType": "YulFunctionCall",
																"src": "21579:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21572:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21572:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21715:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "21715:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21722:4:12",
																				"nodeType": "YulLiteral",
																				"src": "21722:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21711:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21711:3:12"
																		},
																		"nativeSrc": "21711:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21711:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21729:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21729:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21734:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21734:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21676:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "21676:34:12"
																},
																"nativeSrc": "21676:65:12",
																"nodeType": "YulFunctionCall",
																"src": "21676:65:12"
															},
															"nativeSrc": "21676:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "21676:65:12"
														},
														{
															"nativeSrc": "21750:23:12",
															"nodeType": "YulAssignment",
															"src": "21750:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21761:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21761:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21766:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21766:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21757:3:12"
																},
																"nativeSrc": "21757:16:12",
																"nodeType": "YulFunctionCall",
																"src": "21757:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21750:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21393:386:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21482:5:12",
														"nodeType": "YulTypedName",
														"src": "21482:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21489:3:12",
														"nodeType": "YulTypedName",
														"src": "21489:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21497:3:12",
														"nodeType": "YulTypedName",
														"src": "21497:3:12",
														"type": ""
													}
												],
												"src": "21393:386:12"
											},
											{
												"body": {
													"nativeSrc": "21919:137:12",
													"nodeType": "YulBlock",
													"src": "21919:137:12",
													"statements": [
														{
															"nativeSrc": "21930:100:12",
															"nodeType": "YulAssignment",
															"src": "21930:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22017:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22017:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22026:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22026:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21937:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "21937:79:12"
																},
																"nativeSrc": "21937:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21937:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21930:3:12"
																}
															]
														},
														{
															"nativeSrc": "22040:10:12",
															"nodeType": "YulAssignment",
															"src": "22040:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "22047:3:12",
																"nodeType": "YulIdentifier",
																"src": "22047:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22040:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22040:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21785:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21898:3:12",
														"nodeType": "YulTypedName",
														"src": "21898:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21904:6:12",
														"nodeType": "YulTypedName",
														"src": "21904:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21915:3:12",
														"nodeType": "YulTypedName",
														"src": "21915:3:12",
														"type": ""
													}
												],
												"src": "21785:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20Burnable_$923_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20Burnable_$923_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20Burnable_$923_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20Burnable_$923__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20Burnable_$923_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message index out of bounds for \")\n\n        mstore(add(memPtr, 32), \"user\")\n\n    }\n\n    function abi_encode_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee percentage\")\n\n    }\n\n    function abi_encode_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806355a373d6116100955780639428cda3116100645780639428cda31461028d578063ad039fad146102bd578063aface8cd146102ed578063f2fde38b14610309576100fe565b806355a373d614610229578063715018a6146102475780637862f04c146102515780638da5cb5b1461026f576100fe565b80632024c1b7116100d15780632024c1b71461018e57806336913a40146101c057806338daefb6146101f1578063469c81101461020d576100fe565b80630d80fefd146101025780631293092e14610134578063147e910814610152578063185870f914610170575b5f80fd5b61011c6004803603810190610117919061112f565b610325565b60405161012b93929190611218565b60405180910390f35b61013c6103ff565b6040516101499190611254565b60405180910390f35b61015a610405565b6040516101679190611254565b60405180910390f35b610178610411565b604051610185919061126d565b60405180910390f35b6101a860048036038101906101a3919061112f565b610436565b6040516101b793929190611218565b60405180910390f35b6101da60048036038101906101d591906112b0565b610568565b6040516101e89291906112ee565b60405180910390f35b61020b6004803603810190610206919061112f565b61070b565b005b61022760048036038101906102229190611448565b610761565b005b610231610ad7565b60405161023e91906114ea565b60405180910390f35b61024f610afc565b005b610259610b06565b6040516102669190611254565b60405180910390f35b610277610b0c565b604051610284919061126d565b60405180910390f35b6102a760048036038101906102a291906112b0565b610b33565b6040516102b49190611254565b60405180910390f35b6102d760048036038101906102d29190611503565b610b5e565b6040516102e491906115e5565b60405180910390f35b6103076004803603810190610302919061112f565b610bf1565b005b610323600480360381019061031e9190611503565b610c03565b005b60068181548110610334575f80fd5b905f5260205f2090600302015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461037890611632565b80601f01602080910402602001604051908101604052809291908181526020018280546103a490611632565b80156103ef5780601f106103c6576101008083540402835291602001916103ef565b820191905f5260205f20905b8154815290600101906020018083116103d257829003601f168201915b5050505050908060020154905083565b60045481565b5f600680549050905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60605f6006805490508410610481576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610478906116ac565b60405180910390fd5b5f60068581548110610496576104956116ca565b5b905f5260205f2090600302019050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010182600201548180546104dc90611632565b80601f016020809104026020016040519081016040528092919081815260200182805461050890611632565b80156105535780601f1061052a57610100808354040283529160200191610553565b820191905f5260205f20905b81548152906001019060200180831161053657829003601f168201915b50505050509150935093509350509193909250565b60605f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905083106105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e490611767565b60405180910390fd5b5f60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061063d5761063c6116ca565b5b905f5260205f20015490505f6006828154811061065d5761065c6116ca565b5b905f5260205f209060030201905080600101816002015481805461068090611632565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90611632565b80156106f75780601f106106ce576101008083540402835291602001916106f7565b820191905f5260205f20905b8154815290600101906020018083116106da57829003601f168201915b505050505091509350935050509250929050565b610713610c87565b6064811115610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e906117cf565b60405180910390fd5b8060058190555050565b610769610d0e565b5f606460055460045461077c919061181a565b6107869190611888565b90505f8160045461079791906118b8565b90506108083360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d54909392919063ffffffff16565b61085633308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d54909392919063ffffffff16565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016108b09190611254565b5f604051808303815f87803b1580156108c7575f80fd5b505af11580156108d9573d5f803e3d5ffd5b50505050600660405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200142815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161098f9190611a7f565b5060408201518160020155505060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060016006805490506109eb91906118b8565b908060018154018082558091505060019003905f5260205f20015f90919091909150557f69e27f80547602d16208b028c44d20f25956e1fb7d0f51d62aa02f392426f37182604051610a3d9190611254565b60405180910390a17f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac781604051610a749190611254565b60405180910390a13373ffffffffffffffffffffffffffffffffffffffff167f0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e813084604051610ac29190611b4e565b60405180910390a25050610ad4610dd6565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b04610c87565b565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6007602052815f5260405f208181548110610b4c575f80fd5b905f5260205f20015f91509150505481565b606060075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610be557602002820191905f5260205f20905b815481526020019060010190808311610bd1575b50505050509050919050565b610bf9610c87565b8060048190555050565b610c0b610c87565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c72919061126d565b60405180910390fd5b610c8481610ddf565b50565b610c8f610ea0565b73ffffffffffffffffffffffffffffffffffffffff16610cad610b0c565b73ffffffffffffffffffffffffffffffffffffffff1614610d0c57610cd0610ea0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d03919061126d565b60405180910390fd5b565b600260015403610d4a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b610dd0848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d8993929190611b6e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ea7565b50505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f610ed1828473ffffffffffffffffffffffffffffffffffffffff16610f3c90919063ffffffff16565b90505f815114158015610ef5575080806020019051810190610ef39190611bd8565b155b15610f3757826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610f2e919061126d565b60405180910390fd5b505050565b6060610f4983835f610f51565b905092915050565b606081471015610f9857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610f8f919061126d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610fc09190611c47565b5f6040518083038185875af1925050503d805f8114610ffa576040519150601f19603f3d011682016040523d82523d5f602084013e610fff565b606091505b509150915061100f86838361101a565b925050509392505050565b60608261102f5761102a826110a7565b61109f565b5f825114801561105557505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161108e919061126d565b60405180910390fd5b8190506110a0565b5b9392505050565b5f815111156110b95780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61110e816110fc565b8114611118575f80fd5b50565b5f8135905061112981611105565b92915050565b5f60208284031215611144576111436110f4565b5b5f6111518482850161111b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111838261115a565b9050919050565b61119381611179565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111db82611199565b6111e581856111a3565b93506111f58185602086016111b3565b6111fe816111c1565b840191505092915050565b611212816110fc565b82525050565b5f60608201905061122b5f83018661118a565b818103602083015261123d81856111d1565b905061124c6040830184611209565b949350505050565b5f6020820190506112675f830184611209565b92915050565b5f6020820190506112805f83018461118a565b92915050565b61128f81611179565b8114611299575f80fd5b50565b5f813590506112aa81611286565b92915050565b5f80604083850312156112c6576112c56110f4565b5b5f6112d38582860161129c565b92505060206112e48582860161111b565b9150509250929050565b5f6040820190508181035f83015261130681856111d1565b90506113156020830184611209565b9392505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61135a826111c1565b810181811067ffffffffffffffff8211171561137957611378611324565b5b80604052505050565b5f61138b6110eb565b90506113978282611351565b919050565b5f67ffffffffffffffff8211156113b6576113b5611324565b5b6113bf826111c1565b9050602081019050919050565b828183375f83830152505050565b5f6113ec6113e78461139c565b611382565b90508281526020810184848401111561140857611407611320565b5b6114138482856113cc565b509392505050565b5f82601f83011261142f5761142e61131c565b5b813561143f8482602086016113da565b91505092915050565b5f6020828403121561145d5761145c6110f4565b5b5f82013567ffffffffffffffff81111561147a576114796110f8565b5b6114868482850161141b565b91505092915050565b5f819050919050565b5f6114b26114ad6114a88461115a565b61148f565b61115a565b9050919050565b5f6114c382611498565b9050919050565b5f6114d4826114b9565b9050919050565b6114e4816114ca565b82525050565b5f6020820190506114fd5f8301846114db565b92915050565b5f60208284031215611518576115176110f4565b5b5f6115258482850161129c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611560816110fc565b82525050565b5f6115718383611557565b60208301905092915050565b5f602082019050919050565b5f6115938261152e565b61159d8185611538565b93506115a883611548565b805f5b838110156115d85781516115bf8882611566565b97506115ca8361157d565b9250506001810190506115ab565b5085935050505092915050565b5f6020820190508181035f8301526115fd8184611589565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061164957607f821691505b60208210810361165c5761165b611605565b5b50919050565b7f4d65737361676520696e646578206f7574206f6620626f756e647300000000005f82015250565b5f611696601b836111a3565b91506116a182611662565b602082019050919050565b5f6020820190508181035f8301526116c38161168a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4d65737361676520696e646578206f7574206f6620626f756e647320666f72205f8201527f7573657200000000000000000000000000000000000000000000000000000000602082015250565b5f6117516024836111a3565b915061175c826116f7565b604082019050919050565b5f6020820190508181035f83015261177e81611745565b9050919050565b7f496e76616c6964206665652070657263656e74616765000000000000000000005f82015250565b5f6117b96016836111a3565b91506117c482611785565b602082019050919050565b5f6020820190508181035f8301526117e6816117ad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611824826110fc565b915061182f836110fc565b925082820261183d816110fc565b91508282048414831517611854576118536117ed565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611892826110fc565b915061189d836110fc565b9250826118ad576118ac61185b565b5b828204905092915050565b5f6118c2826110fc565b91506118cd836110fc565b92508282039050818111156118e5576118e46117ed565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261190c565b611951868361190c565b95508019841693508086168417925050509392505050565b5f61198361197e611979846110fc565b61148f565b6110fc565b9050919050565b5f819050919050565b61199c83611969565b6119b06119a88261198a565b848454611918565b825550505050565b5f90565b6119c46119b8565b6119cf818484611993565b505050565b5b818110156119f2576119e75f826119bc565b6001810190506119d5565b5050565b601f821115611a3757611a08816118eb565b611a11846118fd565b81016020851015611a20578190505b611a34611a2c856118fd565b8301826119d4565b50505b505050565b5f82821c905092915050565b5f611a575f1984600802611a3c565b1980831691505092915050565b5f611a6f8383611a48565b9150826002028217905092915050565b611a8882611199565b67ffffffffffffffff811115611aa157611aa0611324565b5b611aab8254611632565b611ab68282856119f6565b5f60209050601f831160018114611ae7575f8415611ad5578287015190505b611adf8582611a64565b865550611b46565b601f198416611af5866118eb565b5f5b82811015611b1c57848901518255600182019150602085019450602081019050611af7565b86831015611b395784890151611b35601f891682611a48565b8355505b6001600288020188555050505b505050505050565b5f6020820190508181035f830152611b6681846111d1565b905092915050565b5f606082019050611b815f83018661118a565b611b8e602083018561118a565b611b9b6040830184611209565b949350505050565b5f8115159050919050565b611bb781611ba3565b8114611bc1575f80fd5b50565b5f81519050611bd281611bae565b92915050565b5f60208284031215611bed57611bec6110f4565b5b5f611bfa84828501611bc4565b91505092915050565b5f81519050919050565b5f81905092915050565b5f611c2182611c03565b611c2b8185611c0d565b9350611c3b8185602086016111b3565b80840191505092915050565b5f611c528284611c17565b91508190509291505056fea26469706673582212200bc1b62467bf7ebdbbd3e8351294c8417b698887677a79a73e13210f62d1b3dc64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55A373D6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9428CDA3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9428CDA3 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xAD039FAD EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAFACE8CD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x309 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x7862F04C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2024C1B7 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2024C1B7 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x36913A40 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x38DAEFB6 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x469C8110 EQ PUSH2 0x20D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xD80FEFD EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1293092E EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x147E9108 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x185870F9 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP3 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0xAFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x378 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A4 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD DUP3 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x4DC SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x508 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x553 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x553 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x536 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x65D JUMPI PUSH2 0x65C PUSH2 0x16CA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x1632 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x769 PUSH2 0xD0E JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x786 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x808 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x856 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD54 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x69E27F80547602D16208B028C44D20F25956E1FB7D0F51D62AA02F392426F371 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7FCCDA06D6EB51C23CBD16D49B9B3F3EBAFB002DBA1B074895CBB35D0E8130 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xAD4 PUSH2 0xDD6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xC87 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBD1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC87 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC0B PUSH2 0xC87 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xDDF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xEA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCAD PUSH2 0xB0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0C JUMPI PUSH2 0xCD0 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDD0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xEA7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xED1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF37 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF49 DUP4 DUP4 PUSH0 PUSH2 0xF51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xF98 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8F SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x100F DUP7 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x102F JUMPI PUSH2 0x102A DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1055 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1097 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x10A0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x10B9 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110E DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1151 DUP5 DUP3 DUP6 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1183 DUP3 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DB DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x11E5 DUP2 DUP6 PUSH2 0x11A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1212 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x122B PUSH0 DUP4 ADD DUP7 PUSH2 0x118A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x123D DUP2 DUP6 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x124C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH0 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1280 PUSH0 DUP4 ADD DUP5 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP2 EQ PUSH2 0x1299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12AA DUP2 PUSH2 0x1286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12D3 DUP6 DUP3 DUP7 ADD PUSH2 0x129C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1306 DUP2 DUP6 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1315 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x135A DUP3 PUSH2 0x11C1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1379 JUMPI PUSH2 0x1378 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x138B PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP PUSH2 0x1397 DUP3 DUP3 PUSH2 0x1351 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B5 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH2 0x13BF DUP3 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13EC PUSH2 0x13E7 DUP5 PUSH2 0x139C JUMP JUMPDEST PUSH2 0x1382 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1408 JUMPI PUSH2 0x1407 PUSH2 0x1320 JUMP JUMPDEST JUMPDEST PUSH2 0x1413 DUP5 DUP3 DUP6 PUSH2 0x13CC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x142F JUMPI PUSH2 0x142E PUSH2 0x131C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x143F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x147A JUMPI PUSH2 0x1479 PUSH2 0x10F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1486 DUP5 DUP3 DUP6 ADD PUSH2 0x141B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14B2 PUSH2 0x14AD PUSH2 0x14A8 DUP5 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C3 DUP3 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D4 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E4 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FD PUSH0 DUP4 ADD DUP5 PUSH2 0x14DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH2 0x1517 PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1525 DUP5 DUP3 DUP6 ADD PUSH2 0x129C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1560 DUP2 PUSH2 0x10FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1571 DUP4 DUP4 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x159D DUP2 DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP4 POP PUSH2 0x15A8 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D8 JUMPI DUP2 MLOAD PUSH2 0x15BF DUP9 DUP3 PUSH2 0x1566 JUMP JUMPDEST SWAP8 POP PUSH2 0x15CA DUP4 PUSH2 0x157D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15FD DUP2 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1649 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1605 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D65737361676520696E646578206F7574206F6620626F756E64730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1696 PUSH1 0x1B DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A1 DUP3 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C3 DUP2 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4D65737361676520696E646578206F7574206F6620626F756E647320666F7220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7573657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1751 PUSH1 0x24 DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x175C DUP3 PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177E DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206665652070657263656E7461676500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B9 PUSH1 0x16 DUP4 PUSH2 0x11A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C4 DUP3 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E6 DUP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x182F DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x183D DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17ED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1892 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x189D DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x185B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C2 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP2 POP PUSH2 0x18CD DUP4 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x17ED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1947 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x1951 DUP7 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH2 0x197E PUSH2 0x1979 DUP5 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199C DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x19A8 DUP3 PUSH2 0x198A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1918 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x19C4 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x19CF DUP2 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19E7 PUSH0 DUP3 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A08 DUP2 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1A11 DUP5 PUSH2 0x18FD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A20 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1A34 PUSH2 0x1A2C DUP6 PUSH2 0x18FD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x19D4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A57 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1A3C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6F DUP4 DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A88 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH2 0x1AA0 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST PUSH2 0x1AAB DUP3 SLOAD PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1AB6 DUP3 DUP3 DUP6 PUSH2 0x19F6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1AD5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1ADF DUP6 DUP3 PUSH2 0x1A64 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1AF5 DUP7 PUSH2 0x18EB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B1C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AF7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1B39 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1B35 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1A48 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B66 DUP2 DUP5 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B81 PUSH0 DUP4 ADD DUP7 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1B8E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1209 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB7 DUP2 PUSH2 0x1BA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD2 DUP2 PUSH2 0x1BAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BEC PUSH2 0x10F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFA DUP5 DUP3 DUP6 ADD PUSH2 0x1BC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 DUP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C2B DUP2 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1C3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 DUP5 PUSH2 0x1C17 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xC1 0xB6 0x24 PUSH8 0xBF7EBDBBD3E83512 SWAP5 0xC8 COINBASE PUSH28 0x698887677A79A73E13210F62D1B3DC64736F6C634300081900330000 ",
							"sourceMap": "377:4031:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;547:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3162:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3305:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3961:445;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1861:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2278:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;471:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:93;;;:::i;:::-;;674:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:49:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3726:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1757:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;895:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;547:32::-;;;;:::o;3162:97::-;3211:7;3237:8;:15;;;;3230:22;;3162:97;:::o;511:30::-;;;;;;;;;;;;;:::o;3305:363::-;3406:14;3422:21;3445:17;3494:8;:15;;;;3486:5;:23;3478:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:23;3577:8;3586:5;3577:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3551:41;;3610:7;:14;;;;;;;;;;;;3626:7;:15;;3643:7;:17;;;3602:59;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:363;;;;;:::o;3961:445::-;4064:21;4087:17;4145:12;:18;4158:4;4145:18;;;;;;;;;;;;;;;:25;;;;4137:5;:33;4116:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;4242:19;4264:12;:18;4277:4;4264:18;;;;;;;;;;;;;;;4283:5;4264:25;;;;;;;;:::i;:::-;;;;;;;;;;4242:47;;4299:23;4325:8;4334:11;4325:21;;;;;;;;:::i;:::-;;;;;;;;;;;;4299:47;;4364:7;:15;;4381:7;:17;;;4356:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3961:445;;;;;:::o;1861:212::-;1531:13:0;:11;:13::i;:::-;1987:3:11::1;1969:14;:21;;1961:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2052:14;2027:22;:39;;;;1861:212:::0;:::o;2278:711::-;2356:21:10;:19;:21::i;:::-;2353:20:11::1;2417:3;2391:22;;2377:11;;:36;;;;:::i;:::-;2376:44;;;;:::i;:::-;2353:67;;2430:18;2465:12;2451:11;;:26;;;;:::i;:::-;2430:47;;2488:119;2532:10;2556:15;;;;;;;;;;;2585:12;2488:13;;;;;;;;;;;:30;;;;:119;;;;;;:::i;:::-;2617:69;2648:10;2668:4;2675:10;2617:13;;;;;;;;;;;:30;;;;:69;;;;;;:::i;:::-;2696:13;;;;;;;;;;;:18;;;2715:10;2696:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2737:8;2751:46;;;;;;;;2759:10;2751:46;;;;;;2771:8;2751:46;;;;2781:15;2751:46;;::::0;2737:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2808:12;:24;2821:10;2808:24;;;;;;;;;;;;;;;2856:1;2838:8;:15;;;;:19;;;;:::i;:::-;2808:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2874:21;2882:12;2874:21;;;;;;:::i;:::-;;;;;;;;2910:24;2923:10;2910:24;;;;;;:::i;:::-;;;;;;;;2961:10;2949:33;;;2973:8;2949:33;;;;;;:::i;:::-;;;;;;;;2343:646;;2398:20:10::0;:18;:20::i;:::-;2278:711:11;:::o;471:34::-;;;;;;;;;;;;;:::o;1478:93::-;1531:13:0;:11;:13::i;:::-;1478:93:11:o;674:42::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;926:49:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3726:140::-;3806:16;3841:12;:18;3854:4;3841:18;;;;;;;;;;;;;;;3834:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3726:140;;;:::o;1757:98::-;1531:13:0;:11;:13::i;:::-;1840:8:11::1;1826:11;:22;;;;1757:98:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2431:307:10:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;1702:188:7:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2744:208:10:-;1713:1;2924:7;:21;;;;2744:208::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;4059:629:7:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:8:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:99::-;1435:6;1469:5;1463:12;1453:22;;1383:99;;;:::o;1488:169::-;1572:11;1606:6;1601:3;1594:19;1646:4;1641:3;1637:14;1622:29;;1488:169;;;;:::o;1663:139::-;1752:6;1747:3;1742;1736:23;1793:1;1784:6;1779:3;1775:16;1768:27;1663:139;;;:::o;1808:102::-;1849:6;1900:2;1896:7;1891:2;1884:5;1880:14;1876:28;1866:38;;1808:102;;;:::o;1916:377::-;2004:3;2032:39;2065:5;2032:39;:::i;:::-;2087:71;2151:6;2146:3;2087:71;:::i;:::-;2080:78;;2167:65;2225:6;2220:3;2213:4;2206:5;2202:16;2167:65;:::i;:::-;2257:29;2279:6;2257:29;:::i;:::-;2252:3;2248:39;2241:46;;2008:285;1916:377;;;;:::o;2299:118::-;2386:24;2404:5;2386:24;:::i;:::-;2381:3;2374:37;2299:118;;:::o;2423:533::-;2592:4;2630:2;2619:9;2615:18;2607:26;;2643:71;2711:1;2700:9;2696:17;2687:6;2643:71;:::i;:::-;2761:9;2755:4;2751:20;2746:2;2735:9;2731:18;2724:48;2789:78;2862:4;2853:6;2789:78;:::i;:::-;2781:86;;2877:72;2945:2;2934:9;2930:18;2921:6;2877:72;:::i;:::-;2423:533;;;;;;:::o;2962:222::-;3055:4;3093:2;3082:9;3078:18;3070:26;;3106:71;3174:1;3163:9;3159:17;3150:6;3106:71;:::i;:::-;2962:222;;;;:::o;3190:::-;3283:4;3321:2;3310:9;3306:18;3298:26;;3334:71;3402:1;3391:9;3387:17;3378:6;3334:71;:::i;:::-;3190:222;;;;:::o;3418:122::-;3491:24;3509:5;3491:24;:::i;:::-;3484:5;3481:35;3471:63;;3530:1;3527;3520:12;3471:63;3418:122;:::o;3546:139::-;3592:5;3630:6;3617:20;3608:29;;3646:33;3673:5;3646:33;:::i;:::-;3546:139;;;;:::o;3691:474::-;3759:6;3767;3816:2;3804:9;3795:7;3791:23;3787:32;3784:119;;;3822:79;;:::i;:::-;3784:119;3942:1;3967:53;4012:7;4003:6;3992:9;3988:22;3967:53;:::i;:::-;3957:63;;3913:117;4069:2;4095:53;4140:7;4131:6;4120:9;4116:22;4095:53;:::i;:::-;4085:63;;4040:118;3691:474;;;;;:::o;4171:423::-;4312:4;4350:2;4339:9;4335:18;4327:26;;4399:9;4393:4;4389:20;4385:1;4374:9;4370:17;4363:47;4427:78;4500:4;4491:6;4427:78;:::i;:::-;4419:86;;4515:72;4583:2;4572:9;4568:18;4559:6;4515:72;:::i;:::-;4171:423;;;;;:::o;4600:117::-;4709:1;4706;4699:12;4723:117;4832:1;4829;4822:12;4846:180;4894:77;4891:1;4884:88;4991:4;4988:1;4981:15;5015:4;5012:1;5005:15;5032:281;5115:27;5137:4;5115:27;:::i;:::-;5107:6;5103:40;5245:6;5233:10;5230:22;5209:18;5197:10;5194:34;5191:62;5188:88;;;5256:18;;:::i;:::-;5188:88;5296:10;5292:2;5285:22;5075:238;5032:281;;:::o;5319:129::-;5353:6;5380:20;;:::i;:::-;5370:30;;5409:33;5437:4;5429:6;5409:33;:::i;:::-;5319:129;;;:::o;5454:308::-;5516:4;5606:18;5598:6;5595:30;5592:56;;;5628:18;;:::i;:::-;5592:56;5666:29;5688:6;5666:29;:::i;:::-;5658:37;;5750:4;5744;5740:15;5732:23;;5454:308;;;:::o;5768:148::-;5866:6;5861:3;5856;5843:30;5907:1;5898:6;5893:3;5889:16;5882:27;5768:148;;;:::o;5922:425::-;6000:5;6025:66;6041:49;6083:6;6041:49;:::i;:::-;6025:66;:::i;:::-;6016:75;;6114:6;6107:5;6100:21;6152:4;6145:5;6141:16;6190:3;6181:6;6176:3;6172:16;6169:25;6166:112;;;6197:79;;:::i;:::-;6166:112;6287:54;6334:6;6329:3;6324;6287:54;:::i;:::-;6006:341;5922:425;;;;;:::o;6367:340::-;6423:5;6472:3;6465:4;6457:6;6453:17;6449:27;6439:122;;6480:79;;:::i;:::-;6439:122;6597:6;6584:20;6622:79;6697:3;6689:6;6682:4;6674:6;6670:17;6622:79;:::i;:::-;6613:88;;6429:278;6367:340;;;;:::o;6713:509::-;6782:6;6831:2;6819:9;6810:7;6806:23;6802:32;6799:119;;;6837:79;;:::i;:::-;6799:119;6985:1;6974:9;6970:17;6957:31;7015:18;7007:6;7004:30;7001:117;;;7037:79;;:::i;:::-;7001:117;7142:63;7197:7;7188:6;7177:9;7173:22;7142:63;:::i;:::-;7132:73;;6928:287;6713:509;;;;:::o;7228:60::-;7256:3;7277:5;7270:12;;7228:60;;;:::o;7294:142::-;7344:9;7377:53;7395:34;7404:24;7422:5;7404:24;:::i;:::-;7395:34;:::i;:::-;7377:53;:::i;:::-;7364:66;;7294:142;;;:::o;7442:126::-;7492:9;7525:37;7556:5;7525:37;:::i;:::-;7512:50;;7442:126;;;:::o;7574:147::-;7645:9;7678:37;7709:5;7678:37;:::i;:::-;7665:50;;7574:147;;;:::o;7727:173::-;7835:58;7887:5;7835:58;:::i;:::-;7830:3;7823:71;7727:173;;:::o;7906:264::-;8020:4;8058:2;8047:9;8043:18;8035:26;;8071:92;8160:1;8149:9;8145:17;8136:6;8071:92;:::i;:::-;7906:264;;;;:::o;8176:329::-;8235:6;8284:2;8272:9;8263:7;8259:23;8255:32;8252:119;;;8290:79;;:::i;:::-;8252:119;8410:1;8435:53;8480:7;8471:6;8460:9;8456:22;8435:53;:::i;:::-;8425:63;;8381:117;8176:329;;;;:::o;8511:114::-;8578:6;8612:5;8606:12;8596:22;;8511:114;;;:::o;8631:184::-;8730:11;8764:6;8759:3;8752:19;8804:4;8799:3;8795:14;8780:29;;8631:184;;;;:::o;8821:132::-;8888:4;8911:3;8903:11;;8941:4;8936:3;8932:14;8924:22;;8821:132;;;:::o;8959:108::-;9036:24;9054:5;9036:24;:::i;:::-;9031:3;9024:37;8959:108;;:::o;9073:179::-;9142:10;9163:46;9205:3;9197:6;9163:46;:::i;:::-;9241:4;9236:3;9232:14;9218:28;;9073:179;;;;:::o;9258:113::-;9328:4;9360;9355:3;9351:14;9343:22;;9258:113;;;:::o;9407:732::-;9526:3;9555:54;9603:5;9555:54;:::i;:::-;9625:86;9704:6;9699:3;9625:86;:::i;:::-;9618:93;;9735:56;9785:5;9735:56;:::i;:::-;9814:7;9845:1;9830:284;9855:6;9852:1;9849:13;9830:284;;;9931:6;9925:13;9958:63;10017:3;10002:13;9958:63;:::i;:::-;9951:70;;10044:60;10097:6;10044:60;:::i;:::-;10034:70;;9890:224;9877:1;9874;9870:9;9865:14;;9830:284;;;9834:14;10130:3;10123:10;;9531:608;;;9407:732;;;;:::o;10145:373::-;10288:4;10326:2;10315:9;10311:18;10303:26;;10375:9;10369:4;10365:20;10361:1;10350:9;10346:17;10339:47;10403:108;10506:4;10497:6;10403:108;:::i;:::-;10395:116;;10145:373;;;;:::o;10524:180::-;10572:77;10569:1;10562:88;10669:4;10666:1;10659:15;10693:4;10690:1;10683:15;10710:320;10754:6;10791:1;10785:4;10781:12;10771:22;;10838:1;10832:4;10828:12;10859:18;10849:81;;10915:4;10907:6;10903:17;10893:27;;10849:81;10977:2;10969:6;10966:14;10946:18;10943:38;10940:84;;10996:18;;:::i;:::-;10940:84;10761:269;10710:320;;;:::o;11036:177::-;11176:29;11172:1;11164:6;11160:14;11153:53;11036:177;:::o;11219:366::-;11361:3;11382:67;11446:2;11441:3;11382:67;:::i;:::-;11375:74;;11458:93;11547:3;11458:93;:::i;:::-;11576:2;11571:3;11567:12;11560:19;;11219:366;;;:::o;11591:419::-;11757:4;11795:2;11784:9;11780:18;11772:26;;11844:9;11838:4;11834:20;11830:1;11819:9;11815:17;11808:47;11872:131;11998:4;11872:131;:::i;:::-;11864:139;;11591:419;;;:::o;12016:180::-;12064:77;12061:1;12054:88;12161:4;12158:1;12151:15;12185:4;12182:1;12175:15;12202:223;12342:34;12338:1;12330:6;12326:14;12319:58;12411:6;12406:2;12398:6;12394:15;12387:31;12202:223;:::o;12431:366::-;12573:3;12594:67;12658:2;12653:3;12594:67;:::i;:::-;12587:74;;12670:93;12759:3;12670:93;:::i;:::-;12788:2;12783:3;12779:12;12772:19;;12431:366;;;:::o;12803:419::-;12969:4;13007:2;12996:9;12992:18;12984:26;;13056:9;13050:4;13046:20;13042:1;13031:9;13027:17;13020:47;13084:131;13210:4;13084:131;:::i;:::-;13076:139;;12803:419;;;:::o;13228:172::-;13368:24;13364:1;13356:6;13352:14;13345:48;13228:172;:::o;13406:366::-;13548:3;13569:67;13633:2;13628:3;13569:67;:::i;:::-;13562:74;;13645:93;13734:3;13645:93;:::i;:::-;13763:2;13758:3;13754:12;13747:19;;13406:366;;;:::o;13778:419::-;13944:4;13982:2;13971:9;13967:18;13959:26;;14031:9;14025:4;14021:20;14017:1;14006:9;14002:17;13995:47;14059:131;14185:4;14059:131;:::i;:::-;14051:139;;13778:419;;;:::o;14203:180::-;14251:77;14248:1;14241:88;14348:4;14345:1;14338:15;14372:4;14369:1;14362:15;14389:410;14429:7;14452:20;14470:1;14452:20;:::i;:::-;14447:25;;14486:20;14504:1;14486:20;:::i;:::-;14481:25;;14541:1;14538;14534:9;14563:30;14581:11;14563:30;:::i;:::-;14552:41;;14742:1;14733:7;14729:15;14726:1;14723:22;14703:1;14696:9;14676:83;14653:139;;14772:18;;:::i;:::-;14653:139;14437:362;14389:410;;;;:::o;14805:180::-;14853:77;14850:1;14843:88;14950:4;14947:1;14940:15;14974:4;14971:1;14964:15;14991:185;15031:1;15048:20;15066:1;15048:20;:::i;:::-;15043:25;;15082:20;15100:1;15082:20;:::i;:::-;15077:25;;15121:1;15111:35;;15126:18;;:::i;:::-;15111:35;15168:1;15165;15161:9;15156:14;;14991:185;;;;:::o;15182:194::-;15222:4;15242:20;15260:1;15242:20;:::i;:::-;15237:25;;15276:20;15294:1;15276:20;:::i;:::-;15271:25;;15320:1;15317;15313:9;15305:17;;15344:1;15338:4;15335:11;15332:37;;;15349:18;;:::i;:::-;15332:37;15182:194;;;;:::o;15382:141::-;15431:4;15454:3;15446:11;;15477:3;15474:1;15467:14;15511:4;15508:1;15498:18;15490:26;;15382:141;;;:::o;15529:93::-;15566:6;15613:2;15608;15601:5;15597:14;15593:23;15583:33;;15529:93;;;:::o;15628:107::-;15672:8;15722:5;15716:4;15712:16;15691:37;;15628:107;;;;:::o;15741:393::-;15810:6;15860:1;15848:10;15844:18;15883:97;15913:66;15902:9;15883:97;:::i;:::-;16001:39;16031:8;16020:9;16001:39;:::i;:::-;15989:51;;16073:4;16069:9;16062:5;16058:21;16049:30;;16122:4;16112:8;16108:19;16101:5;16098:30;16088:40;;15817:317;;15741:393;;;;;:::o;16140:142::-;16190:9;16223:53;16241:34;16250:24;16268:5;16250:24;:::i;:::-;16241:34;:::i;:::-;16223:53;:::i;:::-;16210:66;;16140:142;;;:::o;16288:75::-;16331:3;16352:5;16345:12;;16288:75;;;:::o;16369:269::-;16479:39;16510:7;16479:39;:::i;:::-;16540:91;16589:41;16613:16;16589:41;:::i;:::-;16581:6;16574:4;16568:11;16540:91;:::i;:::-;16534:4;16527:105;16445:193;16369:269;;;:::o;16644:73::-;16689:3;16644:73;:::o;16723:189::-;16800:32;;:::i;:::-;16841:65;16899:6;16891;16885:4;16841:65;:::i;:::-;16776:136;16723:189;;:::o;16918:186::-;16978:120;16995:3;16988:5;16985:14;16978:120;;;17049:39;17086:1;17079:5;17049:39;:::i;:::-;17022:1;17015:5;17011:13;17002:22;;16978:120;;;16918:186;;:::o;17110:543::-;17211:2;17206:3;17203:11;17200:446;;;17245:38;17277:5;17245:38;:::i;:::-;17329:29;17347:10;17329:29;:::i;:::-;17319:8;17315:44;17512:2;17500:10;17497:18;17494:49;;;17533:8;17518:23;;17494:49;17556:80;17612:22;17630:3;17612:22;:::i;:::-;17602:8;17598:37;17585:11;17556:80;:::i;:::-;17215:431;;17200:446;17110:543;;;:::o;17659:117::-;17713:8;17763:5;17757:4;17753:16;17732:37;;17659:117;;;;:::o;17782:169::-;17826:6;17859:51;17907:1;17903:6;17895:5;17892:1;17888:13;17859:51;:::i;:::-;17855:56;17940:4;17934;17930:15;17920:25;;17833:118;17782:169;;;;:::o;17956:295::-;18032:4;18178:29;18203:3;18197:4;18178:29;:::i;:::-;18170:37;;18240:3;18237:1;18233:11;18227:4;18224:21;18216:29;;17956:295;;;;:::o;18256:1395::-;18373:37;18406:3;18373:37;:::i;:::-;18475:18;18467:6;18464:30;18461:56;;;18497:18;;:::i;:::-;18461:56;18541:38;18573:4;18567:11;18541:38;:::i;:::-;18626:67;18686:6;18678;18672:4;18626:67;:::i;:::-;18720:1;18744:4;18731:17;;18776:2;18768:6;18765:14;18793:1;18788:618;;;;19450:1;19467:6;19464:77;;;19516:9;19511:3;19507:19;19501:26;19492:35;;19464:77;19567:67;19627:6;19620:5;19567:67;:::i;:::-;19561:4;19554:81;19423:222;18758:887;;18788:618;18840:4;18836:9;18828:6;18824:22;18874:37;18906:4;18874:37;:::i;:::-;18933:1;18947:208;18961:7;18958:1;18955:14;18947:208;;;19040:9;19035:3;19031:19;19025:26;19017:6;19010:42;19091:1;19083:6;19079:14;19069:24;;19138:2;19127:9;19123:18;19110:31;;18984:4;18981:1;18977:12;18972:17;;18947:208;;;19183:6;19174:7;19171:19;19168:179;;;19241:9;19236:3;19232:19;19226:26;19284:48;19326:4;19318:6;19314:17;19303:9;19284:48;:::i;:::-;19276:6;19269:64;19191:156;19168:179;19393:1;19389;19381:6;19377:14;19373:22;19367:4;19360:36;18795:611;;;18758:887;;18348:1303;;;18256:1395;;:::o;19657:313::-;19770:4;19808:2;19797:9;19793:18;19785:26;;19857:9;19851:4;19847:20;19843:1;19832:9;19828:17;19821:47;19885:78;19958:4;19949:6;19885:78;:::i;:::-;19877:86;;19657:313;;;;:::o;19976:442::-;20125:4;20163:2;20152:9;20148:18;20140:26;;20176:71;20244:1;20233:9;20229:17;20220:6;20176:71;:::i;:::-;20257:72;20325:2;20314:9;20310:18;20301:6;20257:72;:::i;:::-;20339;20407:2;20396:9;20392:18;20383:6;20339:72;:::i;:::-;19976:442;;;;;;:::o;20424:90::-;20458:7;20501:5;20494:13;20487:21;20476:32;;20424:90;;;:::o;20520:116::-;20590:21;20605:5;20590:21;:::i;:::-;20583:5;20580:32;20570:60;;20626:1;20623;20616:12;20570:60;20520:116;:::o;20642:137::-;20696:5;20727:6;20721:13;20712:22;;20743:30;20767:5;20743:30;:::i;:::-;20642:137;;;;:::o;20785:345::-;20852:6;20901:2;20889:9;20880:7;20876:23;20872:32;20869:119;;;20907:79;;:::i;:::-;20869:119;21027:1;21052:61;21105:7;21096:6;21085:9;21081:22;21052:61;:::i;:::-;21042:71;;20998:125;20785:345;;;;:::o;21136:98::-;21187:6;21221:5;21215:12;21205:22;;21136:98;;;:::o;21240:147::-;21341:11;21378:3;21363:18;;21240:147;;;;:::o;21393:386::-;21497:3;21525:38;21557:5;21525:38;:::i;:::-;21579:88;21660:6;21655:3;21579:88;:::i;:::-;21572:95;;21676:65;21734:6;21729:3;21722:4;21715:5;21711:16;21676:65;:::i;:::-;21766:6;21761:3;21757:16;21750:23;;21501:278;21393:386;;;;:::o;21785:271::-;21915:3;21937:93;22026:3;22017:6;21937:93;:::i;:::-;21930:100;;22047:3;22040:10;;21785:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1463000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"developerFeePercentage()": "2492",
								"developerWallet()": "2598",
								"getMessageByIndex(uint256)": "infinite",
								"getTotalMessages()": "2508",
								"getUserMessageByIndex(address,uint256)": "infinite",
								"getUserMessageIndexes(address)": "infinite",
								"messageCost()": "2471",
								"messages(uint256)": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"sendMessage(string)": "infinite",
								"setDeveloperFeePercentage(uint256)": "infinite",
								"setMessageCost(uint256)": "infinite",
								"tokenContract()": "infinite",
								"transferOwnership(address)": "infinite",
								"userMessages(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 576,
									"end": 579,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 547,
									"end": 579,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 547,
									"end": 579,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 714,
									"end": 716,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 674,
									"end": 716,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 674,
									"end": 716,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1119,
									"end": 1406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1211,
									"end": 1221,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1277,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1246,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1233,
									"end": 1246,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1233,
									"end": 1278,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1322,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1303,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1288,
									"end": 1303,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1288,
									"end": 1322,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1361,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1350,
									"end": 1360,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1349,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1332,
									"end": 1349,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1332,
									"end": 1349,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1361,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1332,
									"end": 1361,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1361,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1361,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1332,
									"end": 1361,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1406,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2647,
									"end": 2648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2672,
									"end": 2703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2742,
									"end": 2750,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 4408,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bc1b62467bf7ebdbbd3e8351294c8417b698887677a79a73e13210f62d1b3dc64736f6c63430008190033",
									".code": [
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "55A373D6"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "9428CDA3"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "9428CDA3"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "AD039FAD"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "AFACE8CD"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "55A373D6"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "7862F04C"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "2024C1B7"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "2024C1B7"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "36913A40"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "38DAEFB6"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "469C8110"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "D80FEFD"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "1293092E"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "147E9108"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "185870F9"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 377,
											"end": 4408,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 547,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 547,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3162,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 3162,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 511,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 511,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3305,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3305,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3305,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3961,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3961,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3961,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1861,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1861,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2278,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2278,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 471,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 471,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1478,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 674,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 674,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 926,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 926,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 926,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3726,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3726,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3726,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1757,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1757,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 895,
											"end": 920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 579,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 547,
											"end": 579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3211,
											"end": 3218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3245,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3230,
											"end": 3252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3230,
											"end": 3252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 511,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3445,
											"end": 3462,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3502,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3509,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3478,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3617,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3610,
											"end": 3624,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3633,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3660,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3643,
											"end": 3660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3660,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3602,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3602,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4087,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4157,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4170,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4170,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4142,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4170,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 4116,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4116,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4288,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 4264,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4299,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4333,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4334,
											"end": 4345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 4325,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4381,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4381,
											"end": 4398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4381,
											"end": 4398,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4356,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4356,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1969,
											"end": 1983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1990,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1990,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1961,
											"end": 2017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1961,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2066,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2027,
											"end": 2066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2066,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2066,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1861,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2391,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2391,
											"end": 2413,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2388,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2377,
											"end": 2413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2377,
											"end": 2413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2376,
											"end": 2420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2376,
											"end": 2420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2462,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2451,
											"end": 2477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2451,
											"end": 2477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2532,
											"end": 2542,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2556,
											"end": 2571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2585,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2488,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2488,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2648,
											"end": 2658,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2668,
											"end": 2672,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2617,
											"end": 2647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2617,
											"end": 2686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "42966C68"
										},
										{
											"begin": 2715,
											"end": 2725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2696,
											"end": 2726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2769,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2796,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2737,
											"end": 2798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2831,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2832,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2838,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2838,
											"end": 2857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "69E27F80547602D16208B028C44D20F25956E1FB7D0F51D62AA02F392426F371"
										},
										{
											"begin": 2882,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2874,
											"end": 2895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2895,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7"
										},
										{
											"begin": 2923,
											"end": 2933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2910,
											"end": 2934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 2971,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D7FCCDA06D6EB51C23CBD16D49B9B3F3EBAFB002DBA1B074895CBB35D0E8130"
										},
										{
											"begin": 2973,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2949,
											"end": 2982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2982,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2343,
											"end": 2989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2343,
											"end": 2989,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 471,
											"end": 505,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 471,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1478,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 716,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 674,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 926,
											"end": 975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3806,
											"end": 3822,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3858,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1848,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 1848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1482,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 1383,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1646,
											"end": 1650,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1802,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 1663,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 1745,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1782,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1768,
											"end": 1795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1896,
											"end": 1903,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1904,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2032,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2146,
											"end": 2149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2087,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2158,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2087,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2158,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2080,
											"end": 2158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 2225,
											"end": 2231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 2167,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2232,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 2167,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 2257,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2286,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2257,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 2255,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2287,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2417,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2299,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2386,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2410,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2386,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2643,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2751,
											"end": 2771,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 2772,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 2789,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2867,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2789,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2877,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3070,
											"end": 3096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 3106,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3106,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3387,
											"end": 3404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3334,
											"end": 3405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3405,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3334,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3540,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3418,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3491,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3516,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3471,
											"end": 3534,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3534,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3471,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3637,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3673,
											"end": 3678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 3646,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3802,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3814,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3819,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 3903,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3784,
											"end": 3903,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3822,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3822,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3822,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3822,
											"end": 3901,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3822,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3784,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3784,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4012,
											"end": 4019,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3992,
											"end": 4001,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3988,
											"end": 4010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3967,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 4020,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3967,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 4030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 4140,
											"end": 4147,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4129,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4095,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4148,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 4095,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4352,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4389,
											"end": 4409,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4370,
											"end": 4387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4410,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4427,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4427,
											"end": 4505,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4427,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4581,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4568,
											"end": 4586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4515,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4587,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4515,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4717,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 4600,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4707,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4711,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 4723,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4830,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4846,
											"end": 5026,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 4846,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4971,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4891,
											"end": 4892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4981,
											"end": 4996,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5020,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5032,
											"end": 5313,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5032,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 5115,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5115,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5113,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5103,
											"end": 5143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5245,
											"end": 5251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5252,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5228,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5191,
											"end": 5253,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5276,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5188,
											"end": 5276,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 5256,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5276,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5188,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5032,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5032,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5032,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5448,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 5319,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5380,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5409,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5442,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5409,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5762,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5454,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5595,
											"end": 5625,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5648,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5592,
											"end": 5648,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 5628,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5648,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5592,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5688,
											"end": 5694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 5666,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5695,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5666,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 5695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5748,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 5755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5916,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 5768,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5861,
											"end": 5864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5873,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5889,
											"end": 5905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6041,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6041,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6041,
											"end": 6090,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6041,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 6025,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6091,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6025,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6016,
											"end": 6091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6016,
											"end": 6091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6107,
											"end": 6112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6121,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6152,
											"end": 6156,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6145,
											"end": 6150,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6141,
											"end": 6157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6181,
											"end": 6187,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6176,
											"end": 6179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6169,
											"end": 6194,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6278,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6166,
											"end": 6278,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6197,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6197,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 6197,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6197,
											"end": 6276,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6197,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6278,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6166,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6287,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6332,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6327,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6287,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 6287,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6287,
											"end": 6341,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6287,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6006,
											"end": 6347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 6347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6423,
											"end": 6428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6457,
											"end": 6463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6453,
											"end": 6470,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6476,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6439,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6439,
											"end": 6561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 6480,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6480,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6439,
											"end": 6561,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6439,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6697,
											"end": 6700,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 6622,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6701,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6622,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6833,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 6829,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6802,
											"end": 6834,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6837,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 6986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6957,
											"end": 6988,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7004,
											"end": 7034,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7118,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 7001,
											"end": 7118,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7037,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7037,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7118,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 7001,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7197,
											"end": 7204,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7186,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7173,
											"end": 7195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7142,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7132,
											"end": 7205,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7132,
											"end": 7205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6928,
											"end": 7215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 7222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7288,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7228,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7270,
											"end": 7282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7270,
											"end": 7282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7436,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 7294,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7344,
											"end": 7353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7395,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7422,
											"end": 7427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7404,
											"end": 7428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7395,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7429,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7395,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7377,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7364,
											"end": 7430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7364,
											"end": 7430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7436,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7568,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 7442,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7556,
											"end": 7561,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 7525,
											"end": 7562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7562,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 7525,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7721,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 7574,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 7709,
											"end": 7714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 7678,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7715,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 7678,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7665,
											"end": 7715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7665,
											"end": 7715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7574,
											"end": 7721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7900,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 7727,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 7835,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7893,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7835,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7830,
											"end": 7833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8024,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8060,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8047,
											"end": 8056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8061,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8071,
											"end": 8163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8163,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 8071,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 8170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8235,
											"end": 8241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8272,
											"end": 8281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8270,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8282,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8255,
											"end": 8287,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8252,
											"end": 8371,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8252,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8252,
											"end": 8371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8290,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 8290,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 8290,
											"end": 8369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8290,
											"end": 8369,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 8290,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8252,
											"end": 8371,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8252,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8480,
											"end": 8487,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8469,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 8478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8435,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 8435,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8435,
											"end": 8488,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8435,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8176,
											"end": 8505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8625,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8511,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8617,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8618,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8596,
											"end": 8618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8730,
											"end": 8741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8752,
											"end": 8771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 8808,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8799,
											"end": 8802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 8809,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 8809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8953,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 8821,
											"end": 8953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8888,
											"end": 8892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 8914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 8914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8941,
											"end": 8945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8936,
											"end": 8939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8932,
											"end": 8946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9067,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 8959,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 9036,
											"end": 9060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9036,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9061,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9142,
											"end": 9152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9205,
											"end": 9208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9197,
											"end": 9203,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9163,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9209,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9163,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9241,
											"end": 9245,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9246,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9371,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 9258,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9332,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9364,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9365,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9343,
											"end": 9365,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9343,
											"end": 9365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9371,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 9603,
											"end": 9608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 9555,
											"end": 9609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9609,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 9555,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9704,
											"end": 9710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9699,
											"end": 9702,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 9625,
											"end": 9711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9711,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9625,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 9785,
											"end": 9790,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 9735,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9791,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 9735,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9852,
											"end": 9853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 9862,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 9938,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10017,
											"end": 10020,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9958,
											"end": 10021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10021,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 9958,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10021,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 10044,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 10044,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 10114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 9879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9830,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9834,
											"end": 9848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10133,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10133,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9531,
											"end": 10139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9531,
											"end": 10139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9531,
											"end": 10139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 10139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10311,
											"end": 10329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10375,
											"end": 10384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10385,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10361,
											"end": 10362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10403,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 10506,
											"end": 10510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10403,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 10403,
											"end": 10511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10403,
											"end": 10511,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 10403,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10704,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 10524,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10649,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10569,
											"end": 10570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10669,
											"end": 10673,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10659,
											"end": 10674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10693,
											"end": 10697,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 11030,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 10710,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10754,
											"end": 10760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10785,
											"end": 10789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10793,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10771,
											"end": 10793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10771,
											"end": 10793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10832,
											"end": 10836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10877,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10915,
											"end": 10919,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10907,
											"end": 10913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10903,
											"end": 10920,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 10849,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10977,
											"end": 10979,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10969,
											"end": 10975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 10980,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10981,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10940,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 10940,
											"end": 11024,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 10996,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10940,
											"end": 11024,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 10940,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 11030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 11030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 11030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 11030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10710,
											"end": 11030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11213,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 11036,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11176,
											"end": 11205,
											"name": "PUSH",
											"source": 12,
											"value": "4D65737361676520696E646578206F7574206F6620626F756E64730000000000"
										},
										{
											"begin": 11172,
											"end": 11173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11160,
											"end": 11174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11153,
											"end": 11206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11585,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11219,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11361,
											"end": 11364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11446,
											"end": 11448,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 11441,
											"end": 11444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11382,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 11382,
											"end": 11449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11382,
											"end": 11449,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11382,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11458,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11458,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 11458,
											"end": 11551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11458,
											"end": 11551,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 11458,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11571,
											"end": 11574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11567,
											"end": 11579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 12010,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 11591,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11757,
											"end": 11761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11795,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11784,
											"end": 11793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11772,
											"end": 11798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11772,
											"end": 11798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11838,
											"end": 11842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11834,
											"end": 11854,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11819,
											"end": 11828,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11815,
											"end": 11832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11808,
											"end": 11855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11872,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11998,
											"end": 12002,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11872,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11872,
											"end": 12003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11872,
											"end": 12003,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11872,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11864,
											"end": 12003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 12010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 12010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 12010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 12010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12196,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 12016,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12061,
											"end": 12062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12054,
											"end": 12142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12165,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12151,
											"end": 12166,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12175,
											"end": 12190,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12425,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 12202,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12376,
											"name": "PUSH",
											"source": 12,
											"value": "4D65737361676520696E646578206F7574206F6620626F756E647320666F7220"
										},
										{
											"begin": 12338,
											"end": 12339,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12336,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12326,
											"end": 12340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12319,
											"end": 12377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12417,
											"name": "PUSH",
											"source": 12,
											"value": "7573657200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12408,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12398,
											"end": 12404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12394,
											"end": 12409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12653,
											"end": 12656,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 12594,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 12759,
											"end": 12762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 12670,
											"end": 12763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12779,
											"end": 12791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12969,
											"end": 12973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13007,
											"end": 13009,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12996,
											"end": 13005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 13010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13046,
											"end": 13066,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13027,
											"end": 13044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 13210,
											"end": 13214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 13084,
											"end": 13215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13076,
											"end": 13215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13076,
											"end": 13215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 13222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13228,
											"end": 13400,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 13228,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13368,
											"end": 13392,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964206665652070657263656E7461676500000000000000000000"
										},
										{
											"begin": 13364,
											"end": 13365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13352,
											"end": 13366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13345,
											"end": 13393,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13228,
											"end": 13400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13228,
											"end": 13400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13772,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 13406,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13548,
											"end": 13551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 13633,
											"end": 13635,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 13628,
											"end": 13631,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13569,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13569,
											"end": 13636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13569,
											"end": 13636,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 13569,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13645,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13645,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 13645,
											"end": 13738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13645,
											"end": 13738,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 13645,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13758,
											"end": 13761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13747,
											"end": 13766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13747,
											"end": 13766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 14197,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 13778,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13944,
											"end": 13948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13971,
											"end": 13980,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14031,
											"end": 14040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14025,
											"end": 14029,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14021,
											"end": 14041,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14006,
											"end": 14015,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14002,
											"end": 14019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13995,
											"end": 14042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 14185,
											"end": 14189,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 14059,
											"end": 14190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14190,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 14059,
											"end": 14190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 14197,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 14197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 14197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13778,
											"end": 14197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14203,
											"end": 14383,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 14203,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14251,
											"end": 14328,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14248,
											"end": 14249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14241,
											"end": 14329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14352,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 14345,
											"end": 14346,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14338,
											"end": 14353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14376,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14369,
											"end": 14370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14377,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14429,
											"end": 14436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 14470,
											"end": 14471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14452,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 14452,
											"end": 14472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14452,
											"end": 14472,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 14452,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14447,
											"end": 14472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14447,
											"end": 14472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14486,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 14504,
											"end": 14505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14486,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 14486,
											"end": 14506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14486,
											"end": 14506,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 14486,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14481,
											"end": 14506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14481,
											"end": 14506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14534,
											"end": 14543,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 14581,
											"end": 14592,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 14563,
											"end": 14593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14593,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 14563,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14552,
											"end": 14593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14552,
											"end": 14593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14742,
											"end": 14743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14733,
											"end": 14740,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14729,
											"end": 14744,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14726,
											"end": 14727,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14723,
											"end": 14745,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 14704,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14696,
											"end": 14705,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14676,
											"end": 14759,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14653,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 14653,
											"end": 14792,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 14772,
											"end": 14790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 14772,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14653,
											"end": 14792,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 14653,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14437,
											"end": 14799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14389,
											"end": 14799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14805,
											"end": 14985,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 14805,
											"end": 14985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14930,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14850,
											"end": 14851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14950,
											"end": 14954,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14947,
											"end": 14948,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14940,
											"end": 14955,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14974,
											"end": 14978,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14971,
											"end": 14972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14964,
											"end": 14979,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15048,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15048,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 15048,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15048,
											"end": 15068,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15048,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 15082,
											"end": 15102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15102,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 15082,
											"end": 15102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15077,
											"end": 15102,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15077,
											"end": 15102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 15111,
											"end": 15146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 15126,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15146,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 15111,
											"end": 15146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15168,
											"end": 15169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15165,
											"end": 15166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15156,
											"end": 15170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15156,
											"end": 15170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15222,
											"end": 15226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 15260,
											"end": 15261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15242,
											"end": 15262,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 15242,
											"end": 15262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15242,
											"end": 15262,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 15242,
											"end": 15262,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15262,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 15294,
											"end": 15295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 15276,
											"end": 15296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15296,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15313,
											"end": 15322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15305,
											"end": 15322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15305,
											"end": 15322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15338,
											"end": 15342,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15335,
											"end": 15346,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15369,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 15332,
											"end": 15369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15349,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15349,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 15349,
											"end": 15367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15349,
											"end": 15367,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15349,
											"end": 15367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15369,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 15332,
											"end": 15369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15182,
											"end": 15376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15523,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 15382,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15431,
											"end": 15435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15454,
											"end": 15457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15446,
											"end": 15457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15446,
											"end": 15457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15474,
											"end": 15475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15511,
											"end": 15515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15508,
											"end": 15509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15490,
											"end": 15516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15490,
											"end": 15516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15523,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15622,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 15529,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15566,
											"end": 15572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15613,
											"end": 15615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15608,
											"end": 15610,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15601,
											"end": 15606,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15593,
											"end": 15616,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15622,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15680,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15716,
											"end": 15720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15712,
											"end": 15728,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 15728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 15728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15628,
											"end": 15735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15861,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 15848,
											"end": 15858,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15862,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 15913,
											"end": 15979,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15902,
											"end": 15911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 15883,
											"end": 15980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15980,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 15883,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 16031,
											"end": 16039,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16020,
											"end": 16029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 16001,
											"end": 16040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16040,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 16001,
											"end": 16040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15989,
											"end": 16040,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15989,
											"end": 16040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16073,
											"end": 16077,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16078,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 16062,
											"end": 16067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16058,
											"end": 16079,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16079,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16122,
											"end": 16126,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16112,
											"end": 16120,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16101,
											"end": 16106,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16098,
											"end": 16128,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 16088,
											"end": 16128,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16088,
											"end": 16128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15817,
											"end": 16134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15817,
											"end": 16134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15741,
											"end": 16134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16282,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 16140,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16190,
											"end": 16199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16241,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16250,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 16268,
											"end": 16273,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16250,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 16250,
											"end": 16274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16250,
											"end": 16274,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 16250,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16241,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 16241,
											"end": 16275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16241,
											"end": 16275,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16241,
											"end": 16275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16223,
											"end": 16276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 16223,
											"end": 16276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16223,
											"end": 16276,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16223,
											"end": 16276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16210,
											"end": 16276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16210,
											"end": 16276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16363,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 16288,
											"end": 16363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16331,
											"end": 16334,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16369,
											"end": 16638,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 16369,
											"end": 16638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16479,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16510,
											"end": 16517,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16479,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 16479,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16479,
											"end": 16518,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16479,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16589,
											"end": 16630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 16613,
											"end": 16629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16589,
											"end": 16630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 16589,
											"end": 16630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16589,
											"end": 16630,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 16589,
											"end": 16630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16587,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16568,
											"end": 16579,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 16540,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16631,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16540,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16534,
											"end": 16538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16527,
											"end": 16632,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16445,
											"end": 16638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16369,
											"end": 16638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16369,
											"end": 16638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16369,
											"end": 16638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16369,
											"end": 16638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16644,
											"end": 16717,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 16644,
											"end": 16717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16644,
											"end": 16717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16644,
											"end": 16717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16912,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 16723,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16800,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 16800,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 16800,
											"end": 16832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16800,
											"end": 16832,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 16800,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16891,
											"end": 16897,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16885,
											"end": 16889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 16841,
											"end": 16906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16776,
											"end": 16912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17104,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 16918,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16995,
											"end": 16998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16988,
											"end": 16993,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16985,
											"end": 16999,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17049,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17086,
											"end": 17087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17049,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 17049,
											"end": 17088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17049,
											"end": 17088,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17049,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17022,
											"end": 17023,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17015,
											"end": 17020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17002,
											"end": 17024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17002,
											"end": 17024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 16978,
											"end": 17098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16918,
											"end": 17104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17653,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 17110,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17213,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17206,
											"end": 17209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17203,
											"end": 17214,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17646,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 17200,
											"end": 17646,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17245,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 17277,
											"end": 17282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17245,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 17245,
											"end": 17283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17245,
											"end": 17283,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 17245,
											"end": 17283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17329,
											"end": 17358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 17347,
											"end": 17357,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17329,
											"end": 17358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 17329,
											"end": 17358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17329,
											"end": 17358,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 17329,
											"end": 17358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17315,
											"end": 17359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17512,
											"end": 17514,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17500,
											"end": 17510,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17497,
											"end": 17515,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17543,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 17494,
											"end": 17543,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17533,
											"end": 17541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17518,
											"end": 17541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17518,
											"end": 17541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17494,
											"end": 17543,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 17494,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17556,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 17612,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 17630,
											"end": 17633,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 17612,
											"end": 17634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17634,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 17612,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17602,
											"end": 17610,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17556,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 17556,
											"end": 17636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17556,
											"end": 17636,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 17556,
											"end": 17636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17215,
											"end": 17646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17646,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 17200,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17763,
											"end": 17768,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17753,
											"end": 17769,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 17732,
											"end": 17769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17732,
											"end": 17769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17826,
											"end": 17832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17859,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 17907,
											"end": 17908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17903,
											"end": 17909,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17895,
											"end": 17900,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17892,
											"end": 17893,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 17888,
											"end": 17901,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17859,
											"end": 17910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 17859,
											"end": 17910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17859,
											"end": 17910,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 17859,
											"end": 17910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17855,
											"end": 17911,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17940,
											"end": 17944,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17934,
											"end": 17938,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17930,
											"end": 17945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17920,
											"end": 17945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17920,
											"end": 17945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17833,
											"end": 17951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18032,
											"end": 18036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18178,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 18203,
											"end": 18206,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18197,
											"end": 18201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 18178,
											"end": 18207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18207,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 18178,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18170,
											"end": 18207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18170,
											"end": 18207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18240,
											"end": 18243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18237,
											"end": 18238,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 18233,
											"end": 18244,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18227,
											"end": 18231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18224,
											"end": 18245,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 18216,
											"end": 18245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18216,
											"end": 18245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 19651,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 18256,
											"end": 19651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18406,
											"end": 18409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 18373,
											"end": 18410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18410,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18373,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18475,
											"end": 18493,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18467,
											"end": 18473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18494,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18461,
											"end": 18517,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18461,
											"end": 18517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 18461,
											"end": 18517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 18497,
											"end": 18515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18461,
											"end": 18517,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 18461,
											"end": 18517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18541,
											"end": 18579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 18573,
											"end": 18577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18567,
											"end": 18578,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18541,
											"end": 18579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 18541,
											"end": 18579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18541,
											"end": 18579,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 18541,
											"end": 18579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 18686,
											"end": 18692,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18678,
											"end": 18684,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18672,
											"end": 18676,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 18626,
											"end": 18693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18720,
											"end": 18721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18744,
											"end": 18748,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18731,
											"end": 18748,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18731,
											"end": 18748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18776,
											"end": 18778,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18768,
											"end": 18774,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 18794,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19450,
											"end": 19451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19467,
											"end": 19473,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19464,
											"end": 19541,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19464,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19464,
											"end": 19541,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19516,
											"end": 19525,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19511,
											"end": 19514,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19501,
											"end": 19527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19492,
											"end": 19527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19492,
											"end": 19527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19464,
											"end": 19541,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 19464,
											"end": 19541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19567,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 19627,
											"end": 19633,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19620,
											"end": 19625,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19567,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 19567,
											"end": 19634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19567,
											"end": 19634,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 19567,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19561,
											"end": 19565,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19554,
											"end": 19635,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19423,
											"end": 19645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18758,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 18758,
											"end": 19645,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 18788,
											"end": 19406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18844,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18836,
											"end": 18845,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 18828,
											"end": 18834,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18824,
											"end": 18846,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18874,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 18906,
											"end": 18910,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18874,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 18874,
											"end": 18911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18874,
											"end": 18911,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 18874,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18933,
											"end": 18934,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18961,
											"end": 18968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 18969,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19040,
											"end": 19049,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19038,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19031,
											"end": 19050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19025,
											"end": 19051,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19017,
											"end": 19023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19010,
											"end": 19052,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19091,
											"end": 19092,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19083,
											"end": 19089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19079,
											"end": 19093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19069,
											"end": 19093,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19069,
											"end": 19093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19138,
											"end": 19140,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19127,
											"end": 19136,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19110,
											"end": 19141,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19110,
											"end": 19141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18984,
											"end": 18988,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18981,
											"end": 18982,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18977,
											"end": 18989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 18989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 18947,
											"end": 19155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19183,
											"end": 19189,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19174,
											"end": 19181,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19171,
											"end": 19190,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19168,
											"end": 19347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19168,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 19168,
											"end": 19347,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19241,
											"end": 19250,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19239,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19232,
											"end": 19251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19226,
											"end": 19252,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 19326,
											"end": 19330,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19318,
											"end": 19324,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19314,
											"end": 19331,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19303,
											"end": 19312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 19284,
											"end": 19332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19332,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 19284,
											"end": 19332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19276,
											"end": 19282,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19269,
											"end": 19333,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19191,
											"end": 19347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19168,
											"end": 19347,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 19168,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19393,
											"end": 19394,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19389,
											"end": 19390,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 19381,
											"end": 19387,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19377,
											"end": 19391,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19373,
											"end": 19395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19367,
											"end": 19371,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19360,
											"end": 19396,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18795,
											"end": 19406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18795,
											"end": 19406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18795,
											"end": 19406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18758,
											"end": 19645,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 18758,
											"end": 19645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18758,
											"end": 19645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18348,
											"end": 19651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18348,
											"end": 19651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18348,
											"end": 19651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 19651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 19651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 19651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19770,
											"end": 19774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19797,
											"end": 19806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19785,
											"end": 19811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19785,
											"end": 19811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19857,
											"end": 19866,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19851,
											"end": 19855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19867,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19832,
											"end": 19841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19828,
											"end": 19845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19821,
											"end": 19868,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19885,
											"end": 19963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 19958,
											"end": 19962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 19955,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19885,
											"end": 19963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 19885,
											"end": 19963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19885,
											"end": 19963,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 19885,
											"end": 19963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19877,
											"end": 19963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19877,
											"end": 19963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19657,
											"end": 19970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20125,
											"end": 20129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20163,
											"end": 20165,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20152,
											"end": 20161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20148,
											"end": 20166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20140,
											"end": 20166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20140,
											"end": 20166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20176,
											"end": 20247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 20244,
											"end": 20245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20233,
											"end": 20242,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20229,
											"end": 20246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20220,
											"end": 20226,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20176,
											"end": 20247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 20176,
											"end": 20247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20176,
											"end": 20247,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 20176,
											"end": 20247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20257,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 20325,
											"end": 20327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20314,
											"end": 20323,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20310,
											"end": 20328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20301,
											"end": 20307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20257,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 20257,
											"end": 20329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20257,
											"end": 20329,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 20257,
											"end": 20329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20339,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 20407,
											"end": 20409,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20396,
											"end": 20405,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20392,
											"end": 20410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20383,
											"end": 20389,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20339,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 20339,
											"end": 20411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20339,
											"end": 20411,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 20339,
											"end": 20411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20514,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 20424,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20458,
											"end": 20465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20501,
											"end": 20506,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20494,
											"end": 20507,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20487,
											"end": 20508,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20476,
											"end": 20508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20476,
											"end": 20508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20520,
											"end": 20636,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 20520,
											"end": 20636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 20605,
											"end": 20610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 20590,
											"end": 20611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20611,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 20590,
											"end": 20611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20583,
											"end": 20588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20580,
											"end": 20612,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 20570,
											"end": 20630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 20570,
											"end": 20630,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20626,
											"end": 20627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20623,
											"end": 20624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20616,
											"end": 20628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 20570,
											"end": 20630,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 20570,
											"end": 20630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20520,
											"end": 20636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20520,
											"end": 20636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20696,
											"end": 20701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20727,
											"end": 20733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20721,
											"end": 20734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20712,
											"end": 20734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 20767,
											"end": 20772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 20743,
											"end": 20773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20773,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 20743,
											"end": 20773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20852,
											"end": 20858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20901,
											"end": 20903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20889,
											"end": 20898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20880,
											"end": 20887,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20876,
											"end": 20899,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20872,
											"end": 20904,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 20869,
											"end": 20988,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20869,
											"end": 20988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 20869,
											"end": 20988,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20907,
											"end": 20986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 20907,
											"end": 20986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 20907,
											"end": 20986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20907,
											"end": 20986,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 20907,
											"end": 20986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20869,
											"end": 20988,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 20869,
											"end": 20988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21027,
											"end": 21028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21052,
											"end": 21113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 21105,
											"end": 21112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21096,
											"end": 21102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21085,
											"end": 21094,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21081,
											"end": 21103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 21052,
											"end": 21113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21113,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 21052,
											"end": 21113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21042,
											"end": 21113,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21042,
											"end": 21113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20998,
											"end": 21123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20785,
											"end": 21130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21136,
											"end": 21234,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 21136,
											"end": 21234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21187,
											"end": 21193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21221,
											"end": 21226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21215,
											"end": 21227,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21205,
											"end": 21227,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21205,
											"end": 21227,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21136,
											"end": 21234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21136,
											"end": 21234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21136,
											"end": 21234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21136,
											"end": 21234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21341,
											"end": 21352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21378,
											"end": 21381,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21240,
											"end": 21387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21497,
											"end": 21500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21525,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 21557,
											"end": 21562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21525,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 21525,
											"end": 21563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21525,
											"end": 21563,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 21525,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21579,
											"end": 21667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 21660,
											"end": 21666,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21655,
											"end": 21658,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21579,
											"end": 21667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 21579,
											"end": 21667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21579,
											"end": 21667,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 21579,
											"end": 21667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21572,
											"end": 21667,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21572,
											"end": 21667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21676,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 21734,
											"end": 21740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21729,
											"end": 21732,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21722,
											"end": 21726,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21715,
											"end": 21720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21711,
											"end": 21727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21676,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 21676,
											"end": 21741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21676,
											"end": 21741,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 21676,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21766,
											"end": 21772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21761,
											"end": 21764,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21757,
											"end": 21773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21750,
											"end": 21773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21750,
											"end": 21773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21915,
											"end": 21918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21937,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 22026,
											"end": 22029,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22017,
											"end": 22023,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21937,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 21937,
											"end": 22030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21937,
											"end": 22030,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 21937,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21930,
											"end": 22030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21930,
											"end": 22030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22047,
											"end": 22050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22040,
											"end": 22050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22040,
											"end": 22050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21785,
											"end": 22056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/GlobalChat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"developerFeePercentage()": "7862f04c",
							"developerWallet()": "185870f9",
							"getMessageByIndex(uint256)": "2024c1b7",
							"getTotalMessages()": "147e9108",
							"getUserMessageByIndex(address,uint256)": "36913a40",
							"getUserMessageIndexes(address)": "ad039fad",
							"messageCost()": "1293092e",
							"messages(uint256)": "0d80fefd",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sendMessage(string)": "469c8110",
							"setDeveloperFeePercentage(uint256)": "38daefb6",
							"setMessageCost(uint256)": "aface8cd",
							"tokenContract()": "55a373d6",
							"transferOwnership(address)": "f2fde38b",
							"userMessages(address,uint256)": "9428cda3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developerWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"developerFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getMessageByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserMessageByIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserMessageIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPercentage\",\"type\":\"uint256\"}],\"name\":\"setDeveloperFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newCost\",\"type\":\"uint256\"}],\"name\":\"setMessageCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract ERC20Burnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GlobalChat.sol\":\"GlobalChat\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/GlobalChat.sol\":{\"keccak256\":\"0x2c24f6815948b344e8917ae327079fb65f9a00239c443c2df606b59698816ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6762aedfa694c8719f7364750c5a351139f4578892ea730a14463a0cbbdf23b\",\"dweb:/ipfs/QmQh3c9AsSYS1T49jPijvyhafiF992id2YoKBFAW9m7jkQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1569,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1645,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "tokenContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ERC20Burnable)923"
							},
							{
								"astId": 1647,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "developerWallet",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1650,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "messageCost",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1653,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "developerFeePercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1664,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "messages",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Message)1660_storage)dyn_storage"
							},
							{
								"astId": 1669,
								"contract": "contracts/GlobalChat.sol:GlobalChat",
								"label": "userMessages",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Message)1660_storage)dyn_storage": {
								"base": "t_struct(Message)1660_storage",
								"encoding": "dynamic_array",
								"label": "struct GlobalChat.Message[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(ERC20Burnable)923": {
								"encoding": "inplace",
								"label": "contract ERC20Burnable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Message)1660_storage": {
								"encoding": "inplace",
								"label": "struct GlobalChat.Message",
								"members": [
									{
										"astId": 1655,
										"contract": "contracts/GlobalChat.sol:GlobalChat",
										"label": "sender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1657,
										"contract": "contracts/GlobalChat.sol:GlobalChat",
										"label": "content",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1659,
										"contract": "contracts/GlobalChat.sol:GlobalChat",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1559,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1558
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1559,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								1558
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 1559,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								1558
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 962,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 985,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 985,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 981,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 985,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1528
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							985
						],
						"SafeERC20": [
							1275
						]
					},
					"id": 1276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 878,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 986,
							"src": "179:60:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 990,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "187:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 1529,
							"src": "240:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 992,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1528,
										"src": "248:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1275,
							"linearizedBaseContracts": [
								1275
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 997,
									"libraryName": {
										"id": 995,
										"name": "Address",
										"nameLocations": [
											"781:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "781:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:7",
									"typeName": {
										"id": 996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:7",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1002,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "907:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:7"
									},
									"src": "876:46:7"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1011,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1043:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1060:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1086:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:7"
									},
									"src": "1004:109:7"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "1375:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "1405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1026,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "1427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "1427:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1028,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "1444:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1029,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1448:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1024,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1022,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1385:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:7"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1325:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1325:6:7"
													},
													"referencedDeclaration": 877,
													"src": "1325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1339:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1351:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:7"
									},
									"scope": 1275,
									"src": "1303:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "1792:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1052,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "1844:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "1844:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1054,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1041,
																			"src": "1865:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1055,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "1871:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1056,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "1875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1057,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1050,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1048,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1802:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:7"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1728:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1037,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1728:6:7"
													},
													"referencedDeclaration": 877,
													"src": "1728:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1742:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1756:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1768:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:7"
									},
									"scope": 1275,
									"src": "1702:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2167:139:7",
										"statements": [
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2177:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1079,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1275",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1275",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2231:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2200:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2200:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2262:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1086,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2269:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2278:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1088,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2293:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "2249:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:7"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2112:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2112:6:7"
													},
													"referencedDeclaration": 877,
													"src": "2112:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2143:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:7"
									},
									"scope": 1275,
									"src": "2081:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2607:370:7",
										"statements": [
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:7",
												"statements": [
													{
														"assignments": [
															1105
														],
														"declarations": [
															{
																"constant": false,
																"id": 1105,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 1134,
																"src": "2641:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1114,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1110,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1275",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1275",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1108,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1112,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "2699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1106,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2668:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "2668:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "2725:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1116,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2744:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1125,
														"nodeType": "IfStatement",
														"src": "2721:160:7",
														"trueBody": {
															"id": 1124,
															"nodeType": "Block",
															"src": "2763:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1119,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "2821:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1120,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "2830:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1121,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "2848:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1118,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "2788:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1123,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1127,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2907:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1128,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "2914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1129,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "2923:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1130,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "2942:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2894:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1133,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1095,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2540:6:7"
													},
													"referencedDeclaration": 877,
													"src": "2540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2554:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2571:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:7"
									},
									"scope": 1275,
									"src": "2509:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "3373:303:7",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "3383:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1147,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1151,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "3426:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3426:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1153,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "3442:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "3451:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1149,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:7"
											},
											{
												"condition": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1159,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "3498:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1160,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3505:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1158,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3474:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "3469:201:7",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "3520:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1164,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3554:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1167,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "3576:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "3576:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1169,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1142,
																						"src": "3592:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1170,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1171,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1165,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1163,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3534:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3639:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "3646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1175,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1138,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3318:6:7"
													},
													"referencedDeclaration": 877,
													"src": "3318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3349:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:7"
									},
									"scope": 1275,
									"src": "3296:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "4129:559:7",
										"statements": [
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4478:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4532:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "4512:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:7",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1349,
														"src": "4504:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1202,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "4551:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1208,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "4589:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1209,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1211,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:7",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "4547:135:7",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "4610:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1218,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "4664:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1216,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1215,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "4631:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "4624:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1185,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4088:6:7"
													},
													"referencedDeclaration": 877,
													"src": "4088:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4102:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:7"
									},
									"scope": 1275,
									"src": "4059:629:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "5278:489:7",
										"statements": [
											{
												"assignments": [
													1237,
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1273,
														"src": "5574:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1236,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1273,
														"src": "5588:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1238,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"id": 1245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "5635:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1242,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "5623:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:7",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1248,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1249,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "5669:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:7",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1255,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "5706:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1256,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1258,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1253,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:7",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1261,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1265,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "5738:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1263,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1272,
												"nodeType": "Return",
												"src": "5650:110:7"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5222:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1227,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5222:6:7"
													},
													"referencedDeclaration": 877,
													"src": "5222:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5236:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5272:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:7"
									},
									"scope": 1275,
									"src": "5189:578:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1276,
							"src": "751:5018:7",
							"usedErrors": [
								1002,
								1011
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1528
						]
					},
					"id": 1529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1278,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1528,
							"linearizedBaseContracts": [
								1528
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1283,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1288,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1291,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1304,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1313,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1309,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1307,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1306,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1312,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1316,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1315,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1323,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1317,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1319,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1324,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1326,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1528,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1342,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1347,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1528,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1366,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1371,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1369,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1368,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1378,
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1381,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1383,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1391,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1388,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1393,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1528,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1406,
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1420,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1420,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1407,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1409,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1417,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1414,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1404,
												"id": 1419,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1528,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1432,
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1433,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"arguments": [
														{
															"id": 1437,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1435,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1443,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1440,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1445,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1528,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1459,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1466,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1470,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1481,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1480,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1477,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1476,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1288,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1479,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1482,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1458,
															"id": 1483,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1462,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1461,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1464,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1528,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1497,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1504,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1496,
															"id": 1505,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1500,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1499,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1528,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1515,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1521,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1523,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1512,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1512,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1519,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1528,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1529,
							"src": "195:6066:8",
							"usedErrors": [
								1283,
								1288,
								1291
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1558
						]
					},
					"id": 1559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1531,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1558,
							"linearizedBaseContracts": [
								1558
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1538,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1558,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1545,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1547,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1558,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1553,
												"id": 1555,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1558,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1559,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1627
						]
					},
					"id": 1628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1561,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:10",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1627,
							"linearizedBaseContracts": [
								1627
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1564,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1674:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1567,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1720:36:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1569,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1763:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:10",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1572,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:10"
									},
									"src": "1850:37:10"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1907:38:10",
										"statements": [
											{
												"expression": {
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1575,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "1917:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1576,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "1927:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:10"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:10"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:10"
									},
									"scope": 1627,
									"src": "1893:52:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2346:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1583,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2356:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:10"
											},
											{
												"id": 1586,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1587,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "2398:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:10"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:10",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1591,
									"name": "nonReentrant",
									"nameLocation": "2331:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:10"
									},
									"src": "2322:103:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "2470:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1594,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2558:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1595,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2569:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2554:86:10",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "2578:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1597,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "2599:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1599,
															"nodeType": "RevertStatement",
															"src": "2592:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1602,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2714:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2724:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:10"
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:10"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:10"
									},
									"scope": 1627,
									"src": "2431:307:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "2782:170:10",
										"statements": [
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1610,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2924:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1611,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2934:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:10"
											}
										]
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:10"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:10"
									},
									"scope": 1627,
									"src": "2744:208:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "3195:42:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "3212:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1622,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "3223:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1624,
												"nodeType": "Return",
												"src": "3205:25:10"
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:10",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:10"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3189:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:10"
									},
									"scope": 1627,
									"src": "3131:106:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1628,
							"src": "886:2353:10",
							"usedErrors": [
								1572
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:10"
				},
				"id": 10
			},
			"contracts/GlobalChat.sol": {
				"ast": {
					"absolutePath": "contracts/GlobalChat.sol",
					"exportedSymbols": {
						"Address": [
							1528
						],
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"GlobalChat": [
							1936
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							985
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1627
						],
						"SafeERC20": [
							1275
						]
					},
					"id": 1937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1629,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1630,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 878,
							"src": "65:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 1276,
							"src": "122:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1632,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 1628,
							"src": "188:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 148,
							"src": "248:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 924,
							"src": "301:74:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1635,
										"name": "Ownable",
										"nameLocations": [
											"400:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "400:7:11"
									},
									"id": 1636,
									"nodeType": "InheritanceSpecifier",
									"src": "400:7:11"
								},
								{
									"baseName": {
										"id": 1637,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"409:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1627,
										"src": "409:15:11"
									},
									"id": 1638,
									"nodeType": "InheritanceSpecifier",
									"src": "409:15:11"
								}
							],
							"canonicalName": "GlobalChat",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1936,
							"linearizedBaseContracts": [
								1936,
								1627,
								147,
								1558
							],
							"name": "GlobalChat",
							"nameLocation": "386:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1642,
									"libraryName": {
										"id": 1639,
										"name": "SafeERC20",
										"nameLocations": [
											"437:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1275,
										"src": "437:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "431:34:11",
									"typeName": {
										"id": 1641,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1640,
											"name": "ERC20Burnable",
											"nameLocations": [
												"451:13:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 923,
											"src": "451:13:11"
										},
										"referencedDeclaration": 923,
										"src": "451:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$923",
											"typeString": "contract ERC20Burnable"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "55a373d6",
									"id": 1645,
									"mutability": "mutable",
									"name": "tokenContract",
									"nameLocation": "492:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "471:34:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20Burnable_$923",
										"typeString": "contract ERC20Burnable"
									},
									"typeName": {
										"id": 1644,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1643,
											"name": "ERC20Burnable",
											"nameLocations": [
												"471:13:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 923,
											"src": "471:13:11"
										},
										"referencedDeclaration": 923,
										"src": "471:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$923",
											"typeString": "contract ERC20Burnable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "185870f9",
									"id": 1647,
									"mutability": "mutable",
									"name": "developerWallet",
									"nameLocation": "526:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "511:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1646,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1293092e",
									"id": 1650,
									"mutability": "mutable",
									"name": "messageCost",
									"nameLocation": "562:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "547:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1648,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1649,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "576:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7862f04c",
									"id": 1653,
									"mutability": "mutable",
									"name": "developerFeePercentage",
									"nameLocation": "689:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "674:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1651,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1652,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "714:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GlobalChat.Message",
									"id": 1660,
									"members": [
										{
											"constant": false,
											"id": 1655,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "825:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1660,
											"src": "817:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1654,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1657,
											"mutability": "mutable",
											"name": "content",
											"nameLocation": "848:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1660,
											"src": "841:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1656,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "841:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1659,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "873:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1660,
											"src": "865:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1658,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Message",
									"nameLocation": "799:7:11",
									"nodeType": "StructDefinition",
									"scope": 1936,
									"src": "792:97:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d80fefd",
									"id": 1664,
									"mutability": "mutable",
									"name": "messages",
									"nameLocation": "912:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "895:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
										"typeString": "struct GlobalChat.Message[]"
									},
									"typeName": {
										"baseType": {
											"id": 1662,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1661,
												"name": "Message",
												"nameLocations": [
													"895:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1660,
												"src": "895:7:11"
											},
											"referencedDeclaration": 1660,
											"src": "895:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
												"typeString": "struct GlobalChat.Message"
											}
										},
										"id": 1663,
										"nodeType": "ArrayTypeName",
										"src": "895:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage_ptr",
											"typeString": "struct GlobalChat.Message[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9428cda3",
									"id": 1669,
									"mutability": "mutable",
									"name": "userMessages",
									"nameLocation": "963:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1936,
									"src": "926:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1668,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1665,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "926:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1666,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "945:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1667,
											"nodeType": "ArrayTypeName",
											"src": "945:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e8130",
									"id": 1675,
									"name": "MessageSent",
									"nameLocation": "988:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1016:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1000:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1029:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1022:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1022:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:38:11"
									},
									"src": "982:56:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7",
									"id": 1679,
									"name": "TokensBurned",
									"nameLocation": "1049:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1070:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1062:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:16:11"
									},
									"src": "1043:35:11"
								},
								{
									"anonymous": false,
									"eventSelector": "69e27f80547602d16208b028c44d20f25956e1fb7d0f51d62aa02f392426f371",
									"id": 1683,
									"name": "FeePaid",
									"nameLocation": "1089:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1105:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1097:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:16:11"
									},
									"src": "1083:30:11"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1223:183:11",
										"statements": [
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1694,
														"name": "tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "1233:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Burnable_$923",
															"typeString": "contract ERC20Burnable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1696,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "1263:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1695,
															"name": "ERC20Burnable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "1249:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$923_$",
																"typeString": "type(contract ERC20Burnable)"
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1249:29:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Burnable_$923",
															"typeString": "contract ERC20Burnable"
														}
													},
													"src": "1233:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20Burnable_$923",
														"typeString": "contract ERC20Burnable"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "1233:45:11"
											},
											{
												"expression": {
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1700,
														"name": "developerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "1288:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1701,
														"name": "_developerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "1306:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1288:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "1288:34:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1705,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1350:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1354:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1350:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1704,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1332:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "1332:29:11"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1690,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1211:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1215:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1211:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1692,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1689,
												"name": "Ownable",
												"nameLocations": [
													"1203:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1203:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1203:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "1148:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1140:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "_developerWallet",
												"nameLocation": "1180:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1172:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:72:11"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:0:11"
									},
									"scope": 1936,
									"src": "1119:287:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "1533:38:11",
										"statements": []
									},
									"functionSelector": "715018a6",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1713,
												"name": "onlyOwner",
												"nameLocations": [
													"1523:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1523:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1523:9:11"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1487:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1514:8:11"
									},
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1504:2:11"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1533:0:11"
									},
									"scope": 1936,
									"src": "1478:93:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "1816:39:11",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1724,
														"name": "messageCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "1826:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1725,
														"name": "_newCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "1840:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1826:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "1826:22:11"
											}
										]
									},
									"functionSelector": "aface8cd",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1721,
												"name": "onlyOwner",
												"nameLocations": [
													"1806:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1806:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1806:9:11"
										}
									],
									"name": "setMessageCost",
									"nameLocation": "1766:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "_newCost",
												"nameLocation": "1789:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1781:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:18:11"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:11"
									},
									"scope": 1936,
									"src": "1757:98:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "1951:122:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1737,
																"name": "_newPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "1969:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1969:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206665652070657263656e74616765",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157",
																"typeString": "literal_string \"Invalid fee percentage\""
															},
															"value": "Invalid fee percentage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f72be47e09c433cff91d0c97ed6378549a17c29bc29d6cbd73ed6a4c886f6157",
																"typeString": "literal_string \"Invalid fee percentage\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1961:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1961:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "1961:56:11"
											},
											{
												"expression": {
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1743,
														"name": "developerFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "2027:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1744,
														"name": "_newPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "2052:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2027:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "2027:39:11"
											}
										]
									},
									"functionSelector": "38daefb6",
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1733,
												"name": "onlyOwner",
												"nameLocations": [
													"1941:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1941:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1941:9:11"
										}
									],
									"name": "setDeveloperFeePercentage",
									"nameLocation": "1870:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "_newPercentage",
												"nameLocation": "1913:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "1905:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:38:11"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:0:11"
									},
									"scope": 1936,
									"src": "1861:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "2343:646:11",
										"statements": [
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "developerFee",
														"nameLocation": "2361:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1834,
														"src": "2353:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2353:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1757,
																	"name": "messageCost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "2377:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1758,
																	"name": "developerFeePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "2391:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2377:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2376:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2417:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2376:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2353:67:11"
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2438:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1834,
														"src": "2430:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2430:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1766,
														"name": "messageCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "2451:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1767,
														"name": "developerFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "2465:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2451:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2430:47:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2532:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2536:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2532:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "developerWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2556:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "developerFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "2585:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1770,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2488:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Burnable_$923",
																"typeString": "contract ERC20Burnable"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2502:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1062,
														"src": "2488:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2488:119:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "2488:119:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1782,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2648:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2652:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2648:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1786,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2668:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GlobalChat_$1936",
																		"typeString": "contract GlobalChat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GlobalChat_$1936",
																		"typeString": "contract GlobalChat"
																	}
																],
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2660:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2660:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2660:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2675:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1779,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2617:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Burnable_$923",
																"typeString": "contract ERC20Burnable"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2631:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1062,
														"src": "2617:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$877_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "2617:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1794,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2715:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1791,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "2696:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Burnable_$923",
																"typeString": "contract ERC20Burnable"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2710:4:11",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2696:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "2696:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1801,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2759:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2763:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1803,
																	"name": "_message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "2771:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"expression": {
																		"id": 1804,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2781:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2787:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2781:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1800,
																"name": "Message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "2751:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Message_$1660_storage_ptr_$",
																	"typeString": "type(struct GlobalChat.Message storage pointer)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:46:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Message_$1660_memory_ptr",
																"typeString": "struct GlobalChat.Message memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Message_$1660_memory_ptr",
																"typeString": "struct GlobalChat.Message memory"
															}
														],
														"expression": {
															"id": 1797,
															"name": "messages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "2737:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
																"typeString": "struct GlobalChat.Message storage ref[] storage ref"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2746:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2737:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Message_$1660_storage_$dyn_storage_ptr_$_t_struct$_Message_$1660_storage_$returns$__$attached_to$_t_array$_t_struct$_Message_$1660_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct GlobalChat.Message storage ref[] storage pointer,struct GlobalChat.Message storage ref)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "2737:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1814,
																	"name": "messages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "2838:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
																		"typeString": "struct GlobalChat.Message storage ref[] storage ref"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2847:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2838:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2856:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2838:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1809,
																"name": "userMessages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "2808:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1812,
															"indexExpression": {
																"expression": {
																	"id": 1810,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2821:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2825:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2821:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2808:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2833:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2808:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "2808:50:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1821,
															"name": "developerFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "2882:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1820,
														"name": "FeePaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "2874:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1823,
												"nodeType": "EmitStatement",
												"src": "2869:26:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1825,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2923:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1824,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "2910:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2910:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "EmitStatement",
												"src": "2905:29:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2961:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2965:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2961:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1831,
															"name": "_message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "2973:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1828,
														"name": "MessageSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "2949:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2949:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1833,
												"nodeType": "EmitStatement",
												"src": "2944:38:11"
											}
										]
									},
									"functionSelector": "469c8110",
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1753,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1752,
												"name": "nonReentrant",
												"nameLocations": [
													"2330:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "2330:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2330:12:11"
										}
									],
									"name": "sendMessage",
									"nameLocation": "2287:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "_message",
												"nameLocation": "2313:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "2299:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2299:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:24:11"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:0:11"
									},
									"scope": 1936,
									"src": "2278:711:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "3220:39:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1840,
														"name": "messages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3237:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
															"typeString": "struct GlobalChat.Message storage ref[] storage ref"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3246:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3237:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1842,
												"nodeType": "Return",
												"src": "3230:22:11"
											}
										]
									},
									"functionSelector": "147e9108",
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalMessages",
									"nameLocation": "3171:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3187:2:11"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3211:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:9:11"
									},
									"scope": 1936,
									"src": "3162:97:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "3468:200:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "3486:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1857,
																	"name": "messages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "3494:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
																		"typeString": "struct GlobalChat.Message storage ref[] storage ref"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3503:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3494:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3486:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65737361676520696e646578206f7574206f6620626f756e6473",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3511:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2",
																"typeString": "literal_string \"Message index out of bounds\""
															},
															"value": "Message index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e32d7e7f5b011492c43875308a6f5994f2dad8ac65152075995972af31b6b9a2",
																"typeString": "literal_string \"Message index out of bounds\""
															}
														],
														"id": 1855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3478:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3478:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "3478:63:11"
											},
											{
												"assignments": [
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "3567:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "3551:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
															"typeString": "struct GlobalChat.Message"
														},
														"typeName": {
															"id": 1864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1863,
																"name": "Message",
																"nameLocations": [
																	"3551:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1660,
																"src": "3551:7:11"
															},
															"referencedDeclaration": 1660,
															"src": "3551:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																"typeString": "struct GlobalChat.Message"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1869,
												"initialValue": {
													"baseExpression": {
														"id": 1866,
														"name": "messages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3577:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
															"typeString": "struct GlobalChat.Message storage ref[] storage ref"
														}
													},
													"id": 1868,
													"indexExpression": {
														"id": 1867,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "3586:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3577:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Message_$1660_storage",
														"typeString": "struct GlobalChat.Message storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3551:41:11"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1870,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "3610:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																	"typeString": "struct GlobalChat.Message storage pointer"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3618:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1655,
															"src": "3610:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1872,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "3626:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																	"typeString": "struct GlobalChat.Message storage pointer"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3634:7:11",
															"memberName": "content",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1657,
															"src": "3626:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 1874,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "3643:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																	"typeString": "struct GlobalChat.Message storage pointer"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3651:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1659,
															"src": "3643:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1876,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3609:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$",
														"typeString": "tuple(address,string storage ref,uint256)"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1877,
												"nodeType": "Return",
												"src": "3602:59:11"
											}
										]
									},
									"functionSelector": "2024c1b7",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageByIndex",
									"nameLocation": "3314:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3349:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3341:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:29:11"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3414:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3406:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "content",
												"nameLocation": "3436:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3422:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3422:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3453:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "3445:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:58:11"
									},
									"scope": 1936,
									"src": "3305:363:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "3824:42:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1887,
														"name": "userMessages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "3841:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1889,
													"indexExpression": {
														"id": 1888,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "3854:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3841:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1886,
												"id": 1890,
												"nodeType": "Return",
												"src": "3834:25:11"
											}
										]
									},
									"functionSelector": "ad039fad",
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserMessageIndexes",
									"nameLocation": "3735:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3774:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3766:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3756:28:11"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3806:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1883,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3806:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1884,
													"nodeType": "ArrayTypeName",
													"src": "3806:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:18:11"
									},
									"scope": 1936,
									"src": "3726:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "4106:300:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "4137:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1905,
																		"name": "userMessages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "4145:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1907,
																	"indexExpression": {
																		"id": 1906,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "4158:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4145:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4164:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4145:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4137:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d65737361676520696e646578206f7574206f6620626f756e647320666f722075736572",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4184:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b",
																"typeString": "literal_string \"Message index out of bounds for user\""
															},
															"value": "Message index out of bounds for user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e39cac3c6a81dccca95e4d02e5f4a5675c67791de8d6ca8af7e215c6799e1d0b",
																"typeString": "literal_string \"Message index out of bounds for user\""
															}
														],
														"id": 1903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4116:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4116:116:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "4116:116:11"
											},
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "globalIndex",
														"nameLocation": "4250:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "4242:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4242:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1915,
															"name": "userMessages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "4264:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1917,
														"indexExpression": {
															"id": 1916,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "4277:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4264:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1919,
													"indexExpression": {
														"id": 1918,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "4283:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4264:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4242:47:11"
											},
											{
												"assignments": [
													1923
												],
												"declarations": [
													{
														"constant": false,
														"id": 1923,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "4315:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "4299:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
															"typeString": "struct GlobalChat.Message"
														},
														"typeName": {
															"id": 1922,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1921,
																"name": "Message",
																"nameLocations": [
																	"4299:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1660,
																"src": "4299:7:11"
															},
															"referencedDeclaration": 1660,
															"src": "4299:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																"typeString": "struct GlobalChat.Message"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1927,
												"initialValue": {
													"baseExpression": {
														"id": 1924,
														"name": "messages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "4325:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Message_$1660_storage_$dyn_storage",
															"typeString": "struct GlobalChat.Message storage ref[] storage ref"
														}
													},
													"id": 1926,
													"indexExpression": {
														"id": 1925,
														"name": "globalIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "4334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4325:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Message_$1660_storage",
														"typeString": "struct GlobalChat.Message storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4299:47:11"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1928,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "4364:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																	"typeString": "struct GlobalChat.Message storage pointer"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4372:7:11",
															"memberName": "content",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1657,
															"src": "4364:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 1930,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "4381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Message_$1660_storage_ptr",
																	"typeString": "struct GlobalChat.Message storage pointer"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4389:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1659,
															"src": "4381:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1932,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4363:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$",
														"typeString": "tuple(string storage ref,uint256)"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1933,
												"nodeType": "Return",
												"src": "4356:43:11"
											}
										]
									},
									"functionSelector": "36913a40",
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserMessageByIndex",
									"nameLocation": "3970:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4009:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4001:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4001:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4031:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4023:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:51:11"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "content",
												"nameLocation": "4078:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4064:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4064:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4095:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4087:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4087:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4063:42:11"
									},
									"scope": 1936,
									"src": "3961:445:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1937,
							"src": "377:4031:11",
							"usedErrors": [
								13,
								18,
								1002,
								1283,
								1288,
								1291,
								1572
							],
							"usedEvents": [
								24,
								1675,
								1679,
								1683
							]
						}
					],
					"src": "32:4377:11"
				},
				"id": 11
			}
		}
	}
}